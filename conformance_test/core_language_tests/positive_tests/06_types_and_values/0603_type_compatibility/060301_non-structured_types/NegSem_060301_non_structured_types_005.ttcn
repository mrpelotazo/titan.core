/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:6.3.1, Ensure that the IUT correctly handles assignments from incompatible type ranges 
 ** @verdict  pass reject
 ***************************************************/

module NegSem_060301_non_structured_types_005 { 
    type bitstring ConstrainedBitString ('01'B, '10'B, '11'B);

	type component GeneralComp {	    	    
	}	

	testcase TC_NegSem_060301_non_structured_types_005() runs on GeneralComp {

		var bitstring v_bitstr := '00'B; 
		var ConstrainedBitString v_constrainedBitstr;
		
		
		v_constrainedBitstr:=v_bitstr; // value '00'B not in ConstrainedBitString type

		if(v_constrainedBitstr == '00'B)
		{ setverdict(pass); }
		else
		{ setverdict(fail); }

	}

	control{
		execute(TC_NegSem_060301_non_structured_types_005());
	}

}
