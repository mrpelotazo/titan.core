/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:6.3.4, compatible but not strongly typed value in send operation
 ** @verdict  pass reject
 ***************************************************/

// The following requirement is tested:
// The communication operations (see clause 22) send, receive, trigger, call, getcall, 
// reply, getreply and raise and connection operations connect, map, disconnect and 
// unmap (see clause 21.1) are exceptions to the weaker rule of type compatibility 
// and require strong typing. The types of values or templates directly used as 
// parameters to these operations shall also be explicitly defined in the associated
// port type definition.

module NegSem_060304_compatibility_of_communication_operations_001
{
    type port P message {
        inout charstring;
    } with {extension "internal"} 
    
    type component GeneralComp {
        port P p;
	} 
    
    type charstring MyString; // synonym
    
    testcase TC_NegSem_060304_compatibility_of_communication_operations_001() runs on GeneralComp {

		connect(self:p,self:p); 
       
        p.send(MyString:"abc");
        setverdict(pass);
	}
	
	control {        
		execute(TC_NegSem_060304_compatibility_of_communication_operations_001());
	}
}
