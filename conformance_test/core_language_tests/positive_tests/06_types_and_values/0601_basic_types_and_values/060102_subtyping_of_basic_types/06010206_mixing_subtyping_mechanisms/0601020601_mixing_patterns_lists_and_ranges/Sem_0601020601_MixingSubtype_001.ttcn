/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:6.1.2.6.1, Assign values to mixed restricted floats.
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/
module Sem_0601020601_MixingSubtype_001 {
    type float lessThanPiAndNaN (-infinity .. 3142E-3, not_a_number);

    type component GeneralComp {}
    
    testcase TC_Sem_0601020601_MixingSubtype_001() runs on GeneralComp {
        var lessThanPiAndNaN v_f;
        v_f := 3.14E0;
        v_f := 0.0;
        v_f := -4E40;
        v_f := not_a_number;
		setverdict(pass);
    }
    
    control{
        execute(TC_Sem_0601020601_MixingSubtype_001());
    }
}