/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:6.2.4, modulepar with the same name as one of enumerated values of the imported parent type
 ** @verdict  pass reject
 ***************************************************/

// The following requirement is tested:
// When a TTCN-3 module parameter, formal parameter, constant, variable, 
// non-parameterized template or parameterized template with all formal 
// parameters having default values of an imported enumerated type is defined, 
// the name of that definition shall not be the same as any of the enumerated 
// values of that type.

module NegSem_060204_enumerated_type_and_values_006 {

    import from NegSem_060204_enumerated_type_and_values_006_import all;
    
    type component GeneralComp {
	}
    
    modulepar EDays Monday := Tuesday;
        
    testcase TC_NegSem_060204_enumerated_type_and_values_006() runs on GeneralComp {   
        log(Monday);
        setverdict(pass);
	}
	
	control {
		execute(TC_NegSem_060204_enumerated_type_and_values_006());
	}
}
