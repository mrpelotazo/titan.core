/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:6.2.0.6, ensure that anytype can have an set value and set value can be anytype
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/
module Sem_060206_anytype_011 {

 	type component GeneralComp {	    	    
	}

	type set MySet
	{
		integer First,
		charstring Second,
		anytype Third	//3rd element of this type of set is anytype
	}
 
	testcase TC_Sem_060206_anytype_011() runs on GeneralComp {

		var anytype c;
		var MySet S; // Set S from type MySet

		c.MySet.Second := "abc";	// anytype c becomes a charstring
		S.Third.float:=15.5; // The 3rd element in set S is now becomes a float with value 15.5
	
 
     	if ( match(c.MySet.Second, "abc") and match(S.Third.float, 15.5)) {
	    	setverdict(pass);
      	}
      	else {
	    	setverdict(fail);
	 	}

	}

	control {
		execute(TC_Sem_060206_anytype_011());
	}

}
with {
	extension "anytype MySet, float"
}
