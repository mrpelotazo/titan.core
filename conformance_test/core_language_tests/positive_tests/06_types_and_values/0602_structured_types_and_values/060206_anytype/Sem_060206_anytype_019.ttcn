/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:6.2.0.6, ensure that anytype (as a user defined type) can be imported from another module
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

module Sem_060206_anytype_019 {
	import from Sem_060206_anytype_019_import all;		// this contains a type (anytype) MyAnyType

	type component GeneralComp {
		var MyAnyType x;	// MyAnyType is an anytype defined in module Sem_060206_anytype_017_import
		var MyAnyType y;
	}

	
	testcase TC_Sem_060206_anytype_019() runs on GeneralComp {

		x.float := 10.0E0;		//anytype x is now a float with value 10.0
		y.bitstring := '1010'B; //anytype y is now a bitstring with value 1010
	
      	if (match(x.float, 10.0E0) and match(y.bitstring, '1010'B)) {
	    	setverdict(pass);
      	}
      	else {
	    	setverdict(fail);
	  	}

	}

	control {
		execute(TC_Sem_060206_anytype_019());
	}

}
