/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:6.2.3, fixed-size record-of as a set-of value index on left hand side (less items than record-of dimension)
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

// The following requirement is tested:
// For nested record of or set of types, an array or record of integer restricted 
// to a single size can be used as a short-hand notation for a nested index
// notation.

module Sem_060203_records_and_sets_of_single_types_038 {

	type component GeneralComp {	    	    
	}
 
    type record length(2) of integer Indexer;
	type set of set of set of integer SoSoSoI;
	
	testcase TC_Sem_060203_records_and_sets_of_single_types_038() runs on GeneralComp {

		var SoSoSoI v_set := {{{0, 1}, {2, 3}}, {{4, 5, 6}, {7, 8}}};
        var Indexer v_index := { 1, 0 }
        v_set[v_index] := { 100, - };
		if (v_set == {{{0, 1}, {2, 3}}, {{100, 5}, {7, 8}}}) {
			setverdict(pass);
		} else {
			setverdict(fail);
		}
	}
	
	control {
		execute(TC_Sem_060203_records_and_sets_of_single_types_038());
	}

}
