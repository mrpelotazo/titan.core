/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:6.2.13.2, ensure that list subtyping check for record types is properly handled
 ** @verdict  pass reject
 ***************************************************/
module NegSem_06021302_ListSubtyping_002 {
 	type record MyRecord {
	  	integer f1 optional,
	  	charstring f2,
	  	charstring f3
 	}
 
 	type MyRecord MyRecordSub1 (
  		{ f1 := -, f2 := "user", f3 := "password" },
  		{ f1 := -, f2 := "User", f3 := "Password" }
  	); // a valid subtype of MyRecord containing 2 values
  
  	type MyRecordSub1 MyRecordSub2 (
   		{ f1 := 1, f2 := "user", f3 := "password" }, 
   		{ f1 := 2, f2 := "user", f3 := "Password" }
  	); //invalid subtype, contains wrong combination of f2 and f3
  
}
