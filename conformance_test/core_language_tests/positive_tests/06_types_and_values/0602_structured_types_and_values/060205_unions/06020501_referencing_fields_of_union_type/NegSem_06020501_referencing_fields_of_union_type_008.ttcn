/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:6.2.5.1, referencing alternative of omitted union on right hand side of assignment
 ** @verdict  pass reject
 ***************************************************/

// The following requirement is tested:
// When an alternative of a union type is referenced on the right hand side of 
// an assignment an error shall occur if the referenced alternative is not the 
// currently chosen alternative or if the referenced union field or value is omitted 
// or uninitialized.

module NegSem_06020501_referencing_fields_of_union_type_008 {  
    type component GeneralComp {
	}
    
    type union U {	
		integer option1,
		charstring option2
	}
    
    type record R {
        integer field1,
        U field2 optional
    }

    testcase TC_NegSem_06020501_referencing_fields_of_union_type_008() runs on GeneralComp {
		var R v_rec;
        v_rec.field1 := 5;
        v_rec.field2 := omit;
        if (v_rec.field2.option1 !=  100) { setverdict(pass); }
        else { setverdict(fail); }
	}

	control{
		execute(TC_NegSem_06020501_referencing_fields_of_union_type_008());
	}
}