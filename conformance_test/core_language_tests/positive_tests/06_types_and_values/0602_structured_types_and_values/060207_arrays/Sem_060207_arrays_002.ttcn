/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:6.2.7, verify assignment of explicitly identified elements to arrays
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/
 
// The following requirement is tested:
// Values may be assigned individually by a value list notation or indexed notation 
// or more than one or all at once by a value list notation or index assignment 
// notation. 
// Elements to be left out from the assignment shall be explicitly skipped in the 
// list by using dash.
 
module Sem_060207_arrays_002 {

	type component GeneralComp {
	}

    type integer MyArrayType1[3] (1 .. 10);
 
	testcase TC_Sem_060207_arrays_002() runs on GeneralComp {

        var MyArrayType1 v_array1 := { 
            [0] := 8,
            [1] := 1,
            [2] := - 
        };

		if (match(v_array1[0], 8) and match(v_array1[1], 1) and not isbound(v_array1[2])
			and lengthof (v_array1 & {2}) == 4) {
			setverdict(pass);
		}
		else {
			setverdict(fail);
		}
	}

	control {
		execute(TC_Sem_060207_arrays_002());
	}

}
