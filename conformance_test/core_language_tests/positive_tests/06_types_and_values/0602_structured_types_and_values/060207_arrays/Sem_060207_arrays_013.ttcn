/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:6.2.7, ensure that the two dimensional array type referencing is correctly handled
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/
module Sem_060207_arrays_013 {

// The following requirement is tested:
// Individual elements of multi-dimensional arrays can be accessed by repeated use of 
// the index notation. 
// For assigning values to multi-dimensional arrays, each dimension that is assigned 
// shall resolve to a set of values enclosed in curly braces. 

 type component GeneralComp {
 }

 
 type integer MyArrayType1[2][3] (1 .. 10);
 
 
testcase TC_Sem_060207_arrays_013() runs on GeneralComp {

  var MyArrayType1 v_array1 := {{8, 10, 9},
                                {2, 3, 4}};

  if (v_array1[1][1]==3) {
    setverdict(pass);
  }
  else {
    setverdict(fail);
  }

}

control {
    execute(TC_Sem_060207_arrays_013());
}

}
