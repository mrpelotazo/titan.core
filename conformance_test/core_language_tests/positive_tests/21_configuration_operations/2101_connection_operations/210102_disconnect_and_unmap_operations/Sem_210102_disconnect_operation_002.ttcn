/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.2
 ** @purpose  1:21.1.1, Ensure that disconnect has no effect on components that are not connected
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

module Sem_210102_disconnect_operation_002{
  
    type port P message {
        inout integer
    } with {extension "internal"}

    type component GeneralComp
    {
        port P p;
    }
    
	function f() runs on GeneralComp
	{
		if(p.checkstate("Mapped")) {
			setverdict(pass);			
		} else {
			setverdict(fail);
		}
	}
	
    testcase TC_Sem_210102_disconnect_operation_002() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptc1 := GeneralComp.create, 
			v_ptc2 := GeneralComp.create;

		map(v_ptc1:p, system:p);

		disconnect(v_ptc1:p, v_ptc2:p); // acceptable even when not connected
		
        v_ptc1.start(f());
		all component.done;
    }
    control{
        execute(TC_Sem_210102_disconnect_operation_002());
    }
}

