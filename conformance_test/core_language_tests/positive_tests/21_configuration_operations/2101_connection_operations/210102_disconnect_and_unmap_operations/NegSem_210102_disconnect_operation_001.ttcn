/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:21.1.2, Ensure that mapped port cannot disconnect
 ** @verdict  pass reject
 ***************************************************/
// System and component interface cannot disconnect
module NegSem_210102_disconnect_operation_001{
  
    type port myport message {
        inout integer
    } with {extension "internal"}

    type component Mysystem
    {
        port myport messagePort;
    }

    function f() runs on Mysystem {}
	
    testcase TC_NegSem_210102_disconnect_operation_001() runs on Mysystem system Mysystem {
        var Mysystem MyCompA;
	
        MyCompA:=Mysystem.create;

        map(MyCompA:messagePort,system:messagePort);

        MyCompA.start(f());

        disconnect(MyCompA:messagePort,system:messagePort); // system interface cannot disconnect

    }
    control{
        execute(TC_NegSem_210102_disconnect_operation_001());
    }
}

