/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:21.1.2, Verify that the param part can be skipped in unmap operations
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

// The following requirements are tested:
// Restriction b:
// In unmap operations, param clauses are optional.

module Sem_210102_disconnect_and_unmap_operations_012 { 

	type port P message {
		inout integer;
		unmap param (integer p_par1);
	} with {extension "internal"}

	type component GeneralComp {
		port P p
	}

	testcase TC_Sem_210102_disconnect_and_unmap_operations_012() runs on GeneralComp system GeneralComp {
		map(system:p, self:p);
		unmap(self:p, system:p);
		if(not p.checkstate("Mapped")) {
			setverdict(pass);			
		} else {
			setverdict(fail);
		}

	}
	
	control{
	    execute(TC_Sem_210102_disconnect_and_unmap_operations_012());
	}
}
