/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:21.3.5, partially initialized array in any from ComponentArrayRef.alive
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// The ComponentArrayRef shall be a reference to a completely initialized component array.

module NegSem_210305_alive_operation_006 {

    type port P message {
        inout integer;
    } with {extension "internal"}
    
    type component GeneralComp {
        port P p;
    }

	function f() runs on GeneralComp {
		p.receive(integer:?);
	}
	
    testcase TC_NegSem_210305_alive_operation_006() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptcs[2];
        v_ptcs[0] := GeneralComp.create alive;
        v_ptcs[0].start(f());
		if (any from v_ptcs.alive) {
            setverdict(pass);
		}
    }

    control {
        execute(TC_NegSem_210305_alive_operation_006(), 5.0);
    }
}
