/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:21.3.8, Verify that any from killed matches if at least one component is stopped or killed
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/
// The following requirements are tested:
// When the any from component array notation is used, the components from the referenced array 
// are iterated over and individually checked for being killed from innermost to outermost 
// dimension from lowest to highest index for each dimension. The first component to be found 
// killed causes the killed operation to succeed.
module Sem_210308_killed_operation_005 {

    type component GeneralComp {}

	function f(float p_time) runs on GeneralComp {
		timer t := p_time;
		t.start;
		t.timeout;
	}
	
    testcase TC_Sem_210308_killed_operation_005() runs on GeneralComp system GeneralComp {
		const integer c_size := 4;
        var GeneralComp v_ptc[c_size];
		timer t := 2.0;

		for (var integer i := 0; i < c_size; i := i + 1) {
			v_ptc[i] := GeneralComp.create;
			if (i == 3) { v_ptc[i].start(f(1.0)); }
			else { v_ptc[i].start(f(100.0)); }
		}

		t.start;
		t.timeout;

        alt
		{
        	[] any from v_ptc.killed { setverdict(pass); }
			[else] { setverdict(fail, "The any from killed operation didn't found killed component"); } 
		}
    }

    control {
        execute(TC_Sem_210308_killed_operation_005(), 5.0);
    }
}
