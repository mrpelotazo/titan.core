/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:21.3.7, storing verdict in all component.done operation
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// The (optional) value clause for storing the final local verdict of a PTC shall not be used
// in combination with all component or any component.

module NegSem_210307_done_operation_009 {

    type component GeneralComp {}

	function f() runs on GeneralComp {
		setverdict(pass);
	}
	
    testcase TC_NegSem_210307_done_operation_009() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptc := GeneralComp.create;
        var verdicttype v_verdict;
        v_ptc.start(f());
		alt {
			[] all component.done -> value v_verdict { 
                setverdict(pass);
            }
		}
    }

    control {
        execute(TC_NegSem_210307_done_operation_009(), 5.0);
    }
}