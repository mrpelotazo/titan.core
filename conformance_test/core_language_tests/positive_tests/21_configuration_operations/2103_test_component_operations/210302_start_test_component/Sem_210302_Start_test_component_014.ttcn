/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:21.3.2, Ensure that inout parameters will be passed to the function by value, i.e. like in-parameters.
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/
// Possible return values of a function invoked in a start test component operation, 
// i.e. templates denoted by return keyword or inout and out parameters, have no effect 
// when the started test component terminates.

module Sem_210302_Start_test_component_014 {

    type component GeneralComp {
       var integer v_var := 5;
    }
	
    function f() runs on GeneralComp return integer {
    	v_var := 1;
    	return v_var;  // return value v_var:=1
    }
	
    testcase TC_Sem_210302_Start_test_component_014() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptc := GeneralComp.create alive;
		v_ptc.start(f());
		v_ptc.done;

         if(match(v_var,5)){ 
             setverdict(pass); 
         }
        else { 
            setverdict(fail,v_var); 
        }
    }

    control {
        execute(TC_Sem_210302_Start_test_component_014());
    }
}
