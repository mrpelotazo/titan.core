/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:21.3.2, altstep in test component start operation
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

// The following requirements are tested:
// The start operation shall bind the required behaviour to the test component. This 
// behaviour is defined by reference to an already defined function or altstep.
// NOTE: altstep support added in TTCN-3:2016 -> the test was changed to positive one.

module Sem_210302_Start_test_component_011 { 

	type port P message {
		inout integer;
	}

	type component GeneralComp {
        port P p;
	}
    
    altstep a_test() runs on GeneralComp {
        [] p.receive(integer:?) {
            setverdict(pass);
        }
    }
    
	testcase TC_Sem_210302_Start_test_component_011() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptc := GeneralComp.create("PTC");
        connect(self:p, v_ptc:p);
		p.send(1);
        v_ptc.start(a_test());
        v_ptc.done;
		setverdict(pass);
	}
	
	control{
	    execute(TC_Sem_210302_Start_test_component_011());
	}
}
