/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:22.4, verify that a runtime error is generated if the real sender is incompatible with the variable in sender redirect assignment 
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// If the operation contains a sender clause but no from clause, the sender shall be type 
// compatible with the variable or parameter referenced in the sender clause.

module NegSem_2204_the_check_operation_005 {

    type integer address;
    
    type port P message {
		inout integer;
	} with {extension "internal"}
	
    type component GeneralComp {
		port P p;
	}
	    
    testcase TC_NegSem_2204_the_check_operation_005() runs on GeneralComp {
        var address v_addr := 2;
		var GeneralComp v_ptc;
        p.send(100) to v_addr;
        alt {
            [] p.check(-> sender v_ptc) { }
            [] p.check {}
        }
        setverdict(pass);
    }

    control {
        execute(TC_NegSem_2204_the_check_operation_005()/*, 5.0*/);
    }
}
