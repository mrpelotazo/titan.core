/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:22.3.3, null component in the to clause of the reply operation
 ** @verdict  pass reject
 ***************************************************/

// The following requirements are tested:
// No AddressRef shall contain the special value null at the time of the operation.

module NegSem_220303_ReplyOperation_002 { 


    signature S();

    type port P procedure {
        inout S;
    } with {extension "internal"}

    type component GeneralComp {
        port P p;
    }

    function f_server() runs on GeneralComp {
        var GeneralComp v_compRef := null;
		connect(self:p, v_compRef:p);
        p.getcall(S:{});
        p.reply(S:{}) to v_compRef;
    }
    
    testcase TC_NegSem_220303_ReplyOperation_002() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptc := GeneralComp.create("PTC");        
        connect(self:p, v_ptc:p);
        v_ptc.start(f_server());
        p.call(S:{}, 1.0) {
            [] p.getreply(S:{}) { }
            [] p.catch(timeout) { }
        }
        setverdict(pass);
    }

    control{
        execute(TC_NegSem_220303_ReplyOperation_002(), 5.0);
    }

}
