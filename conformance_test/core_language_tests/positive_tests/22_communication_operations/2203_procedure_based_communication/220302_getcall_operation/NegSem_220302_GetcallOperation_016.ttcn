/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:22.3.2, incompatible from and sender clause in getcall operation
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// If the getcall operation contains both from and sender clause, the variable or parameter 
// referenced in the sender clause shall be type compatible with the template in the from 
// clause.

module NegSem_220302_GetcallOperation_016 {

	signature S();
	
	type port P procedure {
		inout S;
	} with {extension "internal"}
	
    type component GeneralComp {
        var integer vc_int;
		port P p;
	}
    
    type component AltComp {
		var charstring vc_str;
        port P px;
	}
	
	function f() runs on GeneralComp {
        var GeneralComp v_compRef := null;
        alt {
	        [] p.getcall(S:{}) from AltComp:? -> sender v_compRef { } // error expected
            [] p.getcall(S:{}) { }
        }
        setverdict (pass);
	}
	
    testcase TC_NegSem_220302_GetcallOperation_016() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptc := GeneralComp.create;
		connect(self:p, v_ptc:p);
		p.call(S:{}, nowait);
		v_ptc.start(f());
		v_ptc.done;
        setverdict(pass);
    }

    control {
        execute(TC_NegSem_220302_GetcallOperation_016(), 5.0);
    }
}
