/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:22.3.2, Verify that error occurs when any from getcall is applied to single port
 ** @verdict  pass reject
 *****************************************************************/
// The following requirements are tested:
// Restriction g 
// The PortArrayRef shall be a reference to a port array variable identifier.
module NegSem_220302_GetcallOperation_004 {

	signature S();
	
	type port P procedure {
		inout S;
	} with {extension "internal"}
	
    type component GeneralComp {
		port P p;
	}
	
	function f() runs on GeneralComp
	{
		var integer v_index;
        alt
		{
        	[] any from p.getcall { setverdict(pass); }
			[else] { setverdict(fail, "The any from getcall operation didn't match for some reason"); } 
		}		
	}
	
    testcase TC_NegSem_220302_GetcallOperation_004() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptc := GeneralComp.create;
		connect(self:p, v_ptc:p);
		p.call(S:{}, nowait);
		v_ptc.start(f());
		v_ptc.done;
    }

    control {
        execute(TC_NegSem_220302_GetcallOperation_004(), 5.0);
    }
}
