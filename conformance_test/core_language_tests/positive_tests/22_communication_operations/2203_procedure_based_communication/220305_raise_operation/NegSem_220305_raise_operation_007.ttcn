/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:22.3.5, value of incorrect type in the to clause of the raise operation
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// All AddressRef items in the to clause shall be of type address, component or of the 
// address type bound to the port type (see clause 6.2.9) of the port instance referenced
// in the raise operation.

module NegSem_220305_raise_operation_007 {
	signature S() exception(integer);
	
	type port P procedure {
		inout S;
	} with {extension "internal"}
	
    type component GeneralComp 
	{
		port P p;
	}
	
    const charstring c_ptcName := "PTC";
    
	function f() runs on GeneralComp
	{
		p.getcall(S:{});
		p.raise(S, 1) to c_ptcName;
        setverdict(pass);
	}
	
    testcase TC_NegSem_220305_raise_operation_007() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptc := GeneralComp.create(c_ptcName);
		connect(self:p, v_ptc:p);
        v_ptc.start(f());
	    p.call(S:{}, nowait); 
		// no processing of the exception to avoid possible errors in the catch operation
        v_ptc.done;
    }

    control {
        execute(TC_NegSem_220305_raise_operation_007(), 5.0);
    }
}
