/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:22.2.1, missing to clause in case of one-to-many connections
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// Unicast, multicast and broadcast communication can be determined by the optional to clause
// in the send operation.  A to clause can be omitted in case of a one-to-one connection where
// unicast communication is used and the message receiver is uniquely determined by the test
// system structure.
// A to clause shall be present in case of one-to-many connections.

module NegSem_220201_SendOperation_005 {
	
	type port P message {
		inout integer;
	} with {extension "internal"}
	
    type component GeneralComp 
	{
		port P p;
	}
	
	function f(integer p_expected) runs on GeneralComp
	{
        alt {
            [] p.receive(p_expected) { setverdict(pass); }
            [] p.receive { setverdict(fail); }
        }
	}
    
    const integer c_ptcCount := 2;
	
    testcase TC_NegSem_220201_SendOperation_005() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptcs[c_ptcCount];

        for (var integer i := 0; i < c_ptcCount; i := i + 1) {
            v_ptcs[i] := GeneralComp.create;
            connect(self:p, v_ptcs[i]:p);
            v_ptcs[i].start(f(0));
        }

		p.send(0);
        all component.done;
        setverdict(pass);
    }

    control {
        execute(TC_NegSem_220201_SendOperation_005(), 5.0);
    }
}
