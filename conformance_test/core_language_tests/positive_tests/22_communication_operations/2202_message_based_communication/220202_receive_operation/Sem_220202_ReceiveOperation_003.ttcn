/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:22.2.2, Ensure that the IUT correctly handles message receiving operations 
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

module Sem_220202_ReceiveOperation_003 { 


    type port loopbackPort message {
	  	inout integer
	} with {extension "internal"}
	

	type component GeneralComp {	    	    
		port loopbackPort messagePort
	}	

	testcase TC_Sem_220202_ReceiveOperation_003() runs on GeneralComp {
 		var integer v_received:=0;

		connect(self:messagePort, self:messagePort);

 		messagePort.send(2); 

		alt {
		 	[] messagePort.receive(integer:?) -> value v_received { 
		   		if(v_received==2) {  //check that correct value has been stored
		    		setverdict(pass);
		   		}
		   		else {
		    		setverdict(fail);
		   		}
		 	}
		 	[] messagePort.receive {
		    	setverdict(fail);
		 	}
		}
	}

	control{
		execute(TC_Sem_220202_ReceiveOperation_003());
	}

}
