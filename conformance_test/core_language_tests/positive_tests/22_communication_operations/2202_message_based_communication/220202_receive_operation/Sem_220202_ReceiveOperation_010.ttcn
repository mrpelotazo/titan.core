/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:22.2.2, redirect assignment of message fields
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

// The following requirements are tested:
// As a special case the field reference can be absent to indicate that the whole 
// message shall be stored in a variable.

module Sem_220202_ReceiveOperation_010 {
	type record R {
        integer field1[2],
        charstring field2
    }
    
	type port P message {
		inout R;
	} with {extension "internal"}
	
    type component GeneralComp 
	{
		port P p;
	}
	
    testcase TC_Sem_220202_ReceiveOperation_010() runs on GeneralComp {
        var integer v_int;
        var charstring v_str;
        var R v_rec;

		connect(self:p, self:p);
        p.send(R:{ field1 := { 1, 2 }, field2 := "abc" });

        alt {
            [] p.receive(R:?) -> value ( v_int := field1[1], v_rec, v_str := field2) { 
                if (v_int == 2 and v_str == "abc" and v_rec == { field1 := { 1, 2 }, field2 := "abc" }) 					{ setverdict (pass); }
                else { setverdict(fail); }
            }
            [] p.receive { setverdict(fail); }
        }
    }

    control {
        execute(TC_Sem_220202_ReceiveOperation_010(), 5.0);
    }
}
