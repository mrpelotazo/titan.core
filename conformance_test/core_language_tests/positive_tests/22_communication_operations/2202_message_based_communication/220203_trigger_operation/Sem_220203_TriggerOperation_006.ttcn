/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:22.2.3, trigger with a from clause (single item)
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

// The following requirements are tested:
// In the case of one-to-many connections the trigger operation may be restricted 
// to a certain communication partner. This restriction shall be denoted using the 
// from keyword followed by a specification of an address or component reference, 
// a list of address or component references or any component.

module Sem_220203_TriggerOperation_006 {
	
	type port P message {
		inout integer;
	} with {extension "internal"}
	
    type component GeneralComp 
	{
		port P p;
	}
	
	function f(integer i) runs on GeneralComp
	{
        p.send(i);
	}
    
    const integer c_ptcCount := 3;
	
    testcase TC_Sem_220203_TriggerOperation_006() runs on GeneralComp system GeneralComp {
        var GeneralComp v_ptcs[c_ptcCount];
        var integer v_int;

        for (var integer i := 0; i < c_ptcCount; i := i + 1) {
            v_ptcs[i] := GeneralComp.create;
            connect(self:p, v_ptcs[i]:p);
            v_ptcs[i].start(f(i));
        }
        
        alt {
            [] p.trigger(integer:?) from v_ptcs[c_ptcCount - 1] -> value v_int { 
                if (v_int == c_ptcCount - 1) { setverdict(pass); } 
                else { setverdict(fail) };
            }
        }
    }

    control {
        execute(TC_Sem_220203_TriggerOperation_006(), 5.0);
    }
}
