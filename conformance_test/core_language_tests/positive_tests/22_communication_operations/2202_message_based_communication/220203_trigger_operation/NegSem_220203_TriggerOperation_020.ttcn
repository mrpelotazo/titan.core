/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:22.2.3, insufficient array dimension of variable in index redirection 
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
// If the index redirection is used for multi-dimensional port arrays, the size of the 
// integer array or record of integer type shall exactly be the same as the dimension of
// the respective array, and its type shall allow storing the highest index (from all 
// dimensions) of the array.

module NegSem_220203_TriggerOperation_020 {
	type port P message {
		inout integer;
	} with {extension "internal"}
	
    type component GeneralComp {
		port P p[3][2][3];
	}
	    
    testcase TC_NegSem_220203_TriggerOperation_020() runs on GeneralComp {
        var integer v_indices[2];

		connect(self:p[0][1][2], self:p[0][1][2]);
        p[0][1][2].send(100);
        any from p.trigger(integer:?) -> @index value v_indices;
        setverdict(pass);
    }

    control {
        execute(TC_NegSem_220203_TriggerOperation_020(), 5.0);
    }
}
