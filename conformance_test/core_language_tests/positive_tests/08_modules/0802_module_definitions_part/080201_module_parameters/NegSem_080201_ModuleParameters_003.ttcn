/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:8.2.1, Ensure that a port, default or component types cannot be module parameters.
 ** @verdict  pass reject
 *****************************************************************/

// The following requirements are tested:
/* Restriction B: Module parameters shall not be of port type,
 * default type or component type and shall not be of a structured type that contains a sub-element of 
 * port type at any level of nesting.*/

module NegSem_080201_ModuleParameters_003 {

	modulepar default MY_DEF := null;    // not allowed
	
	type component GeneralComp {	    	    
	}

	testcase TC_NegSem_080201_ModuleParameters_003() runs on GeneralComp {
		
		if (MY_DEF == null) {
			setverdict(pass);
		} else {
			setverdict(fail);
		}
	}
	
	control{
		execute(TC_NegSem_080201_ModuleParameters_003());
	}
	
}
