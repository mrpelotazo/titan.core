/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:8.2.1, Ensure that a reference to plain module parameter with a default value delivers the default value unless it is overwritten.
 ** @verdict  pass reject
 *****************************************************************/
// A module parameter shall only be of type address if the address type is explicitly defined within the associated module

module NegSem_080201_ModuleParameters_005 {

	modulepar address MY_ADDRESS_MODULE_PARAMETER := 2;    // error: address type not defined
	
	type component GeneralComp {
	}

	testcase TC_NegSem_080201_ModuleParameters_005() runs on GeneralComp {
		if (MY_ADDRESS_MODULE_PARAMETER == 2) {
			setverdict(pass);
		} else {
			setverdict(fail);
		}
	}
	
	control{
		execute(TC_NegSem_080201_ModuleParameters_005());
	}
	
}
