/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:8.2.3.1, Ensure that name handling of imported enumerations is properly handled
 ** @verdict  pass reject
 *****************************************************************/


module NegSem_08020301_GeneralFormatOfImport_001 {
	import from NegSem_08020301_GeneralFormatOfImport_001_import all;


	//according to CR5607 the following definitions are not allowed, name conflict must be detected
	const EnumType2 enumX := enumX;		
	const EnumType  enumY := enumX;

	type component GeneralComp {}

	testcase TC_NegSem_08020301_GeneralFormatOfImport_001() runs on GeneralComp {	
		var EnumType valami := enumX;

		if(enumX == valami)
		{ setverdict(pass); }
		else 
		{ setverdict(fail); }	
	}

	control{
    	execute(TC_NegSem_08020301_GeneralFormatOfImport_001());
	}		
	
}

