/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:8.2.3.1, Make sure that imported enumeration values take precedence over local definition
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

// The following requirements are tested:
// There is one exception to this rule: when in the context of an enumerated type 
// (see clause 6.2.4), an enumerated value is clashing with the name of a definition in 
// the importing module, the enumerated value shall take precedence and the definition 
// in the importing module shall be referenced by using its qualified name.

module Sem_08020301_GeneralFormatOfImport_004_import
{
	type enumerated EnumType {enumX, enumY, enumZ};
	const EnumType c_enumVal := enumX;
}
