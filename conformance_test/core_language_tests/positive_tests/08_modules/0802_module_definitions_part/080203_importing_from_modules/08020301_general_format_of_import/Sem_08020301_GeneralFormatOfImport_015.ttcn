/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:8.2.3.1, Verify that information about module parameter type is imported together with module parameter
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

// The following requirements are tested:
// Restriction d:
// A definition is imported together with all information of referenced definitions that 
// are necessary for the usage of the imported definition, independent of the visibility 
// of the referenced definitions.
// Table 8:
// Module parameter

module Sem_08020301_GeneralFormatOfImport_015 {

	import from Sem_08020301_GeneralFormatOfImport_015_import { modulepar PX_TEST };

	type component GeneralComp {}

	testcase TC_Sem_08020301_GeneralFormatOfImport_015() runs on GeneralComp {			
		// type compatibility is checked during assignment: for this check, the type information for PX_TEST
		// should be available at this point to compile the script correctly
		var integer v_test := PX_TEST;
		if (v_test == 0) { setverdict(pass); }
		else { setverdict(fail); }
	}
	
	control{
		// testing if parameter names are imported
		execute(TC_Sem_08020301_GeneralFormatOfImport_015()); 
	}
}

