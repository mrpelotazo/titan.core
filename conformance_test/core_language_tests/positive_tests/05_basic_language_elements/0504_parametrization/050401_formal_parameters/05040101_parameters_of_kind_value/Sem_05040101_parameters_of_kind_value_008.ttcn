/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:5.4.1.1, verify that altstep definition can contain in, out and inout value formal parameters
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

// The following requirement is tested:
// TTCN 3 supports value parameterization according to the following rules:
// - the language elements template, testcase, altstep and function support dynamic value 
// parameterization (i.e. this parameterization shall be resolved at runtime). Value formal 
// parameters may be in, inout or out parameters. The default for value formal parameters is 
// in parameterization which may optionally be denoted by the keyword in. Using of inout or out 
// kind of parameterization shall be specified by the keywords inout or out respectively.

module Sem_05040101_parameters_of_kind_value_008 { 

	type component GeneralComp {
	}
    
    altstep a(integer p_int1, in integer p_int2, out integer p_int3, inout integer p_int4) {
        [] any timer.timeout { setverdict(fail); }
        [else] { setverdict(pass); }
    }
	
	testcase TC_Sem_05040101_parameters_of_kind_value_008() runs on GeneralComp {
        var integer v_int1, v_int2 := 0;
        a(1, 2, v_int1, v_int2);
	}

	control{
		execute(TC_Sem_05040101_parameters_of_kind_value_008());
	}
}
