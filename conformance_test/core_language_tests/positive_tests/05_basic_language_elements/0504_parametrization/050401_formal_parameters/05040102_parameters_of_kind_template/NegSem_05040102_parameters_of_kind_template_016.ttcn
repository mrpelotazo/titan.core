/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:5.4.1.2, verify that inout formal template parameters cannot have lazy modifier
 ** @verdict  pass reject
 ***************************************************/

// The following requirement is tested:
// Restriction h)
// Only in template parameters can be declared lazy or fuzzy.

module NegSem_05040102_parameters_of_kind_template_016 { 

	type component GeneralComp {
	}	
	
    function f(inout template @lazy integer p_int) {
        p_int := ?;
    }
	testcase TC_NegSem_05040102_parameters_of_kind_template_016() runs on GeneralComp {
        var template integer v_int := 0;
        f(v_int);
        log(v_int);
        setverdict(pass);
	}

	control{
		execute(TC_NegSem_05040102_parameters_of_kind_template_016());
	}
}
