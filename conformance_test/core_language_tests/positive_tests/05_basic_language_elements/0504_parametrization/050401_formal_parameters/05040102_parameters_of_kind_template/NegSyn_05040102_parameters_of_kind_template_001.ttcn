/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:5.4.1.2, verify that module parameter of template kind is not allowed
 ** @verdict  pass reject
 ***************************************************/

// The following requirement is tested:
// Restriction a)
// Only function, testcase, altstep and template definitions may have formal template parameters.

module NegSyn_05040102_parameters_of_kind_template_001 { 
    modulepar template integer PX_TEMPLATE_PAR := 1;  
	
	type component GeneralComp {
	}	

	testcase TC_NegSyn_05040102_parameters_of_kind_template_001() runs on GeneralComp {
		if(valueof(PX_TEMPLATE_PAR) == 1)
		{ setverdict(pass);	}
		else
		{ setverdict(fail);	}
	}

	control 
	{
		execute(TC_NegSyn_05040102_parameters_of_kind_template_001());
	}  
}
