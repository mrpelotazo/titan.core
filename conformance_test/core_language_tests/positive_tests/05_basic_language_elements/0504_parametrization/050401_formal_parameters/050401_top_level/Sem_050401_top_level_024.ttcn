/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:5.4.1, verify that @fuzzy parameters containing component variable references are properly evaluated
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

// The following requirement is tested:
// Formal value or template parameters may be declared fuzzy using the @fuzzy modifier. The behaviour 
// of fuzzy parameters is defined in clause 3.1, definition of fuzzy values or templates. 

// Note: the test checks the situation described in NOTE 2:
// The actual values of component variables used in the delayed evaluation of a lazy or fuzzy parameter 
// may differ from their values at the time, when the parameterized function or alstep was called.

module Sem_050401_top_level_024 { 

	type component GeneralComp {
        var integer vc_int := 20;
	}
    
	function f(@fuzzy integer p_int) runs on GeneralComp {
        vc_int := 0;
        if (p_int == 1) { setverdict(pass); }
        else { setverdict(fail); }
	}
	
	testcase TC_Sem_050401_top_level_024() runs on GeneralComp {
		f(vc_int + 1);
	}

	control{
		execute(TC_Sem_050401_top_level_024());
	}
}
