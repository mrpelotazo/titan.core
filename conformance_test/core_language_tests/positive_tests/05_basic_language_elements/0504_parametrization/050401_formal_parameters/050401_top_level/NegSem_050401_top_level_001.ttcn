/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:5.4.1, verify that error is generated for incompatible actual value of in parameter
 ** @verdict  pass reject
 ***************************************************/

// The following requirement is tested:
// If parameters are passed by value (i.e. in case of in and out parameters), type compatibility 
// rules specified in 6.3 apply.

module NegSem_050401_top_level_001 {

	type component GeneralComp {
	}
    
	type record R1 {
		integer field1,
		integer field2
	}
    
	type record R2 {
		integer option1,
		integer option2 optional
	}
	
	function f(R2 p_rec) {
		if (match(p_rec, {1, 2})) {
			setverdict(pass);
		} else {
			setverdict(fail, "p_rec value not matching ", p_rec, R1:{1, 2});
		}
	}
	
	testcase TC_NegSem_050401_top_level_001() runs on GeneralComp {
		var R1 v_rec := {field1 := 1, field2 := 2};
		f(v_rec);
	}

	control{
		execute(TC_NegSem_050401_top_level_001());
	}
}
