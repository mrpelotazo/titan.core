/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:5.4.2, verify that the Example 5 can be executed
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

module Sem_050402_actual_parameters_199 { 

    type port P message {
        inout MyMessageType;
    } with {extension "internal"}
    
    type component GeneralComp {
        port P MyPCO;
	}
    
    // Given the message definition
    type record MyMessageType
    {
        integer field1,
        charstring field2,
        boolean field3
    }
    
    // A message template might be
    template MyMessageType MyTemplate(integer MyValue) :=
    {
        field1 := MyValue,
        field2 := pattern "abc*xyz",
        field3 := true
    }

    testcase TC_Sem_050402_actual_parameters_199(template MyMessageType RxMsg) runs on GeneralComp {
		connect(self:MyPCO,self:MyPCO);
        MyPCO.send(MyMessageType:{7, "abcdefxyz", true });
        MyPCO.receive(RxMsg);
        setverdict(pass);
	}

	control {
		execute(TC_Sem_050402_actual_parameters_199(MyTemplate(7)));
	}
}
