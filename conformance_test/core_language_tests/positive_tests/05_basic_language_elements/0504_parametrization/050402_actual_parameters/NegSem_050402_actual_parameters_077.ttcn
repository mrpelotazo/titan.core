/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:5.4.2, verify that constants cannot be used as inout formal template parameters of functions
 ** @verdict  pass reject
 ***************************************************/

// The following requirement is tested:
// Actual parameters that are passed to inout formal template parameters shall be variables, 
// template variables, formal value or template parameters (of in, inout or out 
// parameterization) of the current scope or references to elements of (template) variables 
// or formal (template) parameters of structured types.

module NegSem_050402_actual_parameters_077 { 

    type component GeneralComp {
	}	

    const integer c_val := 3;
    
    function f_test(inout template integer p_val) {
        if (match(3, p_val)) { setverdict(pass); }
        else { setverdict(fail); }
    }

    testcase TC_NegSem_050402_actual_parameters_077() runs on GeneralComp {
        f_test(c_val); // tested parameter passing
	}

	control {
		execute(TC_NegSem_050402_actual_parameters_077());
	}
}
