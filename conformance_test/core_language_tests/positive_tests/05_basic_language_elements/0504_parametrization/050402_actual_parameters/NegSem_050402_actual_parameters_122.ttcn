/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:5.4.2, verify that function calls passed to fuzzy formal parameters cannot contain inout parameters
 ** @verdict  pass reject
 ***************************************************/

// The following requirement is tested:
// Functions, called by actual parameters passed to fuzzy or lazy formal parameters 
// of the calling function, shall not have inout or out formal parameters. The called 
// functions may use other functions with inout or out parameters internally.

module NegSem_050402_actual_parameters_122 { 

    type component GeneralComp {
	}
    
    function f_eval(inout integer p_val) return integer {
        p_val := p_val + 1;
        return p_val;
    }
    
    function f_test (@fuzzy integer p_val) {
        if (p_val == 2) { setverdict(pass); }
        else { setverdict(fail); }
    }

    testcase TC_NegSem_050402_actual_parameters_122() runs on GeneralComp {
        var integer v_val := 0;
        f_test(1 + f_eval(v_val));
	}

	control {
		execute(TC_NegSem_050402_actual_parameters_122());
	}
}
