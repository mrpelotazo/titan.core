/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:5.4.2, verify that literals can be used as in formal value parameters of altsteps
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

// The following requirement is tested:
// Actual parameters that are passed by value to in formal value parameters shall be 
// variables, literal values, module parameters, constants, variables, value returning 
// (external) functions, formal value parameters (of in, inout or out parameterization) 
// of the current scope or expressions composed of the above.

module Sem_050402_actual_parameters_021 { 

    type component GeneralComp {
        timer t := 0.0;
	}	

    altstep a_test(integer p_val) runs on GeneralComp {
        []t.timeout {
            if (p_val == 1) { setverdict(pass); }
            else { setverdict(fail); }
        }
    }

    testcase TC_Sem_050402_actual_parameters_021() runs on GeneralComp {
        t.start;
        a_test(1); // tested parameter passing
	}

	control {
		execute(TC_Sem_050402_actual_parameters_021());
	}
}
