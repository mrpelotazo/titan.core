/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:5.4.2, verify that expressions can be used as in formal template parameters of functions
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

// The following requirement is tested:
// Actual parameters that are passed to in formal template parameters shall be literal 
// values, module parameters, constants, variables, value or template returning (external)
// functions, formal value parameters (of in, inout or out parameterization) of the current 
// scope or expressions composed of the above, as well as templates, template variables or 
// formal template parameters (of in, inout or out parameterization) of the current scope.

module Sem_050402_actual_parameters_065 { 

    type component GeneralComp {
    }
    
    function f_ret() return integer {
        return 4;
    }
    
    function f_test(in template integer p_val) {
        if (match(9, p_val)) { setverdict(pass); }
        else { setverdict(fail); }
    }
    
    testcase TC_Sem_050402_actual_parameters_065() runs on GeneralComp {
        var integer v_val := 5;
        f_test(10 + f_ret() - v_val); // tested parameter passing
	}

	control {
		execute(TC_Sem_050402_actual_parameters_065());
	}
}
