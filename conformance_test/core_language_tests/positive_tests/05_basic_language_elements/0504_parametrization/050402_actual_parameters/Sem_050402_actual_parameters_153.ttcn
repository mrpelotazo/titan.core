/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:5.4.2, verify that referencing rules are correctly applied to actual parameters of inout formal value parameters
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

// The following requirement is tested:
// When actual parameters that are passed to inout and out formal value or template 
// parameters contain a value or template reference, rules for using references on 
// the left hand side of assignments apply.

module Sem_050402_actual_parameters_153 { 

    type component GeneralComp {
	}
    
    type record R {
        integer field1,
        record {
            integer subfield1,
            integer subfield2
        } field2 optional
    }

    function f_test(inout integer p_val) {
        if (p_val == 2) { setverdict(pass); }
        else { setverdict(fail); }
        p_val := 10;
    }

    testcase TC_Sem_050402_actual_parameters_153() runs on GeneralComp {
        var R v_rec := {
            field1 := 1,
            field2 := {
                subfield1 := 2,
                subfield2 := 3
            }
        };
        f_test(v_rec.field2.subfield1); // tested parameter passing
        if (v_rec.field2.subfield1 == 10) { setverdict(pass); }
        else { setverdict(fail); }
	}

	control {
		execute(TC_Sem_050402_actual_parameters_153());
	}
}
