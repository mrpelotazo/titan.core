/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:5.4.2, verify that default parameters are evaluated in order of the formal parameter list (assignment notation)
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

// The following requirement is tested:
// If for some formal parameters no actual parameter has been provided, their default 
// values are taken and evaluated in the order of the formal parameter list.

module Sem_050402_actual_parameters_171 { 

    type component GeneralComp {
	}

    function f_eval1() return integer {
        setverdict(pass);
        return 1;
    }
    
    function f_eval2() return integer {
        if (getverdict != pass) { setverdict(fail); } // if f_eval was called, the verdict would be already pass
        return 2;
    }
    
    function f_test(integer p_par1 := f_eval1(), integer p_par2, integer p_par3 := f_eval2()) {
    }

    testcase TC_Sem_050402_actual_parameters_171() runs on GeneralComp {
        f_test(p_par2 := 0); // tested feature: f_eval1 shall be called before f_eval2
	}

	control {
		execute(TC_Sem_050402_actual_parameters_171());
	}
}
