/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:15.11, Ensure that the inline template definitions are correctly concatenated.
 ** @verdict  pass reject
 *****************************************************************/

module NegSem_1511_ConcatenatingTemplatesOfStringAndListTypes_004 {

	type component GeneralComp { }

	type record MyRecord {
		charstring field1,
		charstring field2
	}

	template MyRecord m_receiveTemplate := {
		field1 := pattern "AB*DE",
		field2 := "ABCC" & * & "EF"	//only specific values allowed when there is no pattern keyword
	}

	testcase TC_NegSem_1511_ConcatenatingTemplatesOfStringAndListTypes_004() runs on GeneralComp {
		var MyRecord v_value := {
			field1 := "AB*DE",
			field2 := "ABCCDE*EF"
		}

		if (match(v_value, m_receiveTemplate)) {
			setverdict(pass);
		} else {
			setverdict(fail);
		}
	}

	control{
		execute(TC_NegSem_1511_ConcatenatingTemplatesOfStringAndListTypes_004());
	}

}
