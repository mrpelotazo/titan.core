/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.2
 ** @purpose  1:15.11, Ensure that concatenations of record of charstrings are accepted.
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

module Sem_1511_ConcatenatingTemplatesOfStringAndListTypes_007 {

	type component GeneralComp { }

	type record of charstring RecOfChar;

	testcase TC_Sem_1511_ConcatenatingTemplatesOfStringAndListTypes_007() runs on GeneralComp {
		var template RecOfChar m_concatenation := {"ABC"} & {pattern "D*", pattern "E?" & "F"};

		var RecOfChar m_reference := {"ABC","D213","E2F"}; // some value that matches	

		if (match(m_reference,m_concatenation)) {
		    setverdict(pass);
		} else {
		    setverdict(fail);
		}
	}

	control{
		execute(TC_Sem_1511_ConcatenatingTemplatesOfStringAndListTypes_007());
	}

}
