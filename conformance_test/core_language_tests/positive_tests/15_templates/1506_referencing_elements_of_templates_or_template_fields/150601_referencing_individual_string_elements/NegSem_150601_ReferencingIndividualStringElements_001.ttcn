/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:15.6.1, Ensure that the referencing of individual string elements inside templates or template fields is forbidden.
 ** @verdict  pass reject
 *****************************************************************/

module NegSem_150601_ReferencingIndividualStringElements_001 {

	type component GeneralComp { }

	testcase TC_NegSem_150601_ReferencingIndividualStringElements_001() runs on GeneralComp {
		var template charstring m_char1 := "MYCHAR1";
		var template charstring m_char2;
	
		// illegal acchess. Instead, substr should be used.	
		m_char2 := m_char1[1];
	
		if (valueof(m_char2) == "Y") {
			setverdict(fail);
		} else {
			setverdict(pass);
		}
	}

	control{
		execute(TC_NegSem_150601_ReferencingIndividualStringElements_001());
	}

}
