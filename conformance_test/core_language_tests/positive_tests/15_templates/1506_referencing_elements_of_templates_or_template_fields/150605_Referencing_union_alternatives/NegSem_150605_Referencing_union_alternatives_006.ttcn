/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:15.6.5, Ensure that referencing an alternative of an address type, which actual value is null shall cause
 ** @verdict  pass reject
 *****************************************************************/

//Restriction d)
/*Special value null: referencing an alternative of an address type, which actual value is null shall cause
an error.*/


module NegSem_150605_Referencing_union_alternatives_006 {

    type integer address;
    
    type union My_Union {
        integer   u1,
        address   u2  
    }

    type component GeneralComp {  }	

    testcase TC_NegSem_150605_Referencing_union_alternatives_006() runs on GeneralComp {
        
    	var template integer m_template;

    	var template My_Union My_Template;
     	My_Template.u1 := 1;
     	My_Template.u2 := null;

		m_template := My_Template.u2;	//error: null
  
		setverdict(pass);

 	}

    control{
        execute(TC_NegSem_150605_Referencing_union_alternatives_006());
    }
}
