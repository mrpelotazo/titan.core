/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:15.6.3, Ensure that referencing an element within a value list causes an error in the context of record of.
 ** @verdict  pass reject
 *****************************************************************/

module NegSem_150603_ReferencingRecordOfAndSetElements_001 {

    type component GeneralComp { }

    type record of integer RoI;
    type record of RoI RoRoI;

    testcase TC_NegSem_150603_ReferencingRecordOfAndSetElements_001() runs on GeneralComp {
        var template RoI m_one;
        var template RoRoI m_two;
        template RoRoI constraint_value := {{},{0},{0,0},{0,0,0}};
	
        m_two := ( constraint_value, constraint_value ); // value list
        m_one := m_two[0]; // shall cause an error as we access a value list

        setverdict(fail);
    }

    control{
        execute(TC_NegSem_150603_ReferencingRecordOfAndSetElements_001());
    }

}