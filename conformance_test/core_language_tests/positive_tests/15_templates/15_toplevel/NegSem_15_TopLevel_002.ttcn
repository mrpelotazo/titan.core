/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:15, Ensure that a template formed from a union is rejected when the union somehow contains a port type field. 
 ** @verdict  pass reject
 *****************************************************************/

module NegSem_15_TopLevel_002 {

	type port MyPort message{
		inout integer
	} with {extension "internal"} ; 

	type component DummyComp {
		port MyPort myPort1
	}

	type component GeneralComp {}

	//type record MyRecord { //ports in types forbinded
	//	 MyPort myPort1
	//}

	type union MyUnion {
		integer choice1,
		DummyComp choice2
	}

	template MyUnion m_integerChosen := {
		choice1 := 5
	}

	testcase TC_NegSem_15_TopLevel_002() runs on GeneralComp 
	{ setverdict(fail);	}
	
	control
	{ execute(TC_NegSem_15_TopLevel_002()); }

}
