/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:24, Ensure setverdict and getverdict are allowed in atsteps
 ** @verdict  pass accept, noexecution
 ***************************************************/
/*
 * #reqname  /Requirements/24 Test verdict operations/Getverdict and setverdict operations shall only be used in test cases, altsteps and functions./Setverdict locations/Setverdict allowed in altsteps
 **/

module Syn_24_toplevel_003 {
	type record MessageType {
  		integer field
	} 

    type port MessagePort message {
		inout MessageType;
	} with {extension "internal"}

	type component GeneralComp {	    	    
		port MessagePort PCO1;
		port MessagePort PCO2;
		port MessagePort PCO3;
	}	

	altstep a_test_get_set_verdict() runs on GeneralComp { 
		var verdicttype v_verdict := getverdict;
  
		[] PCO1.receive {
			setverdict(pass);
		}
		[] PCO2.receive {
			setverdict(inconc);
		}
		[] PCO3.receive {
			setverdict(fail);
		}
	}

	testcase TC_Syn_24_toplevel_003() runs on GeneralComp {
		setverdict(pass);
	}

	control
	{
		execute(TC_Syn_24_toplevel_003());
	}
}
