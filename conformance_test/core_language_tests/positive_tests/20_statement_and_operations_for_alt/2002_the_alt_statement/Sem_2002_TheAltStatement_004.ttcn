/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:20.2, Ensure that activated defaults are processed in the reverse order (loopback case).
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

module Sem_2002_TheAltStatement_004 {

	type port MyPort message {
		inout charstring
	} with {extension "internal"}

	type component GeneralComp { 
		port MyPort p;
	}

	template charstring m_testOne := "ping1";
	template charstring m_testTwo := "ping2";
	template charstring m_testThree := "ping3"; // never sent!

	altstep a_first() runs on GeneralComp {
		[] p.receive(m_testTwo) {
		    setverdict(fail);
		}
	}

	altstep a_second() runs on GeneralComp {
		[] p.receive(m_testOne) {
		    setverdict(pass);
		}
	}

	testcase TC_Sem_2002_TheAltStatement_004() runs on GeneralComp {
		var default v_defaultOne := activate(a_first());
		var default v_defaultTwo := activate(a_second());

		connect(self:p, self:p);

		p.send(m_testOne);
		p.send(m_testTwo);
	
		alt {
		    [] p.receive(m_testThree) {
		        setverdict(fail);
		    }
		}
	}

	control {
		execute(TC_Sem_2002_TheAltStatement_004(), 2.0);  
		// if the altstep isn't handled after 2s, we raise an error
	}

}
