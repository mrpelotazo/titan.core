/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:20.2, dynamic error if a test component is completely blocked
 ** @verdict  pass reject
 *****************************************************************/

// The following requirement is tested:
// The test case shall stop and indicate a dynamic error if a test component is 
// completely blocked. This means none of the alternatives can be chosen, no 
// relevant test component is running, no relevant timer is running and all 
// relevant ports contain at least one message, call, reply or exception that 
// do not match.

module NegSem_2002_TheAltStatement_001 {

    type port MyPort message {
        inout charstring
    } with {extension "internal"}
    
    type component GeneralComp { 
	    port MyPort p;
    }
    
    template charstring m_test := "ping";
    
    testcase TC_NegSem_2002_TheAltStatement_001() runs on GeneralComp {
        timer t_tmr1;

		connect(self:p,self:p);	

	    p.send(m_test);
	    alt {
		    [] p.receive("abc") {
			    setverdict(pass);
		    }
            [] t_tmr1.timeout {
                setverdict(pass);
            }
	    }
    }
    
    control {
	    execute(TC_NegSem_2002_TheAltStatement_001());
    }
}
