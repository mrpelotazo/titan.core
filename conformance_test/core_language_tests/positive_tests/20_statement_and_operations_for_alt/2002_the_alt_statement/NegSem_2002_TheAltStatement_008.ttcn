/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:20.2, running (timer) in alt branch event
 ** @verdict  pass reject
 *****************************************************************/

// The following requirement is tested:
// Also, the event operation shall not use the operations create, running, alive
// and activate.

module NegSem_2002_TheAltStatement_008 {

    type port MyPort message {
        inout boolean
    } with {extension "internal"}
    
    type component GeneralComp { 
	    port MyPort p;
    }
    
    testcase TC_NegSem_2002_TheAltStatement_008() runs on GeneralComp {
        timer t_tmr := 1.0;

        connect(self:p, self: p);

        t_tmr.start;
	    p.send(true);

	    alt {
		    [] p.receive(boolean:t_tmr.running) {
			    setverdict(pass);
		    }
	    }
    }
    
    control {
	    execute(TC_NegSem_2002_TheAltStatement_008());
    }
}
