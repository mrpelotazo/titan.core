/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:20.2, no default activation after else
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

// The following requirement is tested:
// If an else branch is defined, the default mechanism will never be called, 
// i.e. active defaults will never be entered.

module Sem_2002_TheAltStatement_014 {

    type port MyPort message {
        inout charstring
    } with {extension "internal"}
    
    type component GeneralComp { 
	    port MyPort p;
    }
    
    altstep a_receive() runs on GeneralComp {
        [] p.receive {
			setverdict(fail);
		}
    }
    
    testcase TC_Sem_2002_TheAltStatement_014() runs on GeneralComp {

        connect(self:p, self: p);
	    p.send(charstring:"abc");

        activate(a_receive());

	    alt {
		    [] p.receive(charstring:"def") {
                setverdict(fail);
            }
            [else] {
                setverdict(pass);
            }
	    }
    }
    
    control {
	    execute(TC_Sem_2002_TheAltStatement_014());
    }
}
