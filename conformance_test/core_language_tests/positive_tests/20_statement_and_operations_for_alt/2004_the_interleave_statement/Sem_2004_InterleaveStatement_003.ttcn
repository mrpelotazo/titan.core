/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:20.4, while loop inside interleave
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

// The following requirement is tested:
// If none of the alternatives of the interleave statement can be executed, 
// the default mechanism will be invoked. This means, according to the 
// semantics of the default mechanism, the actual snapshot will be used to
// evaluate those altsteps that have been activated before entering the 
// interleave statement.

module Sem_2004_InterleaveStatement_003 {

    type port MyPort message {
        inout charstring
    } with {extension "internal"}

    type component GeneralComp {
        port MyPort p;
    }    
    
    altstep a_receive() runs on GeneralComp {
        [] p.receive(charstring:?) {
            setverdict(pass, "default called");
        }
    }
    
    testcase TC_Sem_2004_InterleaveStatement_003() runs on GeneralComp {

		connect(self:p, self:p);

        p.send(charstring:"foo");
        p.send(charstring:"ding");
        p.send(charstring:"bar");
        activate(a_receive());
        
        interleave {
            [] p.receive(charstring:"bar") { // should not be called, because the default is invoked instead
                setverdict(fail, "default not used properly!!!");
            }
            [] p.receive(charstring:"foo") {
                setverdict(pass, "foo received");
            }
        }        
    }

    control{
        execute(TC_Sem_2004_InterleaveStatement_003());
    }
}
