/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:20.5.1, verify that deactivate without parameter clear list of defaults
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

// The following requirement is tested:
// A deactivate operation without parameter deactivates all defaults of a test component.

module Sem_200503_the_deactivate_operation_003 { 

	type port P message {
		inout integer;
	} with {extension "internal"}
	
	type component GeneralComp {
		port P p;
	}
	
	altstep a1() runs on GeneralComp {
		[] p.receive(integer:1) {
			setverdict(fail, "Deactivated"); // should be deactivated at the time of default processing
		}
	}
	
	altstep a2() runs on GeneralComp {
		[] p.receive(integer:?) {
			setverdict(fail, "Deactivated"); // should be deactivated at the time of default processing
		}
	}

	testcase TC_Sem_200503_the_deactivate_operation_003() runs on GeneralComp {
		timer t := 0.5;
		t.start;
		activate(a1());		
		activate(a2());

		connect(self:p, self:p);
		p.send(integer:1);

		deactivate;

		alt {
			[] p.receive(integer:0) { // not expected: leads to default invocation
				setverdict(fail);
			}
			[] t.timeout { // timer should provide enough time to take at least one snapshot
				setverdict(pass);
			}
		}
	}

	control{
		execute(TC_Sem_200503_the_deactivate_operation_003());
	}
}
