/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:20.5.2, verify that parameters are passed at activation time
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

// The following requirement is tested:
// The actual parameters of a parameterized altstep (see clause 16.2.1) that should 
// be activated as a default, shall be provided in the corresponding activate statement. 
// This means the actual parameters are bound to the default at the time of its activation 
// (and not e.g. at the time of its invocation by the default mechanism).

module Sem_200502_the_activate_operation_002 { 

	type port P message {
		inout integer;
	} with {extension "internal"}
	
	type component GeneralComp {
		port P p;
	}
	
	const integer c_defaultParValue := 1;
	
	altstep a(integer p_par) runs on GeneralComp {
		[] p.receive(integer:?) {
			if (p_par == c_defaultParValue) { setverdict(pass); }
			else { setverdict(fail); }
		}
	}

	testcase TC_Sem_200502_the_activate_operation_002() runs on GeneralComp {
		var integer v_num := c_defaultParValue;
		activate(a(v_num));
		v_num := v_num + 1;

		connect(self:p, self:p);
		p.send(integer:5);

		alt {
			[] p.receive(integer:0) { // not expected: leads to default evocation
				setverdict(fail);
			}
		}
	}

	control{
		execute(TC_Sem_200502_the_activate_operation_002());
	}
}
