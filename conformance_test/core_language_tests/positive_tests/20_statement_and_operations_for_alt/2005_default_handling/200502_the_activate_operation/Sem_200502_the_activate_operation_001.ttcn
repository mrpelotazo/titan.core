/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:20.5.2, verify that activate operation can be used as standalone statement
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

// The following requirement is tested:
// The activate operation can be called without saving the returned default reference. 
// This form is useful in test cases which do not require explicit deactivation 
// of the activated default, i.e. deactivation of a default is done implicitly at
// MTC termination.

// Note:
// An activate operation saving the returned default reference is tested in the section 
// 6.2.8.

module Sem_200502_the_activate_operation_001 { 

	type component GeneralComp {
	}	
	
	altstep a() runs on GeneralComp
	{
		[] any port.receive {}
	}

	testcase TC_Sem_200502_the_activate_operation_001() runs on GeneralComp {
		activate(a());
		setverdict(pass);
	}

	control{
		execute(TC_Sem_200502_the_activate_operation_001());
	}
}
