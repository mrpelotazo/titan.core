/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:16.2, Ensure that the IUT recognizes altstep definitions and correctly evaluates them
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/
module Sem_1602_toplevel_001 {

    type record MessageType {
        integer  		field1,
        charstring  	field2
    }

    type port loopbackPort message {
        inout MessageType
    } with {extension "internal"}

    type component GeneralComp {
        port loopbackPort messagePort
    }

    function f_test ( integer p_integer := 0 ) runs on GeneralComp return integer {

        return p_integer+1;
    }

    altstep AltSet1() runs on GeneralComp {
        var integer v_LocalVar := f_test();   // local variable
  
        [] messagePort.receive {
            setverdict(pass);
        }
     
    }

    testcase TC_Sem_1602_toplevel_001 () runs on GeneralComp {
        var MessageType v_testMessage;
        v_testMessage:=  {
            field1 := 1,
            field2 := "test string"
        }

		connect(self:messagePort,self:messagePort);

        messagePort.send(v_testMessage);

        AltSet1();
 
    }

    control{

        execute(TC_Sem_1602_toplevel_001());

    }

}
