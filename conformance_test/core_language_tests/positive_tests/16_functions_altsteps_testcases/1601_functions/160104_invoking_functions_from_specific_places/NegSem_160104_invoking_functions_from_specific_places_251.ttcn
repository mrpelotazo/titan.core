/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:16.1.4, verify that the activate operation cannot be used in guards of altsteps
 ** @verdict  pass reject
 ***************************************************/

// The following requirement is tested:
// If value returning functions are called in receiving communication operations (in templates, template fields, 
// in-line templates, or as actual parameters), in guards or events of alt statements or altsteps (see clause 20.2), 
// or in initializations of altstep local definitions (see clause 16.2), the following operations shall not be 
// used in functions called in the cases specified above, in order to avoid side effects that cause changing the 
// state of the component or the actual snapshot and to prevent different results of subsequent evaluations 
// on an unchanged snapshot:
// i) Activation and deactivation of defaults, i.e. the activate and deactivate statements (see notes 5 and 6).

module NegSem_160104_invoking_functions_from_specific_places_251 { 
    type port P message {
        inout integer;
    } with {extension "internal"}

    type component GeneralComp {
        port P p;
	}
    
	altstep a_anyTimer() runs on GeneralComp {
		[] any timer.timeout {}
	}
	
	function f_test() runs on GeneralComp return boolean {
		activate(a_anyTimer());
		return true;
	}

    altstep a_rcv() runs on GeneralComp {
        [f_test()] p.receive(integer:?) {} 
    }

    testcase TC_NegSem_160104_invoking_functions_from_specific_places_251() runs on GeneralComp system GeneralComp {        
        connect(mtc:p, mtc:p);
        p.send(1);
		a_rcv();
		setverdict(pass);
	}

	control {
		execute(TC_NegSem_160104_invoking_functions_from_specific_places_251());
	}
}
