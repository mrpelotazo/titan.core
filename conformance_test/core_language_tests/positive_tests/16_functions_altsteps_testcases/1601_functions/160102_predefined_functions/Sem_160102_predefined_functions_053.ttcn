/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:16.1.2, Ensure that the IUT recognizes predefined functions and correctly evaluates them (as specified by Annex C.3.5)
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

/* The following requirements are tested: 
 * this test investigates that IUT correctly evaluates predefined function istemplateking().*/

module Sem_160102_predefined_functions_053 {
	
    
    type component GeneralComp {
    }

    testcase TC_Sem_160102_predefined_functions_053 () runs on GeneralComp {

     	var template integer v_6 := (-100 .. -1);  // template with ranged values 
        
       	if ( match(istemplatekind(v_6, "range"), true)) {setverdict(pass," range: ", istemplatekind(v_6, "range"));}
        else{setverdict(fail," range:",istemplatekind(v_6, "range"), " expected result: true");}
    }

    control{

        execute(TC_Sem_160102_predefined_functions_053());

    }

}
