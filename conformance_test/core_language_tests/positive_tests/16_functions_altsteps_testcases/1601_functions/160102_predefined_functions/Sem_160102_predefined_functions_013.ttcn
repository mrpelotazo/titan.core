/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:16.1.2, Ensure that the IUT recognizes predefined functions and correctly evaluates them (as specified by Annex C)
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/
// test enum2int with labels
module Sem_160102_predefined_functions_013 {

    type enumerated EnumeratedTypeWithLabels2 {e_black (-1), e_white};
    type enumerated EnumeratedTypeWithLabels3 {e_black (-1), e_white , e_yellow (0) };

    type component GeneralComp {
    }

    testcase TC_Sem_160102_predefined_functions_013 () runs on GeneralComp {
        var EnumeratedTypeWithLabels2 vl_enum2_black := e_black;
        var EnumeratedTypeWithLabels2 vl_enum2_white := e_white;
        var EnumeratedTypeWithLabels3 vl_enum3_black := e_black;
        var EnumeratedTypeWithLabels3 vl_enum3_white := e_white;
        var EnumeratedTypeWithLabels3 vl_enum3_yellow := e_yellow;

        if( match(enum2int(vl_enum2_black), -1) and
            match(enum2int(vl_enum2_white), 0)
        ) {
            setverdict(pass);
        }
        else {
            setverdict(fail);
        }
    
        if( match(enum2int(vl_enum3_black), -1) and
            match(enum2int(vl_enum3_white), 1)
        ) {
            setverdict(pass);
        }
        else {
            setverdict(fail);
        }
    }

    control{
        execute(TC_Sem_160102_predefined_functions_013());
    }
}
