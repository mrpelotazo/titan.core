/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:16.1.2, Ensure that an error is detected when the parameter of the encvalue function contains an unitialized value
 ** @verdict  pass reject
 ***************************************************/

// The following requirements are tested:
// 16.1.2, restriction a.3: all actual in and inout parameters shall be initialized

module NegSem_160102_predefined_functions_033 {
	
	type integer I with { variant "32 bit"};
	
	type component GeneralComp {	
	}
	
	testcase TC_NegSem_160102_predefined_functions_033 () runs on GeneralComp {
		var template I v_test;
		var bitstring v_res := encvalue(v_test);
		setverdict(fail, "The previous encvalue call should have caused an error"); 
	}

	control{

		execute(TC_NegSem_160102_predefined_functions_033());

	}

} with { encode "RAW"}
