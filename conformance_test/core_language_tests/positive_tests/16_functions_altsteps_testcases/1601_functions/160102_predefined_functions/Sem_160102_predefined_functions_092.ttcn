/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:16.1.2, Ensure that the IUT recognizes predefined functions and correctly evaluates them (as specified by Annex C)
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

/* The following requirements are tested:
 *16.1.2 Restriction a.3:
 * any_string or sequence_type parameters of the functions substr may be partially initialized; */


module Sem_160102_predefined_functions_092 {
	
    type component GeneralComp {}
    
    type record of integer RoI;

    
    testcase TC_Sem_160102_predefined_functions_092 () runs on GeneralComp {
       
    	var RoI v_Rec1;
    	var RoI v_res;
    
       	v_Rec1 :={-,0,-,2};      //partially initialized record of integers  
       	v_res := substr(v_Rec1,1,1);            //expected result: {0}
     
        if( match(v_res,{0}) ) {
            setverdict(pass,v_res);
       	} else {
        	setverdict(fail,"The value of v_res:",v_res);
        }
    }

    control{
        execute(TC_Sem_160102_predefined_functions_092());
    }

}
