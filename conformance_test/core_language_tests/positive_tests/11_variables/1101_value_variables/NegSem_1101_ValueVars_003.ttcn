/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:11.1, Ensure that dot notation referencing to a field, which actual value is null shall cause an error. 
 ** @verdict  pass reject
 *****************************************************************/

/* The following requirements are tested:
Restriction h. : Using the dot notation and index notation for referencing a field, alternative or element of an address value, which actual value is null shall cause an
error.
*/

module NegSem_1101_ValueVars_003 {

	type component GeneralComp {	    	    
	}

	type integer address;
	type record MyRecordType
	{
		address field1,
		integer field2 optional
	};


	testcase TC_NegSem_1101_ValueVars_003() runs on GeneralComp {
	   	var MyRecordType R1:= {field1 := null,
		                      field2 := -};
	  
		var integer Myvar := R1.field1;    //error
		
		if (match(Myvar, R1.field1)) { setverdict(pass,"match") }
			else { setverdict(fail) }
		}
		

	control{
		execute(TC_NegSem_1101_ValueVars_003());
	}

}
