/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:11.2, Ensure that index notation referencing to a set of, which actual value is null shall cause an error.
 ** @verdict  pass reject
 *****************************************************************/

/* The following requirements are tested:
Restriction k. : Using the dot notation and index notation for referencing a field, alternative or element of an address value, which actual value is null shall cause an
error.
*/

module NegSem_1102_TemplateVars_004 {

    type integer address;
    type set of address MySet;

    type port loopbackPort message {
	  	inout integer
	} with {extension "internal"}
	
    type component GeneralComp {	    	    
	  	port loopbackPort messagePort
    }	

	testcase TC_NegSem_1102_TemplateVars_004() runs on GeneralComp {
	  	
	   	var MySet R1:= {[0] := null};
	  
		var template integer v_set := R1[0]; //error

	 	messagePort.send(R1[0]);

		alt {
		 	 [] messagePort.receive(v_set) {
		    	setverdict(pass,v_set);
			}
		 	 [] messagePort.receive {
		    	setverdict(fail,v_set);
		 	}
		}
	}

	control{
		execute(TC_NegSem_1102_TemplateVars_004());
	}

}
