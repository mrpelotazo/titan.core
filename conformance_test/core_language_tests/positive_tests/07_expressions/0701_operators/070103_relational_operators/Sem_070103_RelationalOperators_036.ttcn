/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:7.1.3, Ensure that the eqaul to operator on address is evaluated correctly with equal values.
 ** @verdict  pass accept, ttcn3verdict:pass
 *****************************************************************/

/*The address type is allowed for the equality (==) and non-equality (!=) operators, independent of its actual type, but when its actual type differs from the types specified above, it can be compared to the literal special value null only.*/

module Sem_070103_RelationalOperators_036 {

type component GeneralComp {	    	    
}

type integer address;
    
testcase TC_Sem_070103_RelationalOperators_036() runs on GeneralComp {
    
    var address My_address:=2;
    
    
	if (My_address == 2) {
		setverdict(pass,My_address);
	} else {
		setverdict(fail,My_address);
	}
}

control{
    execute(TC_Sem_070103_RelationalOperators_036());
}

}
