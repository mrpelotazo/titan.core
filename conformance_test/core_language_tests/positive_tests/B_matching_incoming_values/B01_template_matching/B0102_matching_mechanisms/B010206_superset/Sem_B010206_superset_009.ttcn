/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:B.1.2.6, Ensure that the IUT correctly handles template matching of superset definition 
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

module Sem_B010206_superset_009 {
	type set of integer SoI;

	type SoI MessageType;
    
	type port loopbackPort message {
		inout MessageType;
	} with {extension "internal"}


	type component GeneralComp {
		port loopbackPort messagePort;
	}

	testcase TC_NegSem_B010206_superset_009() runs on GeneralComp {

		var MessageType v_testMessage;

		template MessageType mw_matchingTemplate := superset(1,10,3);    

		v_testMessage := {1}; //the set of values shall contain at least as many elements as the SuperSet template for successful match

		connect(self:messagePort, self:messagePort);
 		messagePort.send(v_testMessage); 

    	alt {
     		[] messagePort.receive(mw_matchingTemplate) {
        		setverdict(fail);
     		}
     		[] messagePort.receive {
        		setverdict(pass);
     		}
    	}
        
	}

	control {
		execute(TC_NegSem_B010206_superset_009());
	}
}
 
