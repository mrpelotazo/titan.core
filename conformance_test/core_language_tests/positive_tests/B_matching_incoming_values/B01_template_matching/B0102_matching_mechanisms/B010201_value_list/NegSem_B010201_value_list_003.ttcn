/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:B.1.2.1, Ensure that the IUT correctly handles template matching with all from clause
 ** @verdict  pass reject
 ***************************************************/

// The following requirements are tested:
// Restriction D,E: Individual members of the template in the all from clause shall not resolve to any of the following matching mechanisms: AnyElementsOrNone, permutation.

module NegSem_B010201_value_list_003 { 

	type record of integer RoI;

    template RoI m_RoI := {permutation(0,1,3,*),2};
    template integer mw_RoI := (all from m_RoI);    //error: m_RoI contains permutation

    type port loopbackPort message {
		inout integer
	} with {extension "internal"}

	type component GeneralComp {
		port loopbackPort messagePort
	}	

	testcase TC_NegSem_B010201_value_list_003() runs on GeneralComp {

		var integer v_testMessage;
		v_testMessage:= 2;

		connect(self:messagePort, self:messagePort);
		messagePort.send(v_testMessage);

		alt {
			[] messagePort.receive(mw_RoI) {
				setverdict(pass);
		 }
		 	[] messagePort.receive {
		    	setverdict(fail);
		 }
		}
	}

	control{
		execute(TC_NegSem_B010201_value_list_003());
	}

}
