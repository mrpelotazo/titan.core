/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:B.1.2.2, Ensure that the IUT correctly handles template matching of complemented value omit 
 ** @verdict  pass reject
 ***************************************************/

//Restriction e) The complement of a template list shall not match omit.

module NegSem_B010202_complemented_value_list_004 { 

	type record MyRec{
     	integer field1,
     	float   field2 optional
    }

    type port loopbackPort message {
	  	inout MyRec
	} with {extension "internal"}
	
	type component GeneralComp {	    	    
	  	port loopbackPort messagePort
	}	

	testcase TC_NegSem_B010202_complemented_value_list_004() runs on GeneralComp {

    	var MyRec v_testMessage;

 		template MyRec mw_matchingTemp:={field1:=1, field2:=omit};
    
 		template MyRec mw_matchingTemplate:=complement(mw_matchingTemp);

 		v_testMessage:= {field1:=1, field2:=omit};    // fail, field1:=1 is not accepted in matching

		connect(self:messagePort, self:messagePort);
 		messagePort.send(v_testMessage);

    	alt {
     		[] messagePort.receive(mw_matchingTemplate) {
        		setverdict(pass);
     		}
     		[] messagePort.receive {
        		setverdict(fail);
     		}
    	}
	}

	control{
		execute(TC_NegSem_B010202_complemented_value_list_004());
	}

}
 
