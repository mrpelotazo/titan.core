/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:B.1.4.1, Ensure that the IUT correctly handles template matching of value length definitions
 ** @verdict  pass reject
 ***************************************************/

module NegSem_B010401_length_restrictions_002 { 


	type record MessageType {
  	 	charstring  	field1, 
  	 	bitstring		field2,
  	 	hexstring		field3,
  	 	charstring  	field4, 
  	 	bitstring		field5,
  	 	hexstring		field6
	}

    type port loopbackPort message {
	  	inout MessageType
	} with {extension "internal"}
	

	type component GeneralComp {	    	    
	  	port loopbackPort messagePort
	}	

	testcase TC_NegSem_B010401_length_restrictions_002() runs on GeneralComp {

    	var MessageType v_testMessage;

 		template MessageType mw_matchingTemplate:= {  	
		  	field1 := pattern "test s*g" length (6 .. 15),		
		  	field2 := '10*'B  length (3 .. 5), 
		  	field3 := '89?AB'H  length (6),		//pattern is shorter than length restriction
		  	field4 := pattern "tes?" length (4 .. 13),
		  	field5 := '10?'B  length (3 .. 5), 
		  	field6 := '89?ABC'H  length (6)
 		} 

 		v_testMessage:=  {  
		  	field1 := "test string",
		  	field2 := '10101'B, 
		  	field3 := '89ABC'H,
		  	field4 := "test",
		  	field5 := '101'B, 
		  	field6 := '899ABC'H
 		} 
 
 		connect(self:messagePort, self:messagePort);
		messagePort.send(v_testMessage);

    	alt {
     		[] messagePort.receive(mw_matchingTemplate) {
        		setverdict(fail);
     		}
     		[] messagePort.receive {
        		setverdict(pass);
     		}
    	}
	}
	
	control{
		execute(TC_NegSem_B010401_length_restrictions_002());
	}

}
 
