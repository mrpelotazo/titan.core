/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:9.1, Verify that mapping an already connected port is not allowed
 ** @verdict  pass reject
 ***************************************************/

/*NOTE: see Figure 7(g): Two components (A and B). MycompA:p1 is connected to MycompB:p1.
 * Therefore  mapping MycompB to TSI port p1 is not allowed
 * */

module NegSem_0901_Communication_ports_008 {
  
    type port P message {
        inout integer
    } with {extension "internal"}

    type component GeneralComp
    {
        port P p1;
    }
	
    testcase TC_NegSem_0901_Communication_ports_008() runs on GeneralComp system GeneralComp {

		// generate test components
		var GeneralComp MycompA;
		var GeneralComp MycompB;	
		MycompA := GeneralComp.create;
		MycompB := GeneralComp.create;
	   
		connect(MycompA:p1,MycompB:p1); 
		map(MycompB:p1,system:p1); // not allowed, since MyCompB:p1 is already connected to MyCompA:p1 
	
		setverdict(pass);
    }
	
    control{
        execute(TC_NegSem_0901_Communication_ports_008());
    }
}

