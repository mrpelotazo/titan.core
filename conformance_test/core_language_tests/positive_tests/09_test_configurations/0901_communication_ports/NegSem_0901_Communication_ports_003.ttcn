/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:9, Ensure that it is not possible to connect a port with two other ports owned by the same component
 ** @verdict  pass reject
 ** @configuration  port:broadcast
 ***************************************************/

/*NOTE: see Figure 7(a): MyCompA has 3 ports and A2 shall not be connected to A1 and A3 both
 * */

module NegSem_0901_Communication_ports_003{ 

	type charstring address;

    type port IntegerInputPortType message {
	  inout integer
	} with {extension "internal"}
	
	type component MycompA {	 // MyCompA has 3 ports    	    
		  port IntegerInputPortType messagePortA1,messagePortA2,messagePortA3
	}	

	testcase TC_NegSem_0901_Communication_ports_003() runs on MycompA {

		connect(mtc:messagePortA1,mtc:messagePortA2); 
		connect(mtc:messagePortA2,mtc:messagePortA3); // Error: this is not allowed
	}

	control{
		execute(TC_NegSem_0901_Communication_ports_003());
	}

}
