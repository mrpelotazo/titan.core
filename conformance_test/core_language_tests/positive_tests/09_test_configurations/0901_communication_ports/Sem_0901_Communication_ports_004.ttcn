/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:9, Ensure that the IUT correctly handles message exch. between ports
 ** @verdict  pass accept, ttcn3verdict:pass
 ** @configuration  port:broadcast
 ***************************************************/

// GeneralComp has two ports. mess.portA sends a message to messageportB.
module Sem_0901_Communication_ports_004{ 


    type port IntegerPortType message {
	  inout integer
	} with {extension "internal"}
	

	type component GeneralComp {	    	    
		  port IntegerPortType messagePortA,messagePortB 
	}	

	testcase TC_Sem_0901_Communication_ports_004() runs on GeneralComp {

		connect(self:messagePortA,self:messagePortB);

		messagePortA.send(2);  //can send also in-line template

		alt {
		 [] messagePortB.receive(2) {
		    setverdict(pass);
		 }
		 [] messagePortB.receive {
		    setverdict(fail);
		 }
		}
	}

	control{
		execute(TC_Sem_0901_Communication_ports_004());
	}

}
