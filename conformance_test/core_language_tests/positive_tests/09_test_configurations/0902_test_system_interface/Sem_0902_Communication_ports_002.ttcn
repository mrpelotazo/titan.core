/******************************************************************************
 * Copyright (c) ETSI 2017.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Adrien Kirjak
 *
 ** @version  0.0.1
 ** @purpose  1:9, Ensure that the IUTs two ports are mapped correctly to system interfaces 
 ** @verdict  pass accept, ttcn3verdict:pass
 ***************************************************/

//Two ports are mapped to two system interface
module Sem_0902_Communication_ports_002{ 

 	type port Sem_0902_002_loopbackPort message {
	  	inout integer
	}

	type component GeneralComp
	{
		var integer v_received1:=0;
		var integer v_received2:=0;
		port Sem_0902_002_loopbackPort myPortA,myPortB
	}

	type component MyTestSystemInterface
	{
 		port Sem_0902_002_loopbackPort messagePortA,messagePortB
	}
	
	// MyTestSystemInterface is the test system interface
	testcase TC_Sem_0902_Communication_ports_002() runs on GeneralComp system MyTestSystemInterface {
		// establishing the port connections
		map(mtc:myPortA, system:messagePortA);
		map(mtc:myPortB, system:messagePortB);

		myPortA.send(2);  //can send also in-line template
		myPortB.send(3); 

		myPortA.receive(integer:?) -> value v_received1 ;
		myPortB.receive(integer:?) -> value v_received2 ;
		
		if ((v_received1+v_received2)==5)
		{
		    setverdict(pass);
		 }
		 else
		 {
		    setverdict(fail);
		 }
	}

	control{
		execute(TC_Sem_0902_Communication_ports_002());
	}

}
