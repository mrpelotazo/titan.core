/******************************************************************************
 * Copyright (c) 2000-2018 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html
 *
 * Contributors:
 *   Balasko, Jeno
 *   Raduly, Csaba
 *   Szabados, Kristof
 *
 ******************************************************************************/
module HN25015
{
import from SGsAP_Types all;

type component H {}

external function enc(in PDU_SGsAP pdu) return octetstring
with { extension "prototype(convert) encode (RAW)" }

external function dec(in octetstring o) return PDU_SGsAP
with { extension "prototype(convert) decode (RAW)" }

const octetstring expected := '01010829262001030000150200'O; // 200102 040562F2200001

testcase tc() runs on H
{
  var PDU_SGsAP pdu := {
    sGsAP_PAGING_REQUEST := {
       messageType := '00000001'B,
       iMSI := {
          iEI := '00000001'B,
          lengthIndicator := 8,
          iMSI := {
             field1 := '001'B,
             parity := '1'B,
             digits := '262021030000051'H,
             fillerDigit := omit } },
       vLR_Name := {
          iEI := '00000010'B,
          lengthIndicator := 0,
          name := "" }
    }
  } ;

  var octetstring encoded := enc(pdu);
  if (encoded == expected) { setverdict(pass); }
  else { setverdict(fail, match(encoded, expected)); }

  var PDU_SGsAP decc := dec(encoded);
}

control {
  execute(tc());
}


}
