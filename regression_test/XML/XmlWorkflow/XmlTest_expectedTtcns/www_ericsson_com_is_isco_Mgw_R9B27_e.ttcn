/*******************************************************************************
* Copyright Ericsson Telecom AB
*
* XSD to TTCN-3 Translator
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*******************************************************************************/
//
//  File:          www_ericsson_com_is_isco_Mgw_R9B27.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//	Generated from file(s):
//	- Mgw_R9B27.xsd
//			/* xml version = "1.0" encoding = "UTF-8" */
//			/* targetnamespace = "http://www.ericsson.com/is/isco/Mgw/R9B27" */
////////////////////////////////////////////////////////////////////////////////
//     Modification header(s):
//-----------------------------------------------------------------------------
//  Modified by:
//  Modification date:
//  Description:
//  Modification contact:
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////


module www_ericsson_com_is_isco_Mgw_R9B27_e {


import from XSD all;


import from tail_f_com_ns_confd_1_0_e all;


import from www_ericsson_com_is_isco_IsTypes_R4L06_R4AB_1_02_e all;


const TimingOutletSrcType_85 c_defaultForEmpty_1 := 0;


const RtoInitialType_63 c_defaultForEmpty_2 := 1000;


const RtoMinType_64 c_defaultForEmpty_3 := 500;


const RtoMaxType_65 c_defaultForEmpty_4 := 10000;


const RtoAlphaType_66 c_defaultForEmpty_5 := 3;


const RtoBetaType_67 c_defaultForEmpty_6 := 2;


const AssociationMaxRetransType_68 c_defaultForEmpty_7 := 10;


const MaxInitRetransType_69 c_defaultForEmpty_8 := 8;


const MaxShutdownRetransType_70 c_defaultForEmpty_9 := 5;


const MtuType_71 c_defaultForEmpty_10 := 1428;


const ValCookieLifeType_72 c_defaultForEmpty_11 := 400;


const EventFilterType_73 c_defaultForEmpty_12 := 3;


const FastSupIntervalType_74 c_defaultForEmpty_13 := 10;


const DownSupIntervalType_75 c_defaultForEmpty_14 := 100;


const AddrCollSupIntervalType_76 c_defaultForEmpty_15 := 10;


const AddrCollEventFilterlType_77 c_defaultForEmpty_16 := 3;


const TrafficSupervisionMaliciousPacketsThrType_78 c_defaultForEmpty_17 := 0;


const TrafficSupervisionMaliciousPacketsHysType_79 c_defaultForEmpty_18 := 0;


const TrafficSupervisionExcessiveBandwidthThrType_80 c_defaultForEmpty_19 := 0;


const TrafficSupervisionExcessiveBandwidthHysType_81 c_defaultForEmpty_20 := 0;


const TrafficSupervisionMediaStopSupervisionType_82 c_defaultForEmpty_21 := 1;


const TrafficSupervisionMaliciousTrafficLogType_83 c_defaultForEmpty_22 := 1;


const TrafficSupervisionExcessiveTrafficLogType_84 c_defaultForEmpty_23 := 1;


const AddressGroupType_94 c_defaultForEmpty_24 := 0;


const AddressOffsetType_100 c_defaultForEmpty_25 := 0;


const GwmDevAdmState c_defaultForEmpty_26 := "unlocked";


const DefaultTimeoutType_105 c_defaultForEmpty_27 := 0;


const TrTimerType_186 c_defaultForEmpty_28 := 5;


const GwmLinkAdmState c_defaultForEmpty_29 := "unlocked";


const HbTimerType_187 c_defaultForEmpty_30 := 60;


const LocalPortType_189 c_defaultForEmpty_31 := 9900;


const OutStreamsType_191 c_defaultForEmpty_32 := 20;


const RemotePortType_192 c_defaultForEmpty_33 := 9900;


const SctpModeType_193 c_defaultForEmpty_34 := "server";


const IdlePollTimerType_198 c_defaultForEmpty_35 := 10;


const MaxRetransmissionsType_202 c_defaultForEmpty_36 := 3;


const RetransmissionTimerType_206 c_defaultForEmpty_37 := 3000;


const SendQueueLengthType_207 c_defaultForEmpty_38 := 30;


const AdapJitBufSizeType_106 c_defaultForEmpty_39 := 200;


const DetailedTermInfoPackageType_107 c_defaultForEmpty_40 := "enabled";


const EchoDisablingModeType_108 c_defaultForEmpty_41 := "g168";


const EstAudioStatJitBufType_109 c_defaultForEmpty_42 := 50;


const EstDataStatJitBufType_110 c_defaultForEmpty_43 := 50;


const ProfileNameType_112 c_defaultForEmpty_44 := "ericsson_mgw";


const RtcpForwardingType_114 c_defaultForEmpty_45 := "on";


const RtcpOnType_115 c_defaultForEmpty_46 := "true";


const SrcAddressFilteringType_116 c_defaultForEmpty_47 := "off";


const RtcpNplrType_117 c_defaultForEmpty_48 := "disabled";


const RtcpJdrType_118 c_defaultForEmpty_49 := "disabled";


const RtcpRtdType_119 c_defaultForEmpty_50 := "disabled";


const DefaultEchoCancellationType_162 c_defaultForEmpty_51 := "on";


const GwmEncoding c_defaultForEmpty_52 := "a-law";


const EchoDelayType_163 c_defaultForEmpty_53 := "0";


const V52Type_165 c_defaultForEmpty_54 := "disabled";


const CodecType_172 c_defaultForEmpty_55 := "noOverride";


const CodecCNType_173 c_defaultForEmpty_56 := "on";


const CodecPtimeType_174 c_defaultForEmpty_57 := "Ptime-10";


const CodecTRType_175 c_defaultForEmpty_58 := "on";


const EchoDelayType_154 c_defaultForEmpty_59 := "0";


const EncodingType_123 c_defaultForEmpty_60 := "compacttext";


const LocalPortType_124 c_defaultForEmpty_61 := 2944;


const MGCOriginatedPendingLimitType_125 c_defaultForEmpty_62 := 2;


const MGOriginatedPendingLimitType_126 c_defaultForEmpty_63 := 3;


const MaxNumberOfRetransmissionsType_127 c_defaultForEmpty_64 := 2;


const MaximumWaitDelayType_128 c_defaultForEmpty_65 := 1000;


const MsgIdFormatType_129 c_defaultForEmpty_66 := "device-name";


const NormalMGExecutionTimeType_130 c_defaultForEmpty_67 := 2000;


const RemotePortType_132 c_defaultForEmpty_68 := 2944;


const SctpHbIntervalType_133 c_defaultForEmpty_69 := 5;


const T95Type_134 c_defaultForEmpty_70 := 500;


const TransactionRetentionTimerType_135 c_defaultForEmpty_71 := 16000;


const EncodingType_139 c_defaultForEmpty_72 := "compacttext";


const LocalPortType_141 c_defaultForEmpty_73 := 2944;


const MGCOriginatedPendingLimitType_142 c_defaultForEmpty_74 := 2;


const MGOriginatedPendingLimitType_143 c_defaultForEmpty_75 := 3;


const MaxNumberOfRetransmissionsType_144 c_defaultForEmpty_76 := 2;


const MaximumWaitDelayType_145 c_defaultForEmpty_77 := 1000;


const MsgIdFormatType_146 c_defaultForEmpty_78 := "device-name";


const NormalMGExecutionTimeType_147 c_defaultForEmpty_79 := 2000;


const RemotePortType_149 c_defaultForEmpty_80 := 2944;


const T95Type_150 c_defaultForEmpty_81 := 500;


const TransactionRetentionTimerType_151 c_defaultForEmpty_82 := 16000;


const UdpInactTimerType_152 c_defaultForEmpty_83 := 5;


const AdminStateType_1 c_defaultForEmpty_84 := 0;


const DefaultLocalPrefixMaskLengthType_2 c_defaultForEmpty_85 := 32;


const DefaultRemotePrefixMaskLengthType_3 c_defaultForEmpty_86 := 0;


const VideoBufferSizeType_5 c_defaultForEmpty_87 := 10000;


const VideoBufferCongThrType_6 c_defaultForEmpty_88 := 7000;


const AudioVideoDefaultSkewType_7 c_defaultForEmpty_89 := 100;


const LipSyncFineTuningInteractiveType_8 c_defaultForEmpty_90 := 100;


const LipSyncFineTuningStreamingType_9 c_defaultForEmpty_91 := 100;


const ForcedVideoSegmType_10 c_defaultForEmpty_92 := 2;


const To3g324mDegVideoBitrateThrH263v1Type_11 c_defaultForEmpty_93 := 30;


const ToIpDegVideoBitrateThrH263v1Type_12 c_defaultForEmpty_94 := 30;


const To3g324mDegVideoBitrateThrH263v2Type_13 c_defaultForEmpty_95 := 30;


const ToIpDegVideoBitrateThrH263v2Type_14 c_defaultForEmpty_96 := 30;


const To3g324mDegVideoBitrateThrMPEG4Type_15 c_defaultForEmpty_97 := 30;


const ToIpDegVideoBitrateThrMPEG4Type_16 c_defaultForEmpty_98 := 30;


const To3g324mDegVideoBitrateThrH264Type_17 c_defaultForEmpty_99 := 30;


const ToIpDegVideoBitrateThrH264Type_18 c_defaultForEmpty_100 := 30;


const To3g324mDegVideoCallThrType_19 c_defaultForEmpty_101 := 20;


const ToIpDegVideoCallThrType_20 c_defaultForEmpty_102 := 20;


const NsrpInitialDelayType_21 c_defaultForEmpty_103 := 0;


/* This MIM describes the classes QosMonitoring, IpAddressPrefix and 
    NetworkPathGroup. */


type XSD.UnsignedShort LevelBComp1Type_30 (0 .. 63)
with {
  variant "name as 'levelBComp1Type-30'";
};


type XSD.UnsignedShort MtuType_71 (256 .. 9180)
with {
  variant "name as 'mtuType-71'";
};


type XSD.UnsignedShort FrequencyAComp4Type_51 (1 .. 4000)
with {
  variant "name as 'frequencyAComp4Type-51'";
};


type XSD.Token EchoDelayType_163 (pattern "0|64|128")
with {
  variant "name as 'echoDelayType-163'";
};


type XSD.Token EncodingNameType_103 length(1 .. 16)
with {
  variant "name as 'encodingNameType-103'";
};


type XSD.UnsignedShort FrequencyBComp4Type_53 (1 .. 4000)
with {
  variant "name as 'frequencyBComp4Type-53'";
};


/* The highest/lowest allowed IP port for media. */
type XSD.UnsignedShort NibsIpPort (4096 .. 65535);


type XSD.UnsignedShort DownSupIntervalType_75 (1 .. 18000)
with {
  variant "name as 'downSupIntervalType-75'";
};


type XSD.UnsignedShort FrequencyAComp2Type_35 (1 .. 4000)
with {
  variant "name as 'frequencyAComp2Type-35'";
};


/* Alphanumeric string. */
type XSD.Token GwmAlphaNumericString_l35 (pattern "[a-zA-Z0-9]*") length(1 .. 35);


/* This datatype defines the images that can be loaded on the media processing 
      devices. Image type is called 'media profile' in the CPI (Customer Product 
      Information) and in the ISM (IS Management).
        The media profile supports various types of compress */
/* ion algorithms.
        1 - voiceStandard, supports the following codecs:
            * G.711 (PCM 64 kbit/s) for voice coding, fax, text telephone,
              TTY/Telecommunication Device for Deaf (TDD) or modem
            * G.726-32 (ITU-T ADPCM 32 kbit/s) for voice coding
            * G.729A/B (ITU-T CS-ACELP 8 kbit/s) for voice coding
            * G.723.1/G.723.1A for voice coding 
            * AMR-NB
            * T.38 Fax Relay
            * Clear channel
            * Voice band data mode
        2 - voiceEVRC, supports the following codecs:
            * G.711 (PCM 64 kbit/s) for voice coding, fax, text telephone, 
              TTY/Telecommunication Device for Deaf (TDD) or modem
            * G.726-32 (ITU-T ADPCM 32 kbit/s) for voice coding
            * G.729A/B (ITU-T CS-ACELP 8 kbit/s) for voice coding
            * G.723.1/G.723.1A for voice coding
            * EVRC
            * T.38 Fax Relay
            * Clear channel
            * Voice band data mode
        3 - voiceIpIp, not used
        4 - voiceVideo, supports the following codecs:
            * G.711 (PCM 64 kbit/s) for voice coding, fax, text telephone, 
              TTY/Telecommunication Device for Deaf (TDD) or modem
            * G.726-32 (ITU-T ADPCM 32 kbit/s) for voice coding
            * G.729A/B (ITU-T CS-ACELP 8 kbit/s) for voice coding
            * G.723.1/G.723.1A for voice coding
            * AMR-NB
            * H.263 v1
            * H.263 v2
            * H.264
            * MPEG4
            * T.38 Fax Relay
            * Clear channel
            * Voice band data mode
        5 - voiceConference, not used
        6 - voiceLowDelay, supports the following codecs:
            * G.711 (PCM 64 kbit/s) for voice coding, fax, text telephone,
              TTY/Telecommunication Device for Deaf (TDD) or modem, optimized 
              for low delay.
            * T.38 Fax Relay
            * Clear channel
            * Voice band data mode */
type XSD.UnsignedShort IntfImageType (1 .. 6);


type XSD.UnsignedShort NetsyncTxClockSrcType_86 (1 .. 4)
with {
  variant "name as 'netsyncTxClockSrcType-86'";
};


type XSD.Token DataLinkStatusType_197 (pattern "notAvailable|established|remoteReleased|localReleased|localEstablishing")
with {
  variant "name as 'dataLinkStatusType-197'";
};


type XSD.UnsignedShort FrequencyBComp2Type_37 (1 .. 4000)
with {
  variant "name as 'frequencyBComp2Type-37'";
};


type XSD.UnsignedShort To3g324mDegVideoCallThrType_19 (0 .. 100)
with {
  variant "name as 'to3g324mDegVideoCallThrType-19'";
};


type XSD.UnsignedShort PathType_90 (1 .. 3)
with {
  variant "name as 'pathType-90'";
};


type XSD.UnsignedInt TrafficSupervisionExcessiveBandwidthThrType_80 (0 .. 2000000)
with {
  variant "name as 'trafficSupervisionExcessiveBandwidthThrType-80'";
};


type XSD.UnsignedShort MaxShutdownRetransType_70 (1 .. 16)
with {
  variant "name as 'maxShutdownRetransType-70'";
};


/* This datatype is used to configure whether an event notification will be generated
      when an interface changes its operational state. 
      and link down events.
        1 - enabled, linkUpEvent and linkDownEvent notifications will be issued
        2 - disabled, no event notifications will be issued */
type XSD.UnsignedShort IntfLinkUpDownTrap (1 .. 2);


type XSD.UnsignedShort UdpInactTimerType_152 (1 .. 10)
with {
  variant "name as 'udpInactTimerType-152'";
};


type XSD.UnsignedShort LevelAComp4Type_52 (0 .. 63)
with {
  variant "name as 'levelAComp4Type-52'";
};


type XSD.UnsignedShort DefaultLocalPrefixMaskLengthType_2 (0 .. 32)
with {
  variant "name as 'defaultLocalPrefixMaskLengthType-2'";
};


/* This counter type is used for statistics showing accumulations. This 
      counter increases until it reaches a maximum value 
      of 2^32-1, when it wraps around and restarts from zero. */
type XSD.UnsignedInt GwmCounter32 (0 .. 4294967295);


type XSD.UnsignedShort MaskLengthType_183 (1 .. 32)
with {
  variant "name as 'maskLengthType-183'";
};


type XSD.Token EchoDelayType_154 (pattern "0|64|128")
with {
  variant "name as 'echoDelayType-154'";
};


type XSD.UnsignedShort MaxNumberOfRetransmissionsType_144 (0 .. 10)
with {
  variant "name as 'maxNumberOfRetransmissionsType-144'";
};


type XSD.UnsignedShort LocalPortType_124 (1024 .. 65535)
with {
  variant "name as 'localPortType-124'";
};


type XSD.UnsignedShort LevelBComp4Type_54 (0 .. 63)
with {
  variant "name as 'levelBComp4Type-54'";
};


/* The first character must be a letter (a..z) followed by any of:
      a..z
      0..9
      / (forward slash)
      _ (underscore). */
type XSD.Token GwmAlphaNumericFsUs_beginAlpha_l64 (pattern "[a-z][a-z0-9/_]*") length(1 .. 64);


/* This datatype is used to define the amount of data transported by the physical 
      layer, measured in number of bits per second. */
type XSD.Integer IntfIfSpeed;


/* This datatype defines the framing type.
        1 - 24-frame multiframe (ESF - Extended Super Frame)
        2 - 12-frame multiframe (SF - Super Frame) */
type XSD.UnsignedShort IntfDs1LineType (1 .. 2);


/* This datatype defines the interface type configuration.
        1 - E1
        2 - T1 */
type XSD.UnsignedShort IntfInterfaceType (1 .. 2);


/* This datatype is used when defining the availability criterion. Either a single
        direction or both directions are considered when the 'Unavailable time (SDH) or 
       'Unavailable seconds' (SONET) is determined.  
          1 - unidirectional, the availability criterion is defined for a single 
              direction.
          2 - bidirectional, the availability criterion is defined for both forward and 
              backward directions. */
type XSD.UnsignedShort IntfUasMode (1 .. 2);


type XSD.UnsignedShort LevelAComp2Type_36 (0 .. 63)
with {
  variant "name as 'levelAComp2Type-36'";
};


type XSD.UnsignedShort LevelBComp2Type_38 (0 .. 63)
with {
  variant "name as 'levelBComp2Type-38'";
};


type XSD.UnsignedShort MaxInitRetransType_69 (1 .. 16)
with {
  variant "name as 'maxInitRetransType-69'";
};


/* This datatype is used when defining the mode of LP-RDI/RDI-V insertion
      activation.
        1 - off, LP-RDI/RDI-V insertion is deactivated. 
            NOTE: If HP-RDI/RDI-P insertion is deactivated, LP-RDI/RDI-V insertion 
            will have no affect. When HP-RDI/RDI-P insertion is activated to a value 
            other than off, the LP-RDI/RDI-V insertion configuration will be active.
        2 - auto with PLM, causes the LP-RDI/RDI-V to be inserted automatically when 
            any of the following events occur:
             * Loss of Signal (LOS)
             * Loss of Frame (LOF)
             * Multiplexer Section - Alarm Indication Signal (MS-AIS)
             * Administrative Unit - Alarm Indication Signal (AU-AIS)
             * Administrative Unit - Loss of Pointer (AU-LOP)
             * Lower order Path - Payload Mismatch (LP-PLM)
             * Lower order Path - Unequipped (LP-UNEQ)
             * Tributary Unit - Loss of Pointer (TU-LOP)
             * Tributary Unit - Alarm Indication Signal (TU-AIS)
             * Alarm Indication Signal - SONET Virtual Tributary (AIS-V)
             * Loss of Pointer - SONET Virtual Tributary (LOP-V)
             * Payload Mismatch - SONET Virtual Tributary (PLM-V)
             * Unequipped - SONET Virtual Tributary (UNEQ-V) */
type XSD.UnsignedShort IntfLowPathRdiInsertion (1 .. 2);


/* The modulation type.
        0 - Addition: The two frequencies will be added (no modulation)
        1,2 - Modulation: The two frequencies will be modulated
        NOTE: The two modulation values (1,2) are kept due backward compatability. */
type XSD.UnsignedShort DspcpToneModulation (0 .. 2);


type XSD.UnsignedShort FrequencyBComp5Type_61 (1 .. 4000)
with {
  variant "name as 'frequencyBComp5Type-61'";
};


type XSD.UnsignedShort ToIpDegVideoBitrateThrH263v1Type_12 (0 .. 52)
with {
  variant "name as 'toIpDegVideoBitrateThrH263v1Type-12'";
};


/* This datatype is used to identify interfaces by a text name, an option to 
      assign a descriptive name to an interface. */
type XSD.Token IntfIfAlias length(0 .. 64);


type XSD.Token H248IdType_104 (pattern "busy|dial|ringing|congestion|number-unobtainable|progress|busy-operator|second-dial|time-limit|line-lockout|special-dial|acceptance|refusal|special-recall-dial|distinctive-dial|message-wait|call-waiting|call-waiting-alert-pattern-1|call-waiting-alert-pattern-2|call-waiting-alert-pattern-3|trunk-queue|subscriber-trunk-dial|warning|onhold")
with {
  variant "name as 'h248IdType-104'";
};


type XSD.Token SrcAddressFilteringType_116 (pattern "off|address|addressAndPort")
with {
  variant "name as 'srcAddressFilteringType-116'";
};


type Restricted_confd_objectRef_209 BladesType_96 length(2)
with {
  variant "name as 'bladesType-96'";
};


type XSD.UnsignedShort SendQueueLengthType_207 (1 .. 300)
with {
  variant "name as 'sendQueueLengthType-207'";
};


type XSD.UnsignedShort PortType_87 (0 .. 15)
with {
  variant "name as 'portType-87'";
};


type XSD.UnsignedShort FrequencyAComp1Type_27 (1 .. 4000)
with {
  variant "name as 'frequencyAComp1Type-27'";
};


type XSD.UnsignedShort PortType_88 (0 .. 1)
with {
  variant "name as 'portType-88'";
};


type XSD.UnsignedShort FrequencyBComp1Type_29 (1 .. 4000)
with {
  variant "name as 'frequencyBComp1Type-29'";
};


type XSD.Token OpStateType_190 (pattern "down|up|noAssociation|inactive")
with {
  variant "name as 'opStateType-190'";
};


type XSD.UnsignedShort EstDataStatJitBufType_110 (5 .. 100)
with {
  variant "name as 'estDataStatJitBufType-110'";
};


type XSD.UnsignedShort LevelAComp5Type_60 (0 .. 63)
with {
  variant "name as 'levelAComp5Type-60'";
};


type XSD.UnsignedShort LocalPortType_141 (1024 .. 65535)
with {
  variant "name as 'localPortType-141'";
};


type XSD.Token IpEphTermNameType_111 length(1 .. 53)
with {
  variant "name as 'ipEphTermNameType-111'";
};


type XSD.UnsignedShort LevelBComp5Type_62 (0 .. 63)
with {
  variant "name as 'levelBComp5Type-62'";
};


/* Integer (-2147483648 .. 2147483647) */
type XSD.Int GwmInteger32 (-2147483648 .. 2147483647);


type XSD.UnsignedShort ToIpDegVideoBitrateThrH263v2Type_14 (0 .. 52)
with {
  variant "name as 'toIpDegVideoBitrateThrH263v2Type-14'";
};


/* This datatype is used when setting threshold values for degraded Bit Error Rate (BER). 
       The threshold value is set to 10-N, where N is an integer in the range 5 to 9. */
type XSD.UnsignedShort IntfE1DegBerThreshold (5 .. 9);


type XSD.UnsignedInt DefaultTimeoutType_105 (0 .. 120000)
with {
  variant "name as 'defaultTimeoutType-105'";
};


type XSD.UnsignedShort RtoMaxType_65 (80 .. 50000)
with {
  variant "name as 'rtoMaxType-65'";
};


type XSD.UnsignedShort VideoBufferSizeType_5 (1000 .. 10000)
with {
  variant "name as 'videoBufferSizeType-5'";
};


/* The Administrative state of the control link. */
type XSD.Token GwmLinkAdmState (pattern "unlocked|locked");


/* The administrative state of the device.
      
      locked:   The device is locked and new connections cannot be 
                established over the device but established connections are 
		kept.
      unlocked: The device is unlocked and new connections can be 
                established over the device. */
type XSD.Token GwmDevAdmState (pattern "unlocked|force_lock|locked");


type XSD.UnsignedShort MaxNumberOfRetransmissionsType_127 (0 .. 10)
with {
  variant "name as 'maxNumberOfRetransmissionsType-127'";
};


type XSD.UnsignedShort IterateComp4Type_47 (1 .. 100)
with {
  variant "name as 'iterateComp4Type-47'";
};


type XSD.UnsignedShort LevelAComp1Type_28 (0 .. 63)
with {
  variant "name as 'levelAComp1Type-28'";
};


type XSD.UnsignedShort FrequencyAComp5Type_59 (1 .. 4000)
with {
  variant "name as 'frequencyAComp5Type-59'";
};


type XSD.UnsignedShort IterateComp3Type_39 (1 .. 100)
with {
  variant "name as 'iterateComp3Type-39'";
};


/* Defines how to treat lost video data
	1 - Forward previously received correct video data (if any).
	2 - As 1, but indicate lost data to the IP client by additional increase of 
            RTP sequence number for the next transmitted packet.
	3 - As 1, but treat additional correct data as lost until next PSC is received
	4 - As 2, but treat additional correct data as lost until next PSC is received. */
type XSD.UnsignedShort DspcpLostVideoDataStrategy (1 .. 4);


/* The network VLAN identity. */
type XSD.UnsignedShort NibsVlan (2 .. 3999);


type XSD.UnsignedShort T95Type_150 (100 .. 10000)
with {
  variant "name as 't95Type-150'";
};


type XSD.UnsignedShort ForcedVideoSegmType_10 (0 .. 13)
with {
  variant "name as 'forcedVideoSegmType-10'";
};


type XSD.UnsignedShort ChannelIdType_181 (1 .. 31)
with {
  variant "name as 'channelIdType-181'";
};


type XSD.Token CodecType_172 (pattern "noOverride|g711ulaw|g711alaw|g723|g726|amr|g729a|g729ab|clearchannel")
with {
  variant "name as 'codecType-172'";
};


type XSD.UnsignedShort MGCOriginatedPendingLimitType_142 (1 .. 65535)
with {
  variant "name as 'mGCOriginatedPendingLimitType-142'";
};


type XSD.UnsignedShort RemotePortType_132 (1024 .. 65535)
with {
  variant "name as 'remotePortType-132'";
};


/* This datatype is used to define the sublink KLM number. */
type XSD.Token IntfKlmNumber;


type XSD.UnsignedShort To3g324mDegVideoBitrateThrH263v2Type_13 (0 .. 52)
with {
  variant "name as 'to3g324mDegVideoBitrateThrH263v2Type-13'";
};


type XSD.UnsignedShort DefaultRemotePrefixMaskLengthType_3 (0 .. 32)
with {
  variant "name as 'defaultRemotePrefixMaskLengthType-3'";
};


type XSD.UnsignedShort FastSupIntervalType_74 (1 .. 255)
with {
  variant "name as 'fastSupIntervalType-74'";
};


/* This counter type is used for statistics showing accumulations. This 
       counter increases until it reaches a maximum value 
       of 2^64-1, when it wraps around and restarts from zero. */
type XSD.UnsignedLong DspcpCounter64 (0 .. 18446744073709551615);


type XSD.Token InterfaceNameType_195 length(0 .. 64)
with {
  variant "name as 'interfaceNameType-195'";
};


type XSD.Token OpStateType_185 (pattern "down|active|inactive|pending")
with {
  variant "name as 'opStateType-185'";
};


type XSD.UnsignedShort To3g324mDegVideoBitrateThrMPEG4Type_15 (0 .. 52)
with {
  variant "name as 'to3g324mDegVideoBitrateThrMPEG4Type-15'";
};


/* This datatype defines the E1 framing types.
        1 - MultiFrameAuto (automatic detection of multiframe alignment)
        2 - MultiFrame (manually set to multiframe alignment)
        3 - BasicFrame (basic frame, no processing of CRC-4) */
type XSD.UnsignedShort IntfE1LineType (1 .. 3);


type XSD.UnsignedShort RtoAlphaType_66 (1 .. 4)
with {
  variant "name as 'rtoAlphaType-66'";
};


type XSD.UnsignedInt NormalMGExecutionTimeType_147 (0 .. 600000)
with {
  variant "name as 'normalMGExecutionTimeType-147'";
};


type XSD.UnsignedShort ActiveGcPortType_137 (1024 .. 65535)
with {
  variant "name as 'activeGcPortType-137'";
};


type XSD.Token SpcTypeType_178 (pattern "phy-eph|phy-phy|phy-vip")
with {
  variant "name as 'spcTypeType-178'";
};


type XSD.Token PayloadTypeType_158 (pattern "g711ulaw|g711alaw|clearchannel")
with {
  variant "name as 'payloadTypeType-158'";
};


type XSD.Token EncodingType_139 (pattern "prettytext|compacttext")
with {
  variant "name as 'encodingType-139'";
};


/* Used to enable/disable Video Fast Update (VFU) generation.
        0 - Disabled
        1 - Enabled */
type XSD.UnsignedShort DspcpVfuGeneration (0 .. 1);


type XSD.UnsignedInt NormalMGExecutionTimeType_130 (0 .. 600000)
with {
  variant "name as 'normalMGExecutionTimeType-130'";
};


type XSD.UnsignedShort ChannelIdType_171 (1 .. 31)
with {
  variant "name as 'channelIdType-171'";
};


type XSD.Token IdType_161 length(1 .. 61)
with {
  variant "name as 'idType-161'";
};


type XSD.UnsignedShort To3g324mDegVideoBitrateThrH263v1Type_11 (0 .. 52)
with {
  variant "name as 'to3g324mDegVideoBitrateThrH263v1Type-11'";
};


type XSD.UnsignedShort ModulationRatioABComp3Type_42 (1 .. 99)
with {
  variant "name as 'modulationRatioABComp3Type-42'";
};


/* This counter type is used for statistics showing accumulations. This 
      counter increases until it reaches a maximum value 
      of 2^32-1, when it wraps around and restarts from zero. */
type XSD.UnsignedInt MbqmCounter32 (0 .. 4294967295);


type XSD.Token CodecCNType_173 (pattern "on|off|noOverride")
with {
  variant "name as 'codecCNType-173'";
};


type XSD.UnsignedShort PortType_93 (0 .. 15)
with {
  variant "name as 'portType-93'";
};


type XSD.UnsignedShort EventFilterType_73 (1 .. 255)
with {
  variant "name as 'eventFilterType-73'";
};


type XSD.Token TypeType_164 (pattern "e1-stm1|t1-oc3|e1|t1")
with {
  variant "name as 'typeType-164'";
};


type XSD.UnsignedShort AddressGroupType_94 (0 .. 2)
with {
  variant "name as 'addressGroupType-94'";
};


type XSD.UnsignedShort NpgNoType_4 (1 .. 65535)
with {
  variant "name as 'npgNoType-4'";
};


type XSD.Token CodecTRType_175 (pattern "on|off|noOverride")
with {
  variant "name as 'codecTRType-175'";
};


type XSD.Token V52Type_165 (pattern "enabled|disabled|true|false")
with {
  variant "name as 'v52Type-165'";
};


/* The type of a route.
			1 interface route
			2 static route */
type XSD.UnsignedShort NibsRouteType (1 .. 2);


/* This datatype defines different ways of numbering SDH/Sonet sublinks. 
      The sublinks can be numbered in three main ways. In addition, each of these 
      ways is available with their numbering starting from either zero or one.
      The difference between the ways of numbering is which step (TUG-3/STS-1, 
      TUG-2/VT-Group, VC-12/VT-1.5) to run first.
        1 - LinearITU-T
        2 - LinearITU-T_zeroNum
        3 - HierarchicalTUG3/STS1
        4 - HierarchicalTUG3/STS1_zeroNum
        5 - HierarchicalTUG2/VT-Group
        6 - HierarchicalTUG2/VT-Group_zeroNum */
type XSD.UnsignedShort IntfKlmNumberingScheme (1 .. 6);


/* The mode used to generate a tone.
        1 - The voice will be replaced by the tone
        2 - Voice and tone will be mixed */
type XSD.UnsignedShort DspcpToneMode (1 .. 2);


type XSD.Token PTimeType_157 (pattern "Ptime-5|Ptime-10|Ptime-20|Ptime-30|Ptime-40")
with {
  variant "name as 'pTimeType-157'";
};


type XSD.UnsignedShort AudioVideoDefaultSkewType_7 (0 .. 300)
with {
  variant "name as 'audioVideoDefaultSkewType-7'";
};


type record of ObjectRef Restricted_confd_objectRef_208
with {
  variant "name as 'Restricted-confd_objectRef-208'";
  variant "list";
};


type XSD.UnsignedShort LipSyncFineTuningInteractiveType_8 (0 .. 300)
with {
  variant "name as 'lipSyncFineTuningInteractiveType-8'";
};


type XSD.UnsignedShort RemotePortType_149 (1024 .. 65535)
with {
  variant "name as 'remotePortType-149'";
};


type record of ObjectRef Restricted_confd_objectRef_209
with {
  variant "name as 'Restricted-confd_objectRef-209'";
  variant "list";
};


/* This datatype is used when configuring the MS-RDI/MS-AIS insertion activation.
        1 - off, will turn off insertion of RDI, or AIS.
        2 - rdiOn, will force insertion of MS-RDI/RDI-L.
        3 - aisOn, will force insertion of MS-RDI/RDI-L.
        4 - autoRdi, allows hardware to automatically insert RDI as a consequent 
            action of an incoming defect. */
type XSD.UnsignedShort IntfLinkRdiInsertion (1 .. 4);


type XSD.UnsignedShort AddressOffsetType_100 (0 .. 255)
with {
  variant "name as 'addressOffsetType-100'";
};


type XSD.UnsignedShort PulseComp3Type_40 (1 .. 60000)
with {
  variant "name as 'pulseComp3Type-40'";
};


type XSD.UnsignedShort PauseComp3Type_41 (0 .. 60000)
with {
  variant "name as 'pauseComp3Type-41'";
};


type XSD.Token TypeType_92 (pattern "normal|fast")
with {
  variant "name as 'typeType-92'";
};


/* This datatype is used when setting threshold values for excessive Bit Error Rate (BER). 
       The threshold value is set to 10-N, where N is an integer in the range 3 to 6. */
type XSD.UnsignedShort IntfE1ExcBerThreshold (3 .. 6);


/* The operational state of the IP interface. 
			1 - enabled
			2 - disabled */
type XSD.UnsignedShort NibsOperationalState (1 .. 2);


type XSD.UnsignedShort MGCOriginatedPendingLimitType_125 (1 .. 65535)
with {
  variant "name as 'mGCOriginatedPendingLimitType-125'";
};


type XSD.Short TrTimerType_186 (-1 .. 3600)
with {
  variant "name as 'trTimerType-186'";
};


type XSD.UnsignedShort ChannelIdType_166 (1 .. 31)
with {
  variant "name as 'channelIdType-166'";
};


type XSD.UnsignedShort ToIpDegVideoBitrateThrMPEG4Type_16 (0 .. 52)
with {
  variant "name as 'toIpDegVideoBitrateThrMPEG4Type-16'";
};


type XSD.UnsignedShort HbTimerType_187 (10 .. 300)
with {
  variant "name as 'hbTimerType-187'";
};


type XSD.UnsignedInt IdType_177 (0 .. 4294967295)
with {
  variant "name as 'idType-177'";
};


type XSD.Token RtcpNplrType_117 (pattern "enabled|disabled")
with {
  variant "name as 'rtcpNplrType-117'";
};


type XSD.Token TypeType_97 (pattern "block|deblock")
with {
  variant "name as 'typeType-97'";
};


type XSD.UnsignedShort RtoBetaType_67 (1 .. 4)
with {
  variant "name as 'rtoBetaType-67'";
};


type XSD.Token RtcpJdrType_118 (pattern "enabled|disabled")
with {
  variant "name as 'rtcpJdrType-118'";
};


/* This datatype is for setting the length of the trace identifiers, 'tiInserted'
       and 'tiExpected' on SONET path. The trace identifiers must be configured in
       accordance with this value. The maximum string length is 15 or 62 characters.
       Note: Changing this value will affect all paths on actual blade.
        2 - 15 char, ((CRC + 15) * 4) 
        3 - 62 char, (62 + CR + LF) */
type XSD.UnsignedShort IntfTraceLength (2 .. 3);


type XSD.UnsignedInt IdType_179 (0 .. 4294967295)
with {
  variant "name as 'idType-179'";
};


type XSD.Token RtcpRtdType_119 (pattern "enabled|disabled")
with {
  variant "name as 'rtcpRtdType-119'";
};


type XSD.UnsignedInt TrafficSupervisionMaliciousPacketsHysType_79 (0 .. 59999999)
with {
  variant "name as 'trafficSupervisionMaliciousPacketsHysType-79'";
};


/* This datatype is used to configure whether an alarm notification
      (LOF, AIS, or RDI) will be activated or not for the DS1 sublinks.
        1 - on, alarms will be sent.
        2 - off, alarms will not be sent. */
type XSD.UnsignedShort IntfDs1AlarmActivation (1 .. 2);


/* A display string showing the ratio in % with two decimals. */
type XSD.Token MbqmRatio length(1 .. 6);


type XSD.UnsignedShort MaxAckDelayType_200 (0 .. 2000)
with {
  variant "name as 'maxAckDelayType-200'";
};


type XSD.Token IdType_180 length(1 .. 16)
with {
  variant "name as 'idType-180'";
};


type XSD.Token InactivityMonType_140 (pattern "true|false")
with {
  variant "name as 'inactivityMonType-140'";
};


type XSD.UnsignedShort ActiveGcPortType_121 (1024 .. 65535)
with {
  variant "name as 'activeGcPortType-121'";
};


type XSD.Token IdType_182 length(1 .. 16)
with {
  variant "name as 'idType-182'";
};


/* Gauge. This type is used for weighted average statistics.
      It represents a non-negative integer, which may increase or decrease. */
type XSD.UnsignedInt GwmGauge32 (0 .. 4294967295);


/* Gauge. This type is used for weighted average statistics.
      It represents a non-negative integer, which may increase or decrease. */
type XSD.UnsignedInt MbqmGauge32 (0 .. 4294967295);


type XSD.Token EncodingType_123 (pattern "prettytext|compacttext")
with {
  variant "name as 'encodingType-123'";
};


/* This datatype shows the current loopback status of an interface.
        1 - No Loopback
        2 - PayloadLoopback (remote)
        3 - Line Loopback 
        4 - Local Loopback
        5 - Line Loopback (remote) */
type XSD.UnsignedShort IntfLoopbackStatus (1 .. 5);


type XSD.Token SubnetSegmentType_184 (pattern "GW_H248_sns1|GW_H248_sns2|GW_H248_sns3|GW_H248_sns4")
with {
  variant "name as 'subnetSegmentType-184'";
};


type XSD.UnsignedShort TrafficSupervisionExcessiveTrafficLogType_84 (1 .. 2)
with {
  variant "name as 'trafficSupervisionExcessiveTrafficLogType-84'";
};


/* This datatype is used when setting threshold values for excessive and degraded 
       Bit Error Rate (BER). The threshold value is set to 10-N (N = power of 10), 
       where N is an integer in the range 3 to 9. */
type XSD.UnsignedShort IntfBerThreshold (3 .. 9);


type XSD.UnsignedInt TransactionRetentionTimerType_135 (0 .. 600000)
with {
  variant "name as 'transactionRetentionTimerType-135'";
};


type XSD.Token RtcpOnType_115 (pattern "true|false")
with {
  variant "name as 'rtcpOnType-115'";
};


/* This datatype is used when setting the administrative state of an interface.
        1 - unlocked
        2 - locked */
type XSD.UnsignedShort IntfLockLine (1 .. 2);


type XSD.Token StateType_176 (pattern "active|idle")
with {
  variant "name as 'stateType-176'";
};


type XSD.UnsignedShort PulseComp4Type_48 (1 .. 60000)
with {
  variant "name as 'pulseComp4Type-48'";
};


type XSD.UnsignedShort PayloadTypeNumberType_159 (96 .. 127)
with {
  variant "name as 'payloadTypeNumberType-159'";
};


type XSD.UnsignedShort PauseComp4Type_49 (0 .. 60000)
with {
  variant "name as 'pauseComp4Type-49'";
};


type XSD.UnsignedShort NsrpInitialDelayType_21 (0 .. 400)
with {
  variant "name as 'nsrpInitialDelayType-21'";
};


type XSD.UnsignedShort PulseComp2Type_32 (1 .. 60000)
with {
  variant "name as 'pulseComp2Type-32'";
};


type XSD.UnsignedShort RtoInitialType_63 (80 .. 49000)
with {
  variant "name as 'rtoInitialType-63'";
};


type XSD.UnsignedShort PauseComp2Type_33 (0 .. 60000)
with {
  variant "name as 'pauseComp2Type-33'";
};


/* This datatype shows the current line status of an interface.
        1 - No alarm present
        2 - Far end LOF
        3 - Near end sending LOF Indication
        4 - Far end sending AIS
        5 - Near end LOF
        6 - Near end Loss Of Signal
        7 - Near end is looped
        8 - Carrier Equipment Out of Service */
type XSD.UnsignedShort IntfLineStatus (1 .. 8);


/* This datatype is used for setting the line length.
         1 - 0.6 dB, cable length 0-40 m/0-133 feet.
         2 - 1.2 dB, cable length 40-81 m/133-266 feet.
         3 - 1.8 dB, cable length 81-122 m/266-399 feet.
         4 - 2.4 dB, cable length 122-162 m/399-533 feet.
         5 - 3.0 dB, cable length 162-200 m/533-655 feet. */
type XSD.UnsignedShort IntfT1CableLoss (1 .. 5);


/* This datatype is used to present the time when an interface entered its current 
      operational state. The value of this attribute is zero if the interface entered 
      its current operational state before the local network management subsystem was
      re-initialized. */
type XSD.Token IntfIfLastChanged;


/* Operational state. */
type XSD.Token GwmOpState (pattern "enabled|disabled|pending");


type XSD.UnsignedShort AddrCollSupIntervalType_76 (1 .. 255)
with {
  variant "name as 'addrCollSupIntervalType-76'";
};


/* This type describes the encoding scheme. */
type XSD.Token GwmEncoding (pattern "a-law|u-law");


type XSD.UnsignedShort ModulationRatioABComp5Type_58 (1 .. 99)
with {
  variant "name as 'modulationRatioABComp5Type-58'";
};


type XSD.UnsignedShort SubportType_89 (0 .. 63)
with {
  variant "name as 'subportType-89'";
};


type XSD.Token StartTimeType_170 length(0 .. 20)
with {
  variant "name as 'startTimeType-170'";
};


type XSD.Token NameType_120 length(1 .. 35)
with {
  variant "name as 'nameType-120'";
};


type XSD.UnsignedInt TransactionRetentionTimerType_151 (0 .. 600000)
with {
  variant "name as 'transactionRetentionTimerType-151'";
};


type XSD.Token DomainNameType_122 length(1 .. 32)
with {
  variant "name as 'domainNameType-122'";
};


/* Used to enable/disable continous AMR transmission.
        0 - Disabled
        1 - Enabled */
type XSD.UnsignedShort DspcpContinousAmrTrans (0 .. 1);


type enumerated DummyEmptyType
{
	x
}
with {
  variant "text 'x' as ''";
};


type XSD.UnsignedShort ModulationRatioABComp1Type_26 (1 .. 99)
with {
  variant "name as 'modulationRatioABComp1Type-26'";
};


/* Integer (0 .. 65535) */
type XSD.UnsignedShort GwmUnsigned16 (0 .. 65535);


type XSD.Token DetailedTermInfoPackageType_107 (pattern "enabled|disabled")
with {
  variant "name as 'detailedTermInfoPackageType-107'";
};


type XSD.UnsignedShort To3g324mDegVideoBitrateThrH264Type_17 (0 .. 52)
with {
  variant "name as 'to3g324mDegVideoBitrateThrH264Type-17'";
};


type XSD.Token EchoDisablingModeType_108 (pattern "g164|g165|g168")
with {
  variant "name as 'echoDisablingModeType-108'";
};


type XSD.UnsignedInt TrafficSupervisionMaliciousPacketsThrType_78 (0 .. 60000000)
with {
  variant "name as 'trafficSupervisionMaliciousPacketsThrType-78'";
};


type XSD.Token DeviceNameType_153 length(1 .. 61)
with {
  variant "name as 'deviceNameType-153'";
};


/* This datatype is used to show the current operational state of an interface.
      Note: value 3, 4, 5 and 6 are not used
        1 - enabled, the resulting state when the link is unlocked. This means that
            interface is ready to transmit and receive network traffic.
        2 - disabled, the resulting state when the link is locked or the interface
            is faulty. No network traffic can be transmitted and received traffic
            is discarded.
        7 - lowerLayerDown, The interface is down due to the status of the blade
            or the lower layer interface(s). */
type XSD.UnsignedShort IntfIfOperStatus (1 .. 7);


/* This datatype is used to show the administrative state of an interface.
        1 - unlocked
        2 - locked */
type XSD.UnsignedShort IntfIfAdminStatus (1 .. 2);


type XSD.UnsignedShort T95Type_134 (100 .. 10000)
with {
  variant "name as 't95Type-134'";
};


type XSD.UnsignedShort PulseComp1Type_24 (1 .. 60000)
with {
  variant "name as 'pulseComp1Type-24'";
};


/* This counter type is used for statistics showing accumulations. This 
      counter increases until it reaches a maximum value of 2^64-1, 
      when it wraps around and restarts from zero. */
type XSD.UnsignedLong IntfCounter64 (0 .. 18446744073709551615);


/* This counter type is used for statistics showing accumulations. This 
      counter increases until it reaches a maximum value 
      of 2^64-1, when it wraps around and restarts from zero. */
type XSD.UnsignedLong MbqmCounter64 (0 .. 18446744073709551615);


type XSD.Token ProtocolSideType_205 (pattern "A|B|network|user")
with {
  variant "name as 'protocolSideType-205'";
};


type XSD.UnsignedShort PauseComp1Type_25 (0 .. 60000)
with {
  variant "name as 'pauseComp1Type-25'";
};


/* This datatype defines the signaling link framing types.
        1 - BasicFrame (basic frame, no processing of CRC-4)
        2 - 24-frame multiframe (ESF - Extended Super Frame) */
type XSD.UnsignedShort IntfSignLinkLineType (1 .. 2);


/* This datatype defines the source for the timing on the transmitting TDM interface.
        1 - netsync, timing is taken from the backplane clock, automatic selection 
                     of plane A or plane B.
        2 - looped, timing is taken from the incoming TDM interface. */
type XSD.UnsignedShort IntfTxClockSource (1 .. 2);


type XSD.UnsignedShort RetransmissionTimerType_206 (100 .. 10000)
with {
  variant "name as 'retransmissionTimerType-206'";
};


type XSD.Token NameType_136 length(1 .. 35)
with {
  variant "name as 'nameType-136'";
};


type XSD.UnsignedShort AdapJitBufSizeType_106 (20 .. 200)
with {
  variant "name as 'adapJitBufSizeType-106'";
};


type XSD.UnsignedShort VideoBufferCongThrType_6 (0 .. 10000)
with {
  variant "name as 'videoBufferCongThrType-6'";
};


type XSD.UnsignedShort InStreamsType_188 (2 .. 400)
with {
  variant "name as 'inStreamsType-188'";
};


type XSD.Token EchoCancelType_168 (pattern "true|false")
with {
  variant "name as 'echoCancelType-168'";
};


type XSD.Token OverloadNotificationsType_148 (pattern "enabled|disabled")
with {
  variant "name as 'overloadNotificationsType-148'";
};


type XSD.Token DomainNameType_138 length(1 .. 32)
with {
  variant "name as 'domainNameType-138'";
};


type XSD.Token ResourceType_98 (pattern "voice|videoStreaming|videoInteractive")
with {
  variant "name as 'resourceType-98'";
};


/* The number of relevant bits in an IP address. */
type XSD.UnsignedShort NibsIpMaskLength (0 .. 32);


type XSD.Token SpeechConvType_169 (pattern "true|false")
with {
  variant "name as 'speechConvType-169'";
};


/* Defines how to treat corrupt video data.
        1 - Treat corrupt data as lost, i.e. as specified by the LostVideoDataStrategy attribute.
        2 - Forward corrupt video data as is. */
type XSD.UnsignedShort DspcpCorruptVideoDataStrategy (1 .. 2);


/* This datatype defines the loopback types. Data received from a TDM interface on
      the front of the blade can be looped back to the TDM interface, and data 
      received from the MXB through the internal Ethernet interface connected to the
      backplane can be looped back to the MXB.
      The loopback is transparent, which means that data are both forwarded and looped.
      A loopback can be used for testing the interface, or for making quality 
      measurements
        1 - off, data are not looped back.
        2 - line, data from the TDM interface on the front of the blade are sent back
            to the TDM interface.
        3 - local, data from the MXB are sent back to the MXB via the backplane
            Ethernet interface. */
type XSD.UnsignedShort IntfLoopback (1 .. 3);


/* This datatype is used when configuring MS-REI/REI-L insertion activation.
         1 - off, a zero value will be inserted 
         2 - on, a non-zero value will be inserted
         3 - auto 
            * SDH: The hardware automatically inserts a value based on the BIP 
            counter value of received B2 errors (Multiplexor Section Overhead)
            *SONET: The M1 byte and G1:1-4 will be given the number of BIP-24
            errors or BIP-8 errors */
type XSD.UnsignedShort IntfReiInsertion (1 .. 3);


/* This datatype is used when defining the mode of HP-RDI insertion activation.
        1 - off, turns off HP-RDI/RDI-P insertion.        
        2 - auto, the consequent action HP-RDI/RDI-P will be generated on LOS, LOF, 
            MS-AIS/AIS-L, AU-LOP/LOP-P or AU-AIS/AIS-P.
        3 - autoPlm, HP-RDI will be generated for LOS, LOF, MS-AIS/AIS-L, 
            AU-AIS/AIS-P, AU-LOP/LOP-P or HP-PLM/PLM-P.
        4 - autoPlmTim, HP-RDI/RDI-P will be generated automatically on occurrence of 
            received LOS, LOF, MS-AIS/AIS-L, AU-AIS/AIS-P, AU-LOP/LOP-P, 
            HP-PLM/PLM-P or HP-TIM/TIM-P. */
type XSD.UnsignedShort IntfPathRdiInsertion (1 .. 4);


type XSD.UnsignedShort RemotePortType_160 (1024 .. 65534)
with {
  variant "name as 'remotePortType-160'";
};


type XSD.UnsignedShort ModulationRatioABComp4Type_50 (1 .. 99)
with {
  variant "name as 'modulationRatioABComp4Type-50'";
};


type XSD.Token OverloadNotificationsType_131 (pattern "enabled|disabled")
with {
  variant "name as 'overloadNotificationsType-131'";
};


type XSD.Token ProfileNameType_112 (pattern "ericsson_mgw|etsi_agw|etsi_tgw|ericsson_mgc_tgw|tispan-tgw|eri3-1|vig-3g324m")
with {
  variant "name as 'profileNameType-112'";
};


type XSD.Token PacketizationTimeType_102 (pattern "Ptime-60|Ptime-40|Ptime-30|Ptime-20|Ptime-10|Ptime-5|noValue")
with {
  variant "name as 'packetizationTimeType-102'";
};


type XSD.UnsignedShort ModulationRatioABComp2Type_34 (1 .. 99)
with {
  variant "name as 'modulationRatioABComp2Type-34'";
};


type XSD.Token IpTermNameType_155 length(1 .. 61)
with {
  variant "name as 'ipTermNameType-155'";
};


type XSD.UnsignedShort PulseComp5Type_56 (1 .. 60000)
with {
  variant "name as 'pulseComp5Type-56'";
};


type XSD.UnsignedInt ContextIdType_167 (0 .. 4294967295)
with {
  variant "name as 'contextIdType-167'";
};


type XSD.UnsignedShort PauseComp5Type_57 (0 .. 60000)
with {
  variant "name as 'pauseComp5Type-57'";
};


/* Specifies how many bits of an IP address are valid and that 
      should be considered as the IP address prefix. */
type XSD.UnsignedShort MbqmPrefixMaskLength (0 .. 32);


/* This datatype is used to configure whether an alarm will be activated or not.
         1 - on, an alarm will be sent when a defect indication is detected
         2 - off, turns off alarm sending */
type XSD.UnsignedShort IntfAlarmActivation (1 .. 2);


type XSD.UnsignedShort IterateComp2Type_31 (1 .. 100)
with {
  variant "name as 'iterateComp2Type-31'";
};


/* Gauge. This type is used for weighted average statistics.
      It represents a non-negative integer, which may increase or decrease. */
type XSD.UnsignedInt IntfGauge32 (0 .. 4294967295);


type XSD.UnsignedShort TimingOutletSrcType_85 (0 .. 15)
with {
  variant "name as 'timingOutletSrcType-85'";
};


type XSD.UnsignedShort LocalPortType_156 (1024 .. 4095)
with {
  variant "name as 'localPortType-156'";
};


type XSD.UnsignedShort MGOriginatedPendingLimitType_126 (1 .. 65535)
with {
  variant "name as 'mGOriginatedPendingLimitType-126'";
};


type XSD.Token LineTypeType_199 (pattern "public|private")
with {
  variant "name as 'lineTypeType-199'";
};


type XSD.UnsignedShort EstAudioStatJitBufType_109 (5 .. 100)
with {
  variant "name as 'estAudioStatJitBufType-109'";
};


type XSD.UnsignedShort ToIpDegVideoCallThrType_20 (0 .. 100)
with {
  variant "name as 'toIpDegVideoCallThrType-20'";
};


type XSD.UnsignedShort MaxOutstandingFramesType_201 (1 .. 127)
with {
  variant "name as 'maxOutstandingFramesType-201'";
};


type XSD.UnsignedShort OutStreamsType_191 (2 .. 400)
with {
  variant "name as 'outStreamsType-191'";
};


type XSD.UnsignedShort ValCookieLifeType_72 (120 .. 60000)
with {
  variant "name as 'valCookieLifeType-72'";
};


type XSD.UnsignedShort MaxRetransmissionsType_202 (1 .. 128)
with {
  variant "name as 'maxRetransmissionsType-202'";
};


type XSD.Token SctpModeType_193 (pattern "client|server")
with {
  variant "name as 'sctpModeType-193'";
};


type XSD.UnsignedShort SctpHbIntervalType_133 (1 .. 10)
with {
  variant "name as 'sctpHbIntervalType-133'";
};


type XSD.Token ProfileStringType_113 length(1 .. 32)
with {
  variant "name as 'profileStringType-113'";
};


type XSD.Token ProtocolType_204 (pattern "ISDN|DPNSS|DASS2")
with {
  variant "name as 'protocolType-204'";
};


type XSD.UnsignedShort InterfaceIdType_194 (0 .. 65535)
with {
  variant "name as 'interfaceIdType-194'";
};


type XSD.UnsignedShort RtoMinType_64 (40 .. 5000)
with {
  variant "name as 'rtoMinType-64'";
};


/* This counter type is used for statistics showing accumulations. This 
                counter increases until it reaches a maximum value 
                of 2^64-1, when it wraps around and restarts from zero. */
type XSD.Integer NibsCounter64;


type Restricted_confd_objectRef_208 NexthopType_95 length(1 .. 77)
with {
  variant "name as 'nexthopType-95'";
};


/* Virtual media gateway domain name.
      The first character must be an alphanumeric character (a..z or 0..9) 
      followed by any of:
      a..z
      0..9
      .
      - */
type XSD.Token GwmVmgwDomainName (pattern "[a-z0-9][a-z0-9.-]*") length(0 .. 32);


/* The administrative state.
			It is used both to display the result of reading the state
			and to set the state.
			1 unlock/ed
			2 shut/ting down
			3 lock/ed */
type XSD.UnsignedShort NibsAdministrativeState (1 .. 3);


type XSD.UnsignedShort AddrCollEventFilterlType_77 (1 .. 255)
with {
  variant "name as 'addrCollEventFilterlType-77'";
};


/* Octet string (size(0..255)) */
type XSD.Token GwmDisplayString length(0 .. 255);


type XSD.UnsignedInt MaximumWaitDelayType_128 (0 .. 600000)
with {
  variant "name as 'maximumWaitDelayType-128'";
};


type XSD.Token MsgIdFormatType_129 (pattern "domain-address|domain-name|device-name")
with {
  variant "name as 'msgIdFormatType-129'";
};


type XSD.UnsignedInt TrafficSupervisionExcessiveBandwidthHysType_81 (0 .. 1999999)
with {
  variant "name as 'trafficSupervisionExcessiveBandwidthHysType-81'";
};


type XSD.UnsignedShort AdminStateType_1 (0 .. 1)
with {
  variant "name as 'adminStateType-1'";
};


type XSD.UnsignedShort RemotePortType_192 (0 .. 65535)
with {
  variant "name as 'remotePortType-192'";
};


type XSD.UnsignedShort TrafficSupervisionMediaStopSupervisionType_82 (0 .. 1440)
with {
  variant "name as 'trafficSupervisionMediaStopSupervisionType-82'";
};


type XSD.Token MgcLinkStatusType_203 (pattern "unknown|locked|unlocked")
with {
  variant "name as 'mgcLinkStatusType-203'";
};


type XSD.UnsignedShort MGOriginatedPendingLimitType_143 (1 .. 65535)
with {
  variant "name as 'mGOriginatedPendingLimitType-143'";
};


type XSD.UnsignedShort TrafficSupervisionMaliciousTrafficLogType_83 (1 .. 2)
with {
  variant "name as 'trafficSupervisionMaliciousTrafficLogType-83'";
};


type XSD.UnsignedShort FrequencyAComp3Type_43 (1 .. 4000)
with {
  variant "name as 'frequencyAComp3Type-43'";
};


type XSD.UnsignedShort IterateComp1Type_23 (1 .. 100)
with {
  variant "name as 'iterateComp1Type-23'";
};


/* Alphanumeric string. */
type XSD.Token GwmAlphaNumericString_l53 (pattern "[a-zA-Z0-9]*") length(1 .. 53);


type XSD.Token CodecPtimeType_174 (pattern "Ptime-10|Ptime-20|Ptime-30|Ptime-40|Ptime-60|noOverride")
with {
  variant "name as 'codecPtimeType-174'";
};


type XSD.Token RtcpForwardingType_114 (pattern "drop|on")
with {
  variant "name as 'rtcpForwardingType-114'";
};


type XSD.UnsignedShort FrequencyBComp3Type_45 (1 .. 4000)
with {
  variant "name as 'frequencyBComp3Type-45'";
};


/* Virtual media gateway name.
      The first character must be a letter (a..z) followed by any of:
      a..z
      0..9
      / (forward slash)
      _ (underscore). */
type XSD.Token GwmAlphaNumericFsUs_beginAlpha_l35 (pattern "[a-z][a-z0-9/_]*") length(1 .. 35);


type XSD.UnsignedShort IdlePollTimerType_198 (5 .. 600)
with {
  variant "name as 'idlePollTimerType-198'";
};


type XSD.Token LicenseKeyType_99 length(1 .. 35)
with {
  variant "name as 'licenseKeyType-99'";
};


type XSD.Token PayloadTypeType_101 (pattern "amr|clearchannel|cn|evrc|g711alaw|g711ulaw|g723|g726|g729|g729a|g729ab|h263v1|h263v2|h263vx|h264|mpeg4|t38|tr")
with {
  variant "name as 'payloadTypeType-101'";
};


type XSD.UnsignedShort SubportType_91 (0 .. 28)
with {
  variant "name as 'subportType-91'";
};


type XSD.Token DefaultEchoCancellationType_162 (pattern "on|off")
with {
  variant "name as 'defaultEchoCancellationType-162'";
};


type XSD.Token NameType_22 length(0 .. 64)
with {
  variant "name as 'nameType-22'";
};


type XSD.UnsignedShort LevelAComp3Type_44 (0 .. 63)
with {
  variant "name as 'levelAComp3Type-44'";
};


type XSD.UnsignedInt MaximumWaitDelayType_145 (0 .. 600000)
with {
  variant "name as 'maximumWaitDelayType-145'";
};


type XSD.UnsignedShort IterateComp5Type_55 (1 .. 100)
with {
  variant "name as 'iterateComp5Type-55'";
};


type XSD.HexBinary BitmapType_196 length(4)
with {
  variant "name as 'bitmapType-196'";
};


type XSD.Token MsgIdFormatType_146 (pattern "domain-address|domain-name|device-name")
with {
  variant "name as 'msgIdFormatType-146'";
};


type XSD.UnsignedShort LevelBComp3Type_46 (0 .. 63)
with {
  variant "name as 'levelBComp3Type-46'";
};


type XSD.UnsignedShort AssociationMaxRetransType_68 (1 .. 20)
with {
  variant "name as 'associationMaxRetransType-68'";
};


type XSD.UnsignedShort ToIpDegVideoBitrateThrH264Type_18 (0 .. 52)
with {
  variant "name as 'toIpDegVideoBitrateThrH264Type-18'";
};


type XSD.UnsignedShort LocalPortType_189 (1024 .. 65535)
with {
  variant "name as 'localPortType-189'";
};


type XSD.UnsignedShort LipSyncFineTuningStreamingType_9 (0 .. 300)
with {
  variant "name as 'lipSyncFineTuningStreamingType-9'";
};


/* The Management Information Model (MIM) for an MGW blade system in IS.
    All MGW Managed Object Classes (MOC) are described with their attributes, 
    actions and relationships.
    
    The MGW MIM is mounted into IS MIM on the IS Blade Systems branch and is
    integrated with IS Common Management Framework (CMF) function.
    Configuration of MGW over IS CMF Netconf interface is then enabled with
    the XML schema as described in the MIM.
    
    Compliance with NETCONF RFC 4741 is described in MGW MIM specification
    (1/155 54-CSA 101 05/3).

    In general the following error handling with Netconf applies to MGW:
    
    1) Non-compliant Netconf operations not supported
    
    2) Create MO cannot be performed (operation-failed) in the following cases:
       - if MO is system created
       - if MO has reference to non-existing MO
       - if mandatory attributes are missing
       - if attribute is of wrong type or value not within range
       
       Delete MO cannot be performed (operation-failed) in the following cases:
       - if MO is system created
       - if MO contains childs and the childs are not system created
       - if MO is referred to fro */
/* m other MO in the model

    3) Any MOC specific error case is described in the MOC description. */
type record Mgw
{
	/* This class defines a blade in a blade system, created from IS hardware 
      management. The blades must work in pairs for redundancy, that is, the number of 
      blades in a blade system can be 2, 4, 6, etc.
      For bladetype MSP-STM1 and MSP-OC3 there is one TDM interface and for MSP-16E1T1
      there are sixteen TDM interfaces per blade connecting the MGW blade to an outside 
      network, either SDH (MSP-STM1), SONET (MSP-OC3), 16E1 (MSP-16E1T1) or 16T1 (MSP-16E1T1).       
      An E1/T1 signaling link interface on MSP-STM1 and MSP-OC3 can be used to connect the 
      MGW blade system to a Gateway Controller.
      The Ethernet interface is an IS-internal interface that transports IP traffic,
      and connects to the MXB blades systems via the IS backplane. 
      Note: The Netconf implementation does not support change of image type. 
      The image type is called 'media profile' in the Customer Product Information (CPI)
      and in the ISM (IS Management system).
      Note: It is not possible to use different sublink numbering schemes in a blade
      system, all blades must have the same setting on attribute klmNumberingScheme. */
	record of record {
		/* The subrack and slot position of the blade, for example, "0-3". */
		XSD.Token id,
		/* This attribute is used to show the image that is loaded to the media processing devices.
        Note: The Netconf implementation does not support change of image type. 
        Image type is called 'media profile' in the Customer Product Information (CPI)
        and in the IS Management system (ISM). The default setting is 'voiceStandard'. */
		IntfImageType imageType optional,
		/* This attribute is used to show the interface type for all the interfaces of a MSP-16E1T1 blade.
        Note: The Netconf implementation does not support change of interface type. 
        The default setting is 'E1'. */
		IntfInterfaceType interfaceType optional,
		/* The blade type, for example, "MSP-STM1". */
		XSD.Token bladeType optional,
		/* This attribute is used to configure the clock source. The chosen source will be used as transmit 
        clock source for the TDM interface and the signaling link interface.
        The default setting is 'netsync'.
        Note: This attribute is only valid for bladetype MSP-STM1 and MSP-OC3. */
		IntfTxClockSource txClockSrc optional,
		/* This attribute is used to configure the numbering scheme for SDH/SONET subports.
        The default setting is 'LinearITU-T_zeroNum'.
        Note: Changing klmNumberingScheme requires that the new value is set on all blades in the blade system. 
        The information in outstanding link alarms will not be affected when changing this attribute. */
		IntfKlmNumberingScheme klmNumberingScheme optional,
		/* This attribute is used to configure the timing outlet source. 
        The incoming link selected as the timing outlet source from the specified blade.
        The default setting is 'interface0'.
        Note: This attribute is only valid for bladetype MSP-16E1T1. */
		TimingOutletSrcType_85 timingOutletSrc optional,
		/* This attribute is used to configure the clock source. Either
        BackplaneA, BackplaneB, automatic selection of BackplaneA or BackplaneB
        or the timing outlet source can be selected.
        Note: This attribute is only valid for bladetype MSP-16E1T1. */
		NetsyncTxClockSrcType_86 netsyncTxClockSrc optional,
		/* Shows the number of ephemeral termination set-up attempts per CH-CP.
	Family=Processing load statistics. */
		GwmCounter32 setupAttempts optional,
		/* Shows the number of failed ephemeral termination set-up attempts per CH-CP.
	Family=Processing load statistics. */
		GwmCounter32 failedAttempts optional,
		/* Shows the number of ephemeral terminations in traffic per CH-CP.
	Family=Processing load statistics. */
		GwmGauge32 activeResources optional,
		/* Shows the number of ephemeral termination set-up attempts per CH-CP.
	Family=Processing load statistics. */
		GwmCounter32 ephTerminations optional,
		/* The Control Processor with the control software. */
		record {
			/* Shows the load on the CPU in percent (0 - 100).
        Family = CP statistics. */
			GwmGauge32 cpuLoad optional,
			/* Shows how much memory is used in the control 
        processor in megabytes.
        Family = CP statistics. */
			GwmGauge32 memoryUsage optional,
			/* Shows how much memory is utilized in the control 
        processor in percent (0-100).
        Family = CP statistics. */
			GwmGauge32 memoryUtilization optional,
			/* Shows the CP's class (base, expansion) */
			XSD.Token class optional,
			/* Shows the operational state of CP */
			XSD.Token opState optional,
			/* Shows the administration state of CP */
			XSD.Token admState optional
		} cp,
		/* This class defines the 2 Mbit/s E1 interface for the MSP-16E1T1 blade.
      Note: To be able to configure line type and loopback type, 
      the interface has to be locked.
      The E1Interface class has the following measurement families:
      * Near end E1
      * Far end E1
      * E1 Alarm counters */
		record length(0 .. 16) of record {
			/* A physical interface on the front of the blade. There are 16 physical E1 interfaces (ports). */
			PortType_87 port_,
			/* This attribute shows the administrative state of an E1 interface. */
			IntfIfAdminStatus ifAdminStatus optional,
			/* This attribute shows the operational state of an E1 interface. */
			IntfIfOperStatus ifOperStatus optional,
			/* This attribute presents the number of bits/second transported by an E1 interface. */
			IntfIfSpeed ifLinkRate optional,
			/* This attribute shows the time when an E1 interface entered its operational state. */
			IntfIfLastChanged ifLastChanged optional,
			/* This attribute shows if multiframe alignment is achieved or not. 
        If multiframe alignment is not achieved the far end is considered to be
        a non CRC-4 equipment, corresponding BasicFrame.
        If multiframe alignment is achieved, corresponding MultiFrame. */
			IntfE1LineType frameMode optional,
			/* This attribute is used to lock or unlock an E1 interface.
        NOTE: The attribute ifAdminStatus shows the same value as lockline is set to. */
			IntfLockLine lockLine optional,
			/* This attribute is an alias name for the E1 interface as specified by a network manager. 
        It is used to identify interfaces by a text name, an option to assign a descriptive 
        name to an interface. */
			IntfIfAlias userDefinedName optional,
			/* This attribute indicates whether linkUp or linkDown traps should be generated for 
        the E1 intferface. 
        The default setting is 'disabled'. */
			IntfLinkUpDownTrap e1LinkUpDownTrapEnable optional,
			/* This attribute defines loopback configuration.
        Note: Loopback is only used for test purpose and the link has 
        to be locked before changing this attribute. 
        The default setting is 'off'. */
			IntfLoopback loopback optional,
			/* This attribute is for configuring the framing type for the E1 interface. 
        Note: The E1 interface has to be locked before setting linetype.
        The default setting is 'multiframeAuto'. */
			IntfE1LineType lineType optional,
			/* This attribute is for activation or deactivation of alarm 
         when Alarm Indication Signal (AIS) is received. 
         The default setting is 'on'. */
			IntfAlarmActivation alarmActE1Ais optional,
			/* This attribute is for activation or deactivation of alarm 
         when Remote Defect Indication (RDI) is received. 
         The default setting is 'on'. */
			IntfAlarmActivation alarmActE1Rdi optional,
			/* This attribute is used to configure the clock source. The chosen source 
        will be used as transmit clock source for the E1 interface.
        The default setting is 'netsync'. */
			IntfTxClockSource txClockSrc optional,
			/* An integer value N that defines the threshold value for excessive Bit Error Rate (BER) on the E1 interface. 
        The threshold value is 10 raised to -N (10^-N). An alarm will be issued when the threshold has been reached.
        The alarm will be cleared when the excessive BER falls below one tenth of the threshold value.
        The threshold value must not be less than the linkDegBerThr threshold.
        The default a */
			/* ttribute value is 3, corresponding to a threshold value of 10^-3, for both CRC4 and Basic frame mode. */
			IntfE1ExcBerThreshold linkExcBerThr optional,
			/* An integer value N that defines the threshold value for degraded Bit Error Rate (BER) on the E1 interface. 
        The threshold value is 10 raised to -N (10^-N). An alarm will be issued when the threshold has been reached.
        The alarm will be cleared when the degraded BER falls below one tenth of the threshold value.
        The threshold value must not be greater than the linkExcBerThr threshold.
	The default attribute value is 5, corresponding to a threshold value of (10^-5), when Basic frame mode is used and 
        the default attribute value is 6, corresponding to a threshold value of (10^-6), when CRC4 frame mode used. */
			IntfE1DegBerThreshold linkDegBerThr optional,
			/* Shows E1 Background Block Errors (BBE).
        Family=Near end E1. */
			IntfCounter64 e1StatsBBE optional,
			/* Shows E1 Errored Seconds (ES).
	Family=Near end E1. */
			IntfCounter64 e1StatsES optional,
			/* Shows E1 Severely Errored Seconds (SES).
	Family=Near end E1. */
			IntfCounter64 e1StatsSES optional,
			/* Shows E1 UnAvailable Time (UAT).
	Family=Near end E1. */
			IntfCounter64 e1StatsUAT optional,
			/* Shows Far End E1 Background Block Errors (BBE).
	Family=Far End E1. */
			IntfCounter64 e1StatsFarEndBBE optional,
			/* Shows Far End E1 Errored Seconds (ES).
	Family=Far End E1. */
			IntfCounter64 e1StatsFarEndES optional,
			/* Shows Far End E1 Severely Errored Seconds (SES).
	Family=Far End E1. */
			IntfCounter64 e1StatsFarEndSES optional,
			/* Shows Far End E1 UnAvailable Time (UAT).
	Family=Far End E1. */
			IntfCounter64 e1StatsFarEndUAT optional,
			/* Shows E1 alarm counter handled slip events.
	Family=E1 alarm counters. */
			IntfCounter64 e1StatsSLIP optional,
			/* Shows E1 alarm counter detected Loss Of Frame (LOF).
	Family=E1 alarm counters. */
			IntfCounter64 e1StatsLOF optional,
			/* Shows E1 alarm counter detected Alarm Indication Signal (AIS).
	Family=E1 alarm counters. */
			IntfCounter64 e1StatsAIS optional,
			/* Shows E1 alarm counter detected Remote Defect Indication (RDI).
	Family=E1 alarm counters. */
			IntfCounter64 e1StatsRDI optional
		} e1Interface_list,
		/* The Ethernet interface is an IS-internal interface which transports IP traffic,
      via the IS backplane and the MXB. The interfaces are 
      created automatically at the creation of a blade. No configuration can be done 
      for these Ethernet interfaces.
      The internal Ethernet interface class has the following measurement 
      families:
      * Traffic management statistics
      * Ethernet interface statistics
      * Ethernet interface error details
      * Ethernet interface RMON statistics
      * Bandwidth statistics */
		record length(2) of record {
			/* A physical interface on a blade, that is, one of the two internal 
        Ethernet interfaces in the backplane (0 or 1). */
			PortType_88 port_,
			/* The number of transmitted packets belonging to the DiffServ class 
        Expedited Forwarding (EF).
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfTxPacketsEF optional,
			/* The number of transmitted packets belonging to the DiffServ class 
        Network Control (NC)/Internetwork Control (IC).
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfTxPacketsIC optional,
			/* The number of transmitted packets belonging to the DiffServ class 
        Assured Forwarding (AF)1.
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfTxPacketsAF1 optional,
			/* The number of transmitted packets belonging to the DiffServ class 
        Assured Forwarding (AF)2.
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfTxPacketsAF2 optional,
			/* The number of transmitted packets belonging to the DiffServ class 
        Assured Forwarding (AF)3.
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfTxPacketsAF3 optional,
			/* The number of transmitted packets belonging to the DiffServ class 
        Assured Forwarding (AF)4.
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfTxPacketsAF4 optional,
			/* The number of transmitted packets belonging to the DiffServ class 
        Default Forwarding (DF).
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfTxPacketsDF optional,
			/* The number of packets discarded due to buffer limit exceeded for the 
        DiffServ class Expedited Forwarding (EF).
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfDiscardedPacketsEF optional,
			/* The number of packets discarded due to buffer limit exceeded for the
        DiffServ class Network Control (NC)/Internetwork Control (IC).
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfDiscardedPacketsIC optional,
			/* The number of packets discarded due to buffer limit exceeded for the
        DiffServ class Assured Forwarding (AF)1.
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfDiscardedPacketsAF1 optional,
			/* The number of packets discarded due to buffer limit exceeded for the 
        DiffServ class Assured Forwarding (AF)2.
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfDiscardedPacketsAF2 optional,
			/* The number of packets discarded due to buffer limit exceeded for the
        DiffServ class Assured Forwarding (AF)3.
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfDiscardedPacketsAF3 optional,
			/* The number of packets discarded due to buffer limit exceeded for the 
        DiffServ class Assured Forwarding (AF)4.
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfDiscardedPacketsAF4 optional,
			/* The number of packets discarded due to buffer limit exceeded for the 
        DiffServ class Default Forwarding (DF).
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfDiscardedPacketsDF optional,
			/* The number of packets sent from the NP to the CP.
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfTxPacketsToCp optional,
			/* The number of discarded packets sent from the NP to the CP.
	Family=Traffic management statistics. */
			IntfCounter64 ipStatsIfDiscardedPacketsToCp optional,
			/* The total number of transmitted frames, including bad frames due to 
        underrun or undersize.
	Family=Ethernet interface statistics. */
			IntfCounter64 ethernetStatsTxFrames optional,
			/* The number of transmitted octets. This number also includes bad frames due 
        to underrun and undersize. The Ethernet header and Frame Check 
        Sequence (FCS) is included, but preamble, Start of 
        Frame Delimiter (SDF), and Inter-Frame Gap are not included.
	Family=Ethernet interface statistics. */
			IntfCounter64 ethernetStatsTxOctets optional,
			/* The number of received valid frames, that is, frames with no Cyclic 
        Redundancy Check (CRC) errors, not undersized, not oversized.
	Family=Ethernet interface statistics. */
			IntfCounter64 ethernetStatsRxFrames optional,
			/* The number of octets received in all frames (valid frames as well as 
        invalid frames). The Ethernet header and Frame Check Sequence (FCS) 
        is included, but preamble, Start of Frame Delimiter (SDF) and 
        Inter-Frame Gap are not included.
	Family=Ethernet interface statistics. */
			IntfCounter64 ethernetStatsRxOctets optional,
			/* The number of transmitted broadcast frames.
	Family=Ethernet interface statistics. */
			IntfCounter64 ethernetStatsBroadcastTx optional,
			/* The number of received broadcast frames.
	Family=Ethernet interface statistics. */
			IntfCounter64 ethernetStatsBroadcastRx optional,
			/* The number of received frames that were discarded due to overflow.
	Family=Ethernet interface statistics. */
			IntfCounter64 ethernetStatsRxDiscarded optional,
			/* The number of frames that were not transmitted due to underflow.
	Family=Ethernet interface statistics. */
			IntfCounter64 ethernetStatsTxDiscarded optional,
			/* This counter represents the total sum of all received invalid frames 
        that were discarded:
        * Received frames discarded due to unknown Ethernet protocol.
        * Received frames discarded due to other reasons.
	Family=Ethernet interface statistics. */
			IntfCounter64 ethernetStatsRxErrors optional,
			/* The number of frames received that were discarded due to:
        * Unsupported Ethernet format (that is, not DIX coding).
        * Unsupported Ethernet Type (that is, not Address Resolution 
          Protocol (ARP), IPv4 or IPv6).
        * Invalid loop test frames.
	Family=Ethernet interface error details. */
			IntfCounter64 ethernetStatsUnknownProtos optional,
			/* The number of received frames that were discarded due to:
        * Stacked Virtual Local Area Network (VLAN) tags.
        * VLAN-tagged frame with Canonical Format Indicator (CFI)=1.
	Family=Ethernet interface error details. */
			IntfCounter64 ethernetStatsRxDiscOther optional,
			/* The number of received frames with a length of exactlay 64 octets.
        All frames are counted, valid as well as invalid frames.
	Family=Ethernet interface RMON statistics. */
			IntfCounter64 ethernetStatsRx64 optional,
			/* The number of received frames that had a length
        between 65 and 127 octets. All frames are counted, 
        valid as well as invalid frames.
	Family=Ethernet interface RMON statistics. */
			IntfCounter64 ethernetStatsRx65To127 optional,
			/* The number of received frames that had a length
        between 128 and 255 octets. All frames are counted, 
        valid as well as invalid frames.
	Family=Ethernet interface RMON statistics. */
			IntfCounter64 ethernetStatsRx128To255 optional,
			/* The number of received frames that had a length
        between 256 and 511 octets. All frames are counted, 
        valid as well as invalid frames.
	Family=Ethernet interface RMON statistics. */
			IntfCounter64 ethernetStatsRx256To511 optional,
			/* The number of received frames that had a length
        between 512 and 1023 octets. All frames are counted, 
        valid as well as invalid frames.
	Family=Ethernet interface RMON statistics. */
			IntfCounter64 ethernetStatsRx512To1023 optional,
			/* The number of received frames that had a length
        between 1024 and 1522 octetss. All frames are counted, 
        valid as well as invalid frames.
	Family=Ethernet interface RMON statistics. */
			IntfCounter64 ethernetStatsRx1024ToMax optional,
			/* The total receive bandwidth in octets per second. The bandwidth 
        is the mean value measured over the last 8-second period.
	Family=Bandwidth statistics. */
			IntfCounter64 ethernetStatsRxBandwidth optional,
			/* The total transmit bandwidth in octets per second. The bandwidth 
        is the mean value measured over the last 8-second period.
	Family=Bandwidth statistics. */
			IntfCounter64 ethernetStatsTxBandwidth optional
		} internalEthernetInterface_list,
		/* Licence handling for MGW. */
		record of record {
			/* The function for which the license is valid. NOTE: Voice license type is
    only used for backward compatibility purposes, do not use it! */
			ResourceType_98 resource,
			/* This attribute shows the current limit for a particular license 
	resource and allows you to specify a new limit. The highest possible 
	value this attribute can be set to is the value of the attribute 
	maxLimit. */
			GwmInteger32 currentLimit,
			/* The current resource utilization. If the maximum limit is reached, an 
	event is issued. This value is for statistics purpose. */
			GwmInteger32 currentUsage optional,
			/* The license key for the license resource. */
			LicenseKeyType_99 licenseKey optional,
			/* This is the maximum possible limit for the particular license resource.
	The maximum limit depends on the type of resource, such as voice or 
	video and is different for MSP-STM1, MSP-OC3 and MSP-16E1T1. */
			GwmInteger32 maxLimit optional,
			/* This value indicates in how small steps the current limit can be 
	changed. */
			GwmInteger32 step optional
		} license_list,
		/* This class defines an STM-1 interface including the SDH RS and MS link layers, 
      and SDH high order path (VC-4) representing end-to-end data flow.
      NOTE: The SDH link has to be locked to change loopback. 
      The SdhInterface class has the following measurement families:
      * SDH RS
      * SDH MS
      * Far end SDH MS
      * SDH path
      * Far end SDH Path */
		record {
			/* This attribute shows the administrative state of the SDH link interface. */
			IntfIfAdminStatus ifAdminStatus optional,
			/* This attribute shows the operational state of the SDH link interface. */
			IntfIfOperStatus ifOperStatus optional,
			/* This attribute presents the number of bits/second transported by a SDH link. */
			IntfIfSpeed ifLinkRate optional,
			/* This attribute shows the time when the SDH link interface entered its operational state. */
			IntfIfLastChanged ifLastChanged optional,
			/* This attribute is used to lock or unlock the SDH link interface.
        NOTE: The attribute ifAdminStatus shows the same value as lockline is set to. */
			IntfLockLine lockLine optional,
			/* This attribute is an alias name for the interface as specified by a network manager. 
      It is used to identify interfaces by a text name, an option to assign a descriptive 
      name to an interface. */
			IntfIfAlias linkUserDefinedName optional,
			/* This attribute indicates whether linkUp or linkDown traps should be generated for the SDH link interface. 
        The default setting is 'disabled'. */
			IntfLinkUpDownTrap sdhLinkUpDownTrapEnable optional,
			/* This attribute defines loopback configuration.
        NOTE: Loopback is only used for test purpose and the link has to be locked before changing this attribute. 
        The default setting is 'off'. */
			IntfLoopback loopback optional,
			/* This attribute is for activation or deactivation of alarm when Alarm Indication Signal (MS-AIS) is received. 
         The default setting is 'on'. */
			IntfAlarmActivation alarmActMsAis optional,
			/* This attribute is for activation or deactivation of alarm when Remote Defect Indication (MS-RDI) is received. 
        The default setting is 'on'. */
			IntfAlarmActivation alarmActMsRdi optional,
			/* This attribute allows you to specify whether the deactivation or automatic insertion of a Higher order Path - Remote Defect Indication (HP-RDI) is to occur on the interface. 
        The default setting is 'autoRdi'. */
			IntfLinkRdiInsertion insActMsRdi optional,
			/* This attribute controls the automatic insertion of a Multiplex Section - Remote Error Indication (REI) on the upstream interface.  
        The default setting is 'auto'. */
			IntfReiInsertion insActMsRei optional,
			/* This attribute sets the Unavailability state mode, single or both directions considered when Unavailable Time (UAT) is determined. 
        It applies to all signal levels. The default setting is 'unidirectional'. */
			IntfUasMode unAvailState optional,
			/* An integer value N that defines the threshold value for excessive Bit Error Rate (BER) on the SDH level. The threshold        value is 10 raised to -N (10^-N). An alarm will be issued when the threshold has been reached.
        The alarm will be cleared when the excessive BER falls below one tenth of the threshold value.
        The threshold value must not be less than the linkDegBerThr threshold.
        The default attribute value is 3, corresponding to a threshold value of 10^-3. */
			IntfBerThreshold linkExcBerThr optional,
			/* An integer value N that defines the threshold value for degraded Bit Error Rate (BER) on the SDH level. The threshold         value is 10 raised to -N (10^-N). An alarm will be issued when the threshold has been reached.
        The alarm will be cleared when the degraded BER falls below one tenth of the threshold value.
        The threshold value must not be greater than the linkExcBerThr threshold.
        The default attribute value is 6, corresponding to a threshold value of 10^-6. */
			IntfBerThreshold linkDegBerThr optional,
			/* This attribute is an alias name for the interface as specified by a network manager. 
        It provides a non-volatile handle for the interface. */
			IntfIfAlias pathUserDefinedName optional,
			/* This attribute indicates whether linkUp or linkDown traps should be generated for the SDH path interface. 
        The default setting is 'disabled' */
			IntfLinkUpDownTrap pathLinkUpDownTrapEnable optional,
			/* This attribute is for activation or deactivation of alarm when Alarm Indication Signal (AU-AIS) is received. 
        The default setting is 'on'. */
			IntfAlarmActivation alarmActAu4Ais optional,
			/* This attribute is for activation or deactivation of alarm when Remote Defect Indication (HP-RDI) is received. 
        The default setting is 'on'. */
			IntfAlarmActivation alarmActVc4Rdi optional,
			/* This attribute is for activation or deactivation of alarm when PayLoad Mismatch (HP-PLM) has occurred. 
        The default setting is 'on'. */
			IntfAlarmActivation alarmActVc4Plm optional,
			/* This attribute is for activation or deactivation of alarm when Trace Identifier Mismatch (HP-TIM) has occurred. 
        The default setting is 'on'. */
			IntfAlarmActivation alarmActVc4Tim optional,
			/* This attribute controls the Remote Defect Indication (RDI) insertion mode on path layer.
	 The default setting is 'autoPlmTim'. */
			IntfPathRdiInsertion insActVc4Rdi optional,
			/* This attribute defines a sent trace identifier, a text string identifying the near end node.      
 	The maximum string length is 15 characters.
        The default setting is '' (empty string). */
			XSD.Token vc4TiIns optional,
			/* This attribute defines an expected trace identifier, a text string which is compared with the string received from the far end node. 
        An HP-TIM alarm will be sent if there is a mismatch between this string and the string that is received. 
	The maximum string length is 15 characters.
        The default setting is '' (empty string). */
			XSD.Token vc4TiExp optional,
			/* An integer value N that defines the threshold value for excessive Bit Error Rate (BER) on the SDH path level. 
        The threshold value is 10 raised to -N (10^-N). An alarm will be issued when the threshold has been reached.
        The alarm will be cleared when the excessive BER falls below one tenth of the threshold value.
        The threshold value must not be less than the pathDegBerThr threshold.
        The default attribute value is 3, corresponding to a threshold value of 10^-3. */
			IntfBerThreshold pathExcBerThr optional,
			/* An integer value N that defines the threshold value for degraded Bit Error Rate (BER) on the SDH path level. The thres        hold value is 10 raised to -N (10^-N). An alarm will be issued when the threshold has been reached.
        The alarm will be cleared when the degraded BER falls below one tenth of the threshold value.
        The threshold value must not be greater than the pathExcBerThr threshold.
        The default attribute value is 6, corresponding to a threshold value of 10^-6. */
			IntfBerThreshold pathDegBerThr optional,
			/* Shows Regeneration Section (RS) Background Block Errors (BBE).
	Family=SDH RS. */
			IntfCounter64 sdhStatsRsBBE optional,
			/* Shows Regeneration Section (RS) Errored Seconds (ES).
	Family=SDH RS. */
			IntfCounter64 sdhStatsRsES optional,
			/* Shows Regeneration Section (RS) Severely Errored Seconds (SES).
	Family=SDH RS. */
			IntfCounter64 sdhStatsRsSES optional,
			/* Shows Regeneration Section (RS) UnAvailable Time (UAT).
	Family=SDH RS. */
			IntfCounter64 sdhStatsRsUAT optional,
			/* Shows Multiplex Section (MS) Background Block Errors (BBE).
	Family=SDH MS. */
			IntfCounter64 sdhStatsMsBBE optional,
			/* Shows Multiplex Section (MS) Errored Seconds (ES).
	Family=SDH MS. */
			IntfCounter64 sdhStatsMsES optional,
			/* Shows Multiplex Section (MS) Severely Errored Seconds (SES).
	Family=SDH MS. */
			IntfCounter64 sdhStatsMsSES optional,
			/* Shows Multiplex Section (MS) UnAvailable Time (UAT).
	Family=SDH MS. */
			IntfCounter64 sdhStatsMsUAT optional,
			/* Shows Far End Multiplex Section (MS) Background Block Errors (BBE). 
        Family=Far end SDH MS. */
			IntfCounter64 sdhStatsFarEndMsBBE optional,
			/* Shows Far End Multiplex Section (MS) Errored Seconds (ES).
	Family=Far end SDH MS. */
			IntfCounter64 sdhStatsFarEndMsES optional,
			/* Shows Far End Multiplex Section (MS) Severely Errored Seconds (SES). 
        Family=Far end SDH MS. */
			IntfCounter64 sdhStatsFarEndMsSES optional,
			/* Shows Far End Multiplex Section (MS) UnAvailable Time (UAT).
	Family=Far end SDH MS. */
			IntfCounter64 sdhStatsFarEndMsUAT optional,
			/* Shows SDH path Background Block Errors (BBE).
	Family=SDH path. */
			IntfCounter64 sdhPathStatsBBE optional,
			/* Shows SDH path Errored Seconds (ES).
	Family=SDH path. */
			IntfCounter64 sdhPathStatsES optional,
			/* Shows SDH path Severely Errored Seconds (SES).
	Family=SDH path. */
			IntfCounter64 sdhPathStatsSES optional,
			/* Shows SDH path UnAvailable Time (UAT).
	Family=SDH path. */
			IntfCounter64 sdhPathStatsUAT optional,
			/* Shows Far End SDH path Background Block Errors (BBE).
	Family=Far end SDH path. */
			IntfCounter64 sdhPathStatsFarEndBBE optional,
			/* Shows Far End SDH path Errored Seconds (ES).
	Family=Far end SDH path. */
			IntfCounter64 sdhPathStatsFarEndES optional,
			/* Shows Far End SDH path Severely Errored Seconds (SES).
	Family=Far end SDH path. */
			IntfCounter64 sdhPathStatsFarEndSES optional,
			/* Shows Far End SDH path UnAvailable Time (UAT).
	Family=Far end SDH path. */
			IntfCounter64 sdhPathStatsFarEndUAT optional,
			/* This class defines the SDH subLink interface representing the lower path with 
      Virtual Containers (VC-12) on SDH path and the 2 Mbit/s E1 interface. 
      There are 63 VC-12 on a VC-4 path.
      Note: To be able to configure linetype and loopback, the sublink has to be 
      locked.
      The SDH sublink class has the following measurement families:
      * SDH low path
      * Far end SDH low path
      * SDH low path alarm counters
      * E1
      * Far end E1
      * E1 Alarm counters */
			record length(63) of record {
				/* The subport number of the SDH sublink. There are 63 subports per SDH link,
        the numbering (0-62 or 1-63) depends on the KLM numbering configuration. */
				SubportType_89 subport,
				/* This attribute shows the SDH sublink KLM number. */
				IntfKlmNumber klmNumbering optional,
				/* This attribute shows the administrative state of the SDH sublink interface. */
				IntfIfAdminStatus ifAdminStatus optional,
				/* This attribute shows the operational state of the SDH sublink interface. */
				IntfIfOperStatus ifOperStatus optional,
				/* This attribute presents the number of bits/second transported by a SDH sublink. */
				IntfIfSpeed ifLinkRate optional,
				/* This attribute shows the time when the SDH sublink interface entered its operational state. */
				IntfIfLastChanged ifLastChanged optional,
				/* This attribute is used to lock or unlock the sublink.
        NOTE: The attribute ifAdminStatus shows the same value as lockline is set to. */
				IntfLockLine lockLine optional,
				/* This attribute is an alias name for the interface as specified by a network manager. 
        It is used to identify interfaces by a text name, an option to assign a descriptive 
        name to an interface. */
				IntfIfAlias userDefinedName optional,
				/* This attribute indicates whether linkUp or linkDown traps should be generated for the SDH lowpath layer of the sublink. 
        The default setting is 'disabled'. */
				IntfLinkUpDownTrap lowpathLinkUpDownTrapEnable optional,
				/* This attribute is for activation ordeactivation of alarm when Alarm Indication Signal (TU-AIS) is received. 
         The default setting is 'on'. */
				IntfAlarmActivation alarmActTu12Ais optional,
				/* This attribute is for activation or deactivation of alarm when Remote Defect Indication (LP-RDI) is received. 
         The default setting is 'on'. */
				IntfAlarmActivation alarmActVc12Rdi optional,
				/* This attribute is for activation or deactivation of alarm when Payload Mismatch (LP-PLM) has occurred. 
         The default setting is 'on'. */
				IntfAlarmActivation alarmActVc12Plm optional,
				/* This attribute allows you to specify deactivation or automatic insertion of a Low order Path - Remote Defect Indication (LP-RDI) on the interface.
	 The default setting is 'autoPlm'. */
				IntfLowPathRdiInsertion insActVc12Rdi optional,
				/* This attribute defines loopback configuration.
        Note: Loopback is only used for test purpose, and the sublink has to be locked before changing this attribute. 
        The default setting is 'off'. */
				IntfLoopback loopback optional,
				/* This attribute is for configuring the framing type for the SDH sublink. 
        Note: The sublink has to be locked before setting linetype.
        The default setting is 'multiframeAuto'. */
				IntfE1LineType lineType optional,
				/* This attribute indicates whether linkUp or linkDown traps should be generated for the SDH E1 layer of the sublink. 
        The default setting is 'disabled'. */
				IntfLinkUpDownTrap e1LinkUpDownTrapEnable optional,
				/* This attribute is for activation or deactivation of alarm when E1-AIS (Alarm Indication Signal) is received. 
         The default setting is 'on'. */
				IntfAlarmActivation alarmActE1Ais optional,
				/* This attribute is for activation or deactivation of alarm when E1-RDI (Remote Defect Indication) is received. 
         The default setting is 'on'. */
				IntfAlarmActivation alarmActE1Rdi optional,
				/* Shows SDH low path Background Block Errors (BBE).
	Family=SDH low path. */
				IntfCounter64 sdhLowPathStatsBBE optional,
				/* Shows SDH low path Errored Seconds (ES).
	Family=Far end SDH path. */
				IntfCounter64 sdhLowPathStatsES optional,
				/* Shows SDH low path Severely Errored Seconds (SES).
	Family=Far end SDH path. */
				IntfCounter64 sdhLowPathStatsSES optional,
				/* Shows SDH low path UnAvailable Time (UAT).
	Family=Far end SDH path. */
				IntfCounter64 sdhLowPathStatsUAT optional,
				/* Shows Far End SDH low path Background Block Errors (BBE).
	Family=Far end SDH low path. */
				IntfCounter64 sdhLowPathStatsFarEndBBE optional,
				/* Shows Far End SDH low path Errored Seconds (ES).
	Family=Far end SDH low path. */
				IntfCounter64 sdhLowPathStatsFarEndES optional,
				/* Shows Far End SDH low path Severely Errored Seconds (SES).
	Family=Far end SDH low path. */
				IntfCounter64 sdhLowPathStatsFarEndSES optional,
				/* Shows Far End SDH low path UnAvailable Time (UAT).
	Family=Far end SDH low path. */
				IntfCounter64 sdhLowPathStatsFarEndUAT optional,
				/* Shows the number of negative TU pointer adjustment events. This is 
        a normal event occurring quite frequently It does not necessarily indicate a 
        fault situation.
	Family=SDH low path alarm counters. */
				IntfCounter64 sdhLowPathStatsNJE optional,
				/* Shows the number of positive TU pointer adjustment events. This is 
        a normal event occurring quite frequently. It does not necessarily indicate a 
        fault situation.
	Family=SDH low path alarm counters. */
				IntfCounter64 sdhLowPathStatsPJE optional,
				/* Shows the number of overrun or underrun in mapper FIFO. 
        This event indicates that too many pointer adjustments have occurred within a short period, 
        so that frequency changes have not been handled in a controlled way.
	Family=SDH low path alarm counters. */
				IntfCounter64 sdhLowPathStatsESE optional,
				/* Shows the number of TU-12 AIS detected on the sublink
	Family=SDH low path alarm counters. */
				IntfCounter64 sdhLowPathStatsTU12AIS optional,
				/* Shows the number of TU-12 LOP detected on the sublink
	Family=SDH low path alarm counters. */
				IntfCounter64 sdhLowPathStatsTU12LOP optional,
				/* Shows the number of VC-12 PLM detected on the sublink
	Family=SDH low path alarm counters. */
				IntfCounter64 sdhLowPathStatsVC12PLM optional,
				/* Shows the number of VC-12 RDI detected on the sublink.	
	Family=SDH low path alarm counters. */
				IntfCounter64 sdhLowPathStatsVC12RDI optional,
				/* Shows E1 Background Block Errors (BBE).
	Family=E1. */
				IntfCounter64 e1StatsBBE optional,
				/* Shows E1 Errored Seconds (ES).
	Family=E1. */
				IntfCounter64 e1StatsES optional,
				/* Shows E1 Severely Errored Seconds (SES).
	Family=E1. */
				IntfCounter64 e1StatsSES optional,
				/* Shows E1 UnAvailable Time (UAT).
	Family=E1. */
				IntfCounter64 e1StatsUAT optional,
				/* Shows Far End E1 Background Block Errors (BBE).
	Family=Far end E1. */
				IntfCounter64 e1StatsFarEndBBE optional,
				/* Shows Far End E1 Errored Seconds (ES).
	Family=Far end E1. */
				IntfCounter64 e1StatsFarEndES optional,
				/* Shows Far End E1 Severely Errored Seconds (SES).
	Family=Far end E1. */
				IntfCounter64 e1StatsFarEndSES optional,
				/* Shows Far End E1 UnAvailable Time (UAT).
	Family=Far end E1. */
				IntfCounter64 e1StatsFarEndUAT optional,
				/* Shows E1 Alarm counter for handled slip events.
	Family=E1 alarm counters. */
				IntfCounter64 e1StatsSLIP optional,
				/* Shows E1 Alarm counter for detected LOF (Loss Of Frame).
	Family=E1 alarm counters. */
				IntfCounter64 e1StatsLOF optional,
				/* Shows E1 Alarm counter for detected AIS (Alarm Indication Signal).
	Family=E1 alarm counters. */
				IntfCounter64 e1StatsAIS optional,
				/* Shows E1 Alarm counter for detected RDI (Remote Defect Indication).
	Family=E1 alarm counters. */
				IntfCounter64 e1StatsRDI optional
			} sdhSubLink_list
		} sdhInterface,
		/* This class defines the signaling interface, used to transport narrowband 
      signaling from MGW to GC. The interface could be of type E1 or T1.
      Note: The link has to be locked to configure loopback. */
		record {
			/* This attribute shows the administrative state of the signaling interface. */
			IntfIfAdminStatus ifAdminStatus optional,
			/* This attribute shows the operational state of the signaling interface. */
			IntfIfOperStatus ifOperStatus optional,
			/* This attribute shows the framing type for the signaling link.
        Note: It is not possible to change the framing type.
        Note: This attribute is only valid for bladetype MSP-STM1 and MSP-OC3.
        The signaling link of type E1 will be set to 'BasicFrame' and the signaling link of type T1 will be set to '24-frame multiframe' (ESF - Extended Super Frame)'. */
			IntfSignLinkLineType signalLinkLineType optional,
			/* This attribute presents the number of bits/second transported by the signaling link. */
			IntfIfSpeed ifLinkRate optional,
			/* This attribute shows the time when the signaling link interface entered its operational state. */
			IntfIfLastChanged ifLastChanged optional,
			/* This attribute is for configuring the signaling link as either E1 or T1, independently of the TDM interface STM-1 or OC-3.
        Note: Before changing this attribute, the signaling link has to be locked and it must not haveing any signaling devices configured. 
        Note: This attribute is only valid for bladetype MSP-STM1 and MSP-OC3.
        The default setting is 'E1'. */
			IntfInterfaceType signalingOpMode optional,
			/* This attribute is used to lock or unlock the interface.
        NOTE: The attribute ifAdminStatus shows the same value as lockline is set to. */
			IntfLockLine lockLine optional,
			/* This attribute is an alias name for the interface as specified by a network manager. 
        It is used to identify interfaces by a text name, an option to assign a descriptive 
        name to an interface. */
			IntfIfAlias userDefinedName optional,
			/* This attribute defines loopback configuration.
        Note: Loopback is only used for test purpose and the link has to be locked before changing this attribute. 
        The default setting is 'off'. */
			IntfLoopback loopback optional
		} signalingInterface,
		/* This class defines the SONET interface, an OC-3 interface including the SONET 
      Line and SONET Section.
      The SonetInterface class has the following measurement families:
      * SONET line
      * Far End SONET line
      * SONET section */
		record {
			/* This attribute shows the administrative state of the SONET link interface. */
			IntfIfAdminStatus ifAdminStatus optional,
			/* This attribute shows the operational state of the SONET link interface. */
			IntfIfOperStatus ifOperStatus optional,
			/* This attribute presents the number of bits/second transported by a SONET link. */
			IntfIfSpeed ifLinkRate optional,
			/* This attribute shows the time when the SONET link interface entered its operational state. */
			IntfIfLastChanged ifLastChanged optional,
			/* This attribute is used to lock orunlock a SONET link interface.
        NOTE: The attribute ifAdminStatus shows the same value as lockline is set to. */
			IntfLockLine lockLine optional,
			/* This attribute is an alias name for the interface as specified by a network manager. 
       It is used to identify interfaces by a text name, an option to assign a descriptive name to an interface. */
			IntfIfAlias userDefinedName optional,
			/* This attribute defines loopback configuration.
        Note: Loopback is only used for testpurpose and the link has to be locked before changing this attribute. 
        The default setting is 'off'. */
			IntfLoopback loopback optional,
			/* This attribute indicates whether linkUp or linkDown traps should be generated for the SONET link interface. 
        The default setting is 'disabled'. */
			IntfLinkUpDownTrap linkUpDownTrapEnable optional,
			/* This attribute is for activation or deactivation of alarm when Alarm Indication Signal - SONET Line (AIS-L) is received. 
         The default setting is 'on'. */
			IntfAlarmActivation alarmActAisL optional,
			/* This attribute is for activation or deactivation of alarm when Remote Defect Indication - SONET Line (RDI-L) is received. 
        The default setting is 'on'. */
			IntfAlarmActivation alarmActRdiL optional,
			/* This attribute allows you to specify the automatic insertion of a Remote Defect Indication - SONET Line (RDI-L) on the interface.
        The default setting is 'autoRdi'. */
			IntfLinkRdiInsertion insActRdiL optional,
			/* This attribute defines the insertion of a Remote Error Indication - SONET Line (REI-L) on the upstream interface.
        The default setting is 'auto'. */
			IntfReiInsertion insActReiL optional,
			/* This attribute sets the Unavailability state mode, single or both directions considered when UAT is determined. 
        It applies to all signal levels. The default setting is 'unidirectional'. */
			IntfUasMode unAvailState optional,
			/* An integer value N that defines the threshold value for excessive Bit Error Rate (BER) on the SONET level. 
        The threshold value is 10 raised to -N (10^-N). An alarm will be issued when the threshold has been reached.
        The alarm will be cleared when the excessive BER falls below one tenth of the threshold value.
        The threshold value must not be less than the degBerThr threshold.
        The default attribute value is 3, corresponding to a threshold value of 10^-3. */
			IntfBerThreshold excBerThr optional,
			/* An integer value N that defines the threshold value for degraded Bit Error Rate (BER) on the SONET level. 
        The threshold value is 10 raised to -N (10^-N). An alarm will be issued when the threshold has been reached.
        The alarm will be cleared when the degraded BER falls below one tenth of the threshold value.
        The threshold value must not be greater than the excBerThr threshold.
        The default attribute value is 6, corresponding to a threshold value of 10^-6. */
			IntfBerThreshold degBerThr optional,
			/* Shows SONET section Background Block Errors (BBE).
	Family=SONET section. */
			IntfCounter64 sdhStatsRsBBE optional,
			/* Shows SONET section Errored Seconds (ES).
	Family=SONET section. */
			IntfCounter64 sdhStatsRsES optional,
			/* Shows SONET section Severely Errored Seconds (SES).
	Family=SONET section. */
			IntfCounter64 sdhStatsRsSES optional,
			/* Shows SONET section UnAvailable Time (UAT).
	Family=SONET section. */
			IntfCounter64 sdhStatsRsUAT optional,
			/* Shows SONET line Background Block Errors (BBE).
	Family=SONET line. */
			IntfCounter64 sdhStatsMsBBE optional,
			/* Shows SONET line Errored Seconds (ES).
	Family=SONET line. */
			IntfCounter64 sdhStatsMsES optional,
			/* Shows SONET line Severely Errored Seconds (SES).
	Family=SONET line. */
			IntfCounter64 sdhStatsMsSES optional,
			/* Shows SONET line UnAvailable Time (UAT).
	Family=SONET line. */
			IntfCounter64 sdhStatsMsUAT optional,
			/* Shows Far End SONET line Background Block Errors (BBE).
	Family=Far End SONET line. */
			IntfCounter64 sdhStatsFarEndMsBBE optional,
			/* Shows Far End SONET line Errored Seconds (ES).
	Family=Far End SONET line. */
			IntfCounter64 sdhStatsFarEndMsES optional,
			/* Shows Far End SONET line Severely Errored Seconds (SES).
	Family=Far End SONET line. */
			IntfCounter64 sdhStatsFarEndMsSES optional,
			/* Shows Far End SONET line UnAvailable Time (UAT).
	Family=Far End SONET line. */
			IntfCounter64 sdhStatsFarEndMsUAT optional,
			/* This class defines the SONET path link interface, an STS-1 high order path 
      representing the end-to-end data flow. 
      There are 3 paths on an OC-3 interface
      The SonetPathlink class has the following measurement families:
      * SONET path
      * Far End SONET path */
			record length(3) of record {
				/* The path number for the SONET pathlink. */
				PathType_90 path,
				/* This attribute shows the administrative state of the SONET pathlink interface. */
				IntfIfAdminStatus ifAdminStatus optional,
				/* This attribute shows the operational state of the SONET pathlink interface. */
				IntfIfOperStatus ifOperStatus optional,
				/* This attribute presents the number of bits/second transported by a SONET pathlink. */
				IntfIfSpeed ifLinkRate optional,
				/* This attribute shows the time that the SONET pathlink interface entered its operational state. */
				IntfIfLastChanged ifLastChanged optional,
				/* This attribute is used to lock or unlock an SONET pathlink interface.
        NOTE: The attribute ifAdminStatus shows the same value as lockline is set to. */
				IntfLockLine lockLine optional,
				/* This attribute is an alias name for the interface as specified by a network manager. 
        It is used to identify interfaces by a text name, an option to assign a descriptive name to an interface. */
				IntfIfAlias userDefinedName optional,
				/* This attribute indicates whether linkUp or linkDown traps should be generated for the SONET pathlink interface.
        The default setting is 'disabled' */
				IntfLinkUpDownTrap linkUpDownTrapEnable optional,
				/* This attribute is for activation or deactivation of alarm when Alarm Indication Signal (AIS-P) is received. 
         The default setting is 'on'. */
				IntfAlarmActivation alarmActAisP optional,
				/* This attribute is for activation or deactivation of alarm when Remote Defect Indication (RDI-P) is received. 
        The default setting is 'on'. */
				IntfAlarmActivation alarmActRdiP optional,
				/* This attribute is for activation or deactivation of alarm when PayLoad Mismatch (PLM-P) has occurred. 
        The default setting is 'on'. */
				IntfAlarmActivation alarmActPlmP optional,
				/* This attribute is for activation or deactivation of alarm when Trace Identifier Mismatch (TIM-P) has occurred. 
        The default setting is 'on'. */
				IntfAlarmActivation alarmActTimP optional,
				/* This attribute is for setting the RDI-P insertion mode.
	 The default setting is 'auto'. */
				IntfPathRdiInsertion insActRdiP optional,
				/* This attribute is for setting the length of the trace identifier strings. 
	The default setting is 'char62'. */
				IntfTraceLength tiLength optional,
				/* This attribute defines a sent trace identifier, a text string identifying the near end node.
        This value must match the configured trace length (tiLength).
        The default setting is '' (empty string). */
				XSD.Token tiInserted optional,
				/* This attribute defines an expected trace identifier, a text string which is compared with the string received from the far end node. 
        An TIM-P alarm will be sent if there is a mismatch between this strings. 
        This value must match the configured trace length (tiLength).
	The default setting is '' (empty string). */
				XSD.Token tiExpected optional,
				/* An integer value N that defines the threshold value for excessive Bit Error Rate (BER) on the SONET path level. 
        The threshold value is 10 raised to -N (10^-N). An alarm will be issued when the threshold has been reached.
        The alarm will be cleared when the excessive BER falls below one tenth of the threshold value.
        The threshold value must not be less than the degBerThr threshold.
        The default attribute value is 3, corresponding to a threshold value of 10^-3.
        Note: all paths will be set to the same configuration. */
				IntfBerThreshold excBerThr optional,
				/* An integer value N that defines the threshold value for degraded Bit Error Rate (BER) on the SONET path level. 
        The threshold value is 10 raised to -N (10^-N). An alarm will be issued when the threshold has been reached.
        The alarm will be cleared when the degraded BER falls below one tenth of the threshold value.
        The threshold value must not be greater than the excBerThr threshold.
        The default attribute value is 6, corresponding to a threshold value of 10^-6. */
				IntfBerThreshold degBerThr optional,
				/* Shows SONET path Background Block Errors (BBE).
	Family=SONET path. */
				IntfCounter64 sdhPathStatsBBE optional,
				/* Shows SONET path Errored Seconds (ES).
	Family=SONET path. */
				IntfCounter64 sdhPathStatsES optional,
				/* Shows SONET path Severely Errored Seconds (SES).
	Family=SONET path. */
				IntfCounter64 sdhPathStatsSES optional,
				/* Shows SONET path UnAvailable Time (UAT).
	Family=SONET path. */
				IntfCounter64 sdhPathStatsUAT optional,
				/* Shows Far End SONET path Background Block Errors (BBE).
	Family=Far End SONET path. */
				IntfCounter64 sdhPathStatsFarEndBBE optional,
				/* Shows Far End SONET path Errored Seconds (ES).
	Family=Far End SONET path. */
				IntfCounter64 sdhPathStatsFarEndES optional,
				/* Shows Far End SONET path Severely Errored Seconds (SES).
	Family=Far End SONET path. */
				IntfCounter64 sdhPathStatsFarEndSES optional,
				/* Shows Far End SONET path UnAvailable Time (UAT).
	Family=Far End SONET path. */
				IntfCounter64 sdhPathStatsFarEndUAT optional,
				/* This class defines the SONET subLink interface, representing the 
      lower path with groups of Virtual Tributaries on SONET path and 
      the 1.5 Mbit/s DS1 interface. 
      There are 28 VT on a STS-1 path.
      The SonetSublink class has the following measurement families:
      * SONET low path
      * Far End SONET low path
      * DS1
      * Far End DS1 */
				record length(28) of record {
					/* The subport number for the SONET sublink. */
					SubportType_91 subport,
					/* This attribute shows the SONET sublink klm number. */
					IntfKlmNumber klmNumbering optional,
					/* This attribute shows the administrative state of the SONET sublink interface. */
					IntfIfAdminStatus ifAdminStatus optional,
					/* This attribute shows the operational state of the SONET sublink interface. */
					IntfIfOperStatus ifOperStatus optional,
					/* This attribute presents the number of bits/second transported by a SONET sublink. */
					IntfIfSpeed ifLinkRate optional,
					/* This attribute shows the time when the SONET sublink interface entered its operational state. */
					IntfIfLastChanged ifLastChanged optional,
					/* This attribute is used to lock or unlock the sublink.
        NOTE: The attribute ifAdminStatus shows the same value as lockline is set to. */
					IntfLockLine lockLine optional,
					/* This attribute is an alias name for the interface as specified by a network manager. 
        It is used to identify interfaces by a text name, an option to assign a descriptive name to an interface. */
					IntfIfAlias userDefinedName optional,
					/* This attribute indicates whether linkUp or linkDown traps should be generated for the SONET lowpath.
        The default setting is 'disabled'. */
					IntfLinkUpDownTrap lowpathLinkUpDownTrapEnable optional,
					/* This attribute is for activation or deactivation of alarm when Alarm Indication Signal (AIS-V) is received.
	 The default setting is 'on'. */
					IntfAlarmActivation alarmActAisV optional,
					/* This attribute is for activation or deactivation of alarm when Remote Defect Indication (RDI-V) is received.
	 The default setting is 'on'. */
					IntfAlarmActivation alarmActRdiV optional,
					/* This attribute is for activation or deactivation of alarm when Payload Mismatch (LP-PLM) has occurred.
	 The default setting is 'on'. */
					IntfAlarmActivation alarmActPlmV optional,
					/* This attribute is used to specify the insertion of a Remote Defect Indication - SONET Virtual Tributary (RDI-V) on the upstream interface.
        The default setting is 'autoPlm'. */
					IntfLowPathRdiInsertion insActRdiV optional,
					/* This attribute is used for setting the framing type
        Note: The sublink has to be locked before configuring.
        The default setting is 'esf'. */
					IntfDs1LineType lineType optional,
					/* This attribute defines loopback configuration.
        Note: Loopback is only used for test purpose and the sublink has to be locked before changing this attribute.
        The default setting is 'off'. */
					IntfLoopback loopback optional,
					/* This attribute indicates whether linkUp or linkDown traps should be generated for the SONET lowpath.
       The default setting is 'disabled'. */
					IntfLinkUpDownTrap ds1LinkUpDownTrapEnable optional,
					/* This attribute indicates whether a DS1 related alarm should be generated.
        The default setting is 'on'. */
					IntfDs1AlarmActivation stateChangeTrap optional,
					/* Shows SONET low path Background Block Errors (BBE).
	Family=SONET low path. */
					IntfCounter64 sdhLowPathStatsBBE optional,
					/* Shows SONET low path Errored Seconds (ES).
	Family=SONET low path. */
					IntfCounter64 sdhLowPathStatsES optional,
					/* Shows SONET low path Severely Errored Seconds (SES).
	Family=SONET low path. */
					IntfCounter64 sdhLowPathStatsSES optional,
					/* Shows SONET low path UnAvailable Time (UAT).
	Family=SONET low path. */
					IntfCounter64 sdhLowPathStatsUAT optional,
					/* Shows Far End SONET low path Background Block Errors (BBE).
	Family=Far End SONET low path. */
					IntfCounter64 sdhLowPathStatsFarEndBBE optional,
					/* Shows Far End SONET low path Errored Seconds (ES).
	Family=Far End SONET low path. */
					IntfCounter64 sdhLowPathStatsFarEndES optional,
					/* Shows Far End SONET low path Severely Errored Seconds (SES).
	Family=Far End SONET low path. */
					IntfCounter64 sdhLowPathStatsFarEndSES optional,
					/* Shows Far End SONET low path UnAvailable Time (UAT).
	Family=Far End SONET low path. */
					IntfCounter64 sdhLowPathStatsFarEndUAT optional,
					/* Shows DS1 Near End Errored Seconds (ES).
	Family=DS1. */
					IntfCounter64 ds1StatsES optional,
					/* Shows DS1 Near End Severely Errored Seconds (SES).
	Family=DS1. */
					IntfCounter64 ds1StatsSES optional,
					/* Shows DS1 Near End Severely Errored Framing Seconds (SEFS).
	Family=DS1. */
					IntfCounter64 ds1StatsSEFS optional,
					/* Shows DS1 Near End Unavailable Seconds (UAS).
	Family=DS1. */
					IntfCounter64 ds1StatsUAS optional,
					/* Shows DS1 Near End Controlled Slip Seconds (CSS).
	Family=DS1. */
					IntfCounter64 ds1StatsCSS optional,
					/* Shows DS1 Near End Bursty Errored Seconds (BES).
	Family=DS1. */
					IntfCounter64 ds1StatsBES optional,
					/* Shows DS1 Near End Path Coding Violations (PCV).
	Family=DS1. */
					IntfCounter64 ds1StatsPCV optional,
					/* Shows Far End DS1 Errored Seconds (ES).
	Family=Far End DS1. */
					IntfCounter64 ds1StatsFarEndES optional,
					/* Shows Far End DS1 Severely Errored Seconds (SES).
	Family=Far End DS1. */
					IntfCounter64 ds1StatsFarEndSES optional,
					/* Shows Far End DS1 Severely Errored Framing Seconds (SEFS).
	Family=Far End DS1. */
					IntfCounter64 ds1StatsFarEndSEFS optional,
					/* Shows Far End Ds1 Unavailable Seconds (UAS).
	Family=Far End DS1. */
					IntfCounter64 ds1StatsFarEndUAS optional,
					/* Shows Far End DS1 Controlled Slip Seconds (CSS).
	Family=Far End DS1. */
					IntfCounter64 ds1StatsFarEndCSS optional,
					/* Shows Far End DS1 Bursty Errored Seconds (BES).
	Family=Far End DS1. */
					IntfCounter64 ds1StatsFarEndBES optional,
					/* Shows Far End DS1 Path Coding Violations (PCV).
	Family=Far End DS1. */
					IntfCounter64 ds1StatsFarEndPCV optional
				} sonetSubLink_list
			} sonetPathLink_list
		} sonetInterface,
		/* This class defines the 1.5 Mbit/s T1 interface for the MSP-16E1T1 blade. 
      Note: To be able to configure line type and loopback type, 
      the interface has to be locked.
      The T1Interface class has the following measurement families:
      * Near end T1
      * Far end T1 */
		record length(0 .. 16) of record {
			/* A physical interface on the front of the blade. There are 16 physical T1 interfaces (ports). */
			PortType_93 port_,
			/* This attribute shows the administrative state of a T1 interface. */
			IntfIfAdminStatus ifAdminStatus optional,
			/* This attribute shows the operational state of a T1 interface. */
			IntfIfOperStatus ifOperStatus optional,
			/* This attribute presents the number of bits/second transported by a T1 interface. */
			IntfIfSpeed ifLinkRate optional,
			/* This attribute shows the time when a T1 interface entered its operational state. */
			IntfIfLastChanged ifLastChanged optional,
			/* This attribute shows the loopback state for a T1 interface. */
			IntfLoopbackStatus t1LoopbackStatus optional,
			/* This attribute shows the line state for a T1 interface. */
			IntfLineStatus t1LineStatus optional,
			/* This attribute is used to lock or unlock a T1 interface.
        NOTE: The attribute ifAdminStatus shows the same value as lockline is set to. */
			IntfLockLine lockLine optional,
			/* This attribute is an alias name for the T1 interface as specified by a network manager. 
        It is used to identify interfaces by a text name, an option to assign a descriptive name to an interface. */
			IntfIfAlias userDefinedName optional,
			/* This attribute indicates whether linkUp or linkDown traps should be generated for 
        the T1 intferface.
        The default setting is 'disabled'. */
			IntfLinkUpDownTrap t1LinkUpDownTrapEnable optional,
			/* This attribute defines loopback configuration.
        Note: Loopback is only used for test purpose and the link has 
        to be locked before changing this attribute. 
        The default setting is 'off'. */
			IntfLoopback loopback optional,
			/* This attribute is for configuring the framing type for the T1 interface. 
        Note: The T1 interface has to be locked before setting linetype.
        The default setting is 'esf'. */
			IntfDs1LineType lineType optional,
			/* This attribute is for activation or deactivation of alarm 
         when Alarm Indication Signal (AIS) is received. 
         The default setting is 'on'. */
			IntfAlarmActivation alarmActT1Ais optional,
			/* This attribute is for activation or deactivation of alarm 
         when Remote Alarm Indication (RAI) is received. 
         The default setting is 'on'. */
			IntfAlarmActivation alarmActT1Rai optional,
			/* This attribute is used to configure the clock source. The chosen source 
        will be used as transmit clock source for the T1 interface.
        The default setting is 'netsync'. */
			IntfTxClockSource txClockSrc optional,
			/* This attribute is used for configuration of the line length. The adjusting 
        of the transmitted signal strength to adjust for damping due to the 
        properties of the actual cable (for example, distance to the next receiving equipment).
        The default setting is 0.6 dB (0-40 m/0-133 feet). */
			IntfT1CableLoss lineLength optional,
			/* Shows T1 Near End Errored Seconds (ES).
	Family=Near end T1. */
			IntfCounter64 t1StatsES optional,
			/* Shows T1 Near End Severely Errored Seconds (SES).
	Family=Near end T1. */
			IntfCounter64 t1StatsSES optional,
			/* Shows T1 Near End Severely Errored Framing Seconds (SEFS).
	Family=Near end T1. */
			IntfCounter64 t1StatsSEFS optional,
			/* Shows T1 Near End Unavailable Seconds (UAS).
	Family=Near end T1. */
			IntfCounter64 t1StatsUAS optional,
			/* Shows T1 Near End Controlled Slip Seconds (CSS).
	Family=Near end T1. */
			IntfCounter64 t1StatsCSS optional,
			/* Shows T1 Near End Bursty Errored Seconds (BES).
	Family=Near end T1. */
			IntfCounter64 t1StatsBES optional,
			/* Shows T1 Near End Coding Violations (CV).
	Family=Near end T1. */
			IntfCounter64 t1StatsCV optional,
			/* Shows Far End T1 Errored Seconds (ES).
	Family=Far end T1. */
			IntfCounter64 t1StatsFarEndES optional,
			/* Shows Far End T1 Severely Errored Seconds (SES).
	Family=Far end T1. */
			IntfCounter64 t1StatsFarEndSES optional,
			/* Shows Far End T1 Severely Errored Framing Seconds (SEFS).
	Family=Far end T1. */
			IntfCounter64 t1StatsFarEndSEFS optional,
			/* Shows Far End T1 Unavailable Seconds (UAS).
	Family=Far end T1. */
			IntfCounter64 t1StatsFarEndUAS optional,
			/* Shows Far End T1 Controlled Slip Seconds (CSS).
	Family=Far end T1. */
			IntfCounter64 t1StatsFarEndCSS optional,
			/* Shows Far End T1 Bursty Errored Seconds (BES).
	Family=Far end T1. */
			IntfCounter64 t1StatsFarEndBES optional,
			/* Shows Far End T1 Coding Violations (CV).
	Family=Far end T1. */
			IntfCounter64 t1StatsFarEndCV optional
		} t1Interface_list
	} blade_list,
	/* System common parameters and blade pairs. */
	record {
		/* SCTP global parameters */
		record {
			/* The initial value that Retransmission Time-out will take.
        Measured in milliseconds. */
			RtoInitialType_63 rtoInitial optional,
			/* The minimum value that Retransmission Time-out will take.
        Measured in milliseconds. */
			RtoMinType_64 rtoMin optional,
			/* The maximum value that Retransmission Time-out will take.
        Measured in milliseconds. */
			RtoMaxType_65 rtoMax optional,
			/* Alpha shift factor. Used to compute the Smoothed Round Trip
        Time (SRTT) for a particular destination address. */
			RtoAlphaType_66 rtoAlpha optional,
			/* Beta shift factor. Used to compute the Round Trip
         Time Variation(RTTV) for a particular destination address. */
			RtoBetaType_67 rtoBeta optional,
			/* The maximum number of consecutive retransmissions to a remote peer. */
			AssociationMaxRetransType_68 associationMaxRetrans optional,
			/* The maximum number of retransmissions allowed for both INIT and
        COOKIE-ECHO chunks. */
			MaxInitRetransType_69 maxInitRetrans optional,
			/* The maximum number of retransmissions during the shutdown
        of an association. */
			MaxShutdownRetransType_70 maxShutdownRetrans optional,
			/* The maximum number of bytes a user is allowed to pass as
        non-fragmented user data in an SCTP_SEND_req messages. */
			MtuType_71 mtu optional,
			/* Valid cookie life in the 4-way start-up handshake procedure.
        Shall be higher than the RTT in the network, but as small as
        possible due to security reasons. This parameter sets up the
        life span of the state cookie sent in the INIT_ACK chunk.
        Measured in milliseconds. */
			ValCookieLifeType_72 valCookieLife optional
		} sctpParameters,
		/* The ARP parameters. */
		record {
			/* The number of consecutive ARP requests sent without receiving an ARP 
       reply before the next hop peer is considered to be down and a 
       nexthopAlarm is issued. It is also used as the number of consecutive 
       received ARP replies after which the next hop peer will be considered 
       to be up and the nexthopAlarm is cleared.
       Note: The alarm is issued only when the first next hop peer is 
       considered to be down. The alarm is cleared only when the last 
       next hop peer is considered to be up. */
			EventFilterType_73 eventFilter optional,
			/* The time between sending ARP requests when the next hop peer is up. 
        The value indicates the number of 100 ms intervals between the requests. */
			FastSupIntervalType_74 fastSupInterval optional,
			/* The time between sending ARP requests when the next hop peer is down. 
       TThe value indicates the number of 100 ms intervals between the requests. */
			DownSupIntervalType_75 downSupInterval optional,
			/* The time between sending ARP requests when a new IP interface has been
        configured. It is also used as the time between sending ARP requests 
        to detect when the address collision state has ceased and the
        addressCollisionAlarm is cleared. */
			AddrCollSupIntervalType_76 addrCollSupInterval optional,
			/* The number of consecutive ARP requests sent without receiving an ARP 
        reply before an address collision is ruled out at the activation of 
        an IP interface. It is also used as the number of consecutive sent 
        ARP Requests without receiving an ARP reply before the address 
        collision state is considered to no longer exist and the 
        addressCollisionAlarm is cleared. */
			AddrCollEventFilterlType_77 addrCollEventFilterl optional
		} arpParameters,
		/* A pair of blades for 1+1 CP redundancy. */
		record of record {
			/* The identity of the blade pair. E.g. "0-8,0-9" */
			XSD.Token id,
			/* A sequence of references to Blade object instances. */
			BladesType_96 blades optional
		} bladePair_list,
		/* The physical tone.
      A physical tone is a cadence that is repeated a number of times. A cadence consists
      of up to five cadence components each specified with frequency, level, modulation, 
      iteration, pulse and pause duration. At startup the system creates 16 default tones, 
      which can be modified and deleted in the same way as the tones you have configured yourself.
      The maximum number of physical tones are 256, including the default tones. */
		record length(0 .. 255) of record {
			/* A unique name string for the tone. */
			NameType_22 name,
			/* Whether the tone replaces or is mixed with the voice. */
			DspcpToneMode mode,
			/* The modulation type of the first component. */
			DspcpToneModulation modulationComp1,
			/* The number of times the first component will be repeated. */
			IterateComp1Type_23 iterateComp1,
			/* The duration (in milliseconds) of the pulse of the first component. */
			PulseComp1Type_24 pulseComp1,
			/* The duration (in milliseconds) of the pause of the first component. */
			PauseComp1Type_25 pauseComp1,
			/* The modulation ratio (%) of frequencyA and frequencyB of the first component. This parameter is NOT used if the modulationComp1 is set to addition. */
			ModulationRatioABComp1Type_26 modulationRatioABComp1 optional,
			/* The value of frequencyA (Hz) in the first component. */
			FrequencyAComp1Type_27 frequencyAComp1,
			/* The value of the attenuation level (dBm0) for frequencyA in the first component. */
			LevelAComp1Type_28 levelAComp1,
			/* The value of frequencyB (Hz) in the first component. */
			FrequencyBComp1Type_29 frequencyBComp1 optional,
			/* The value of the attenuation level (dBm0) for frequencyB in the first component. */
			LevelBComp1Type_30 levelBComp1 optional,
			/* The modulation type of the second component. */
			DspcpToneModulation modulationComp2 optional,
			/* The number of times the second component will be repeated. */
			IterateComp2Type_31 iterateComp2 optional,
			/* The duration (in milliseconds) of the pulse of the second component. */
			PulseComp2Type_32 pulseComp2 optional,
			/* The duration (in milliseconds) of the pause of the second component. */
			PauseComp2Type_33 pauseComp2 optional,
			/* The modulation ratio (%) of frequencyA and frequencyB of the second component. This parameter is NOT used if the modulationComp2 is set to addition. */
			ModulationRatioABComp2Type_34 modulationRatioABComp2 optional,
			/* The value of frequencyA (Hz) in the second component. */
			FrequencyAComp2Type_35 frequencyAComp2 optional,
			/* The value of the attenuation level (dBm0) for frequencyA in the second component. */
			LevelAComp2Type_36 levelAComp2 optional,
			/* The value of frequencyB (Hz) in the second component. */
			FrequencyBComp2Type_37 frequencyBComp2 optional,
			/* The value of the attenuation level (dBm0) for frequencyB in the second component. */
			LevelBComp2Type_38 levelBComp2 optional,
			/* The modulation type of the third component. */
			DspcpToneModulation modulationComp3 optional,
			/* The number of times the third component shall be repeated. */
			IterateComp3Type_39 iterateComp3 optional,
			/* The duration (in miliseconds) of the pulse of the third component. */
			PulseComp3Type_40 pulseComp3 optional,
			/* The duration (in miliseconds) of the pause of the third component. */
			PauseComp3Type_41 pauseComp3 optional,
			/* The modulation ratio (%) of frequencyA and frequencyB of the third component. This parameter is NOT used if the modulationComp3 is set to addition. */
			ModulationRatioABComp3Type_42 modulationRatioABComp3 optional,
			/* The value of frequencyA (Hz) in the third component. */
			FrequencyAComp3Type_43 frequencyAComp3 optional,
			/* The value of the attenuation level (dBm0) for frequencyA in the third component. */
			LevelAComp3Type_44 levelAComp3 optional,
			/* The value of frequencyB (Hz) in the third component. */
			FrequencyBComp3Type_45 frequencyBComp3 optional,
			/* The value of the attenuation level (dBm0) for frequencyB in the third component. */
			LevelBComp3Type_46 levelBComp3 optional,
			/* The modulation type of the fourth component. */
			DspcpToneModulation modulationComp4 optional,
			/* The number of times the fourth component shall be repeated. */
			IterateComp4Type_47 iterateComp4 optional,
			/* The duration (in milliseconds) of the pulse of the fourth component. */
			PulseComp4Type_48 pulseComp4 optional,
			/* The duration (in milliseconds) of the pause of the fourth component. */
			PauseComp4Type_49 pauseComp4 optional,
			/* The modulation ratio (%) of frequencyA and frequencyB of the fourth component. This parameter is NOT used if the modulationComp4 is set to addition. */
			ModulationRatioABComp4Type_50 modulationRatioABComp4 optional,
			/* The value of frequencyA (Hz) in the fourth component. */
			FrequencyAComp4Type_51 frequencyAComp4 optional,
			/* The value of the attenuation level (dBm0) for frequencyA in the fourth component. */
			LevelAComp4Type_52 levelAComp4 optional,
			/* The value of frequencyB (Hz) in the fourth component. */
			FrequencyBComp4Type_53 frequencyBComp4 optional,
			/* The value of the attenuation level (dBm0) for frequencyB in the fourth component. */
			LevelBComp4Type_54 levelBComp4 optional,
			/* The modulation type of the fifth component. */
			DspcpToneModulation modulationComp5 optional,
			/* The number of times the fifth component shall be repeated. */
			IterateComp5Type_55 iterateComp5 optional,
			/* The duration (in milliseconds) of the pulse of the fifth component. */
			PulseComp5Type_56 pulseComp5 optional,
			/* The duration (in milliseconds) of the pause of the fifth component. */
			PauseComp5Type_57 pauseComp5 optional,
			/* The modulation ratio (%) of frequencyA and frequencyB of the fifth component. This parameter is NOT used if the modulationComp5 is set to addition. */
			ModulationRatioABComp5Type_58 modulationRatioABComp5 optional,
			/* The value of frequencyA (Hz) in the fifth component. */
			FrequencyAComp5Type_59 frequencyAComp5 optional,
			/* The value of the attenuation level (dBm0) for frequencyA in the fifth component. */
			LevelAComp5Type_60 levelAComp5 optional,
			/* The value of frequencyB (Hz) in the fifth component. */
			FrequencyBComp5Type_61 frequencyBComp5 optional,
			/* The value of the attenuation level (dBm0) for frequencyB in the fifth component. */
			LevelBComp5Type_62 levelBComp5 optional
		} physicalTone_list,
		/* The traffic supervision parameters. */
		record {
			/* The threshold for the number of received malicious packets during a 
      20-second period. When this value is reached or exceeded, a 
      maliciousTrafficAlarm is issued.

      Note: Setting this attribute to 0 disables the supervision of
            received malicious packets.
      
      The malicious packets will be discarded and logged irrespectively of 
      the threshold value. */
			TrafficSupervisionMaliciousPacketsThrType_78 trafficSupervisionMaliciousPacketsThr optional,
			/* The hysteresis for malicious packets threshold. The
       maliciousTrafficAlarm is cleared when the number of 
       received packets during a 20-second period is less than (Malicious 
       packets threshold minus Malicious threshold hysteresis). */
			TrafficSupervisionMaliciousPacketsHysType_79 trafficSupervisionMaliciousPacketsHys optional,
			/* The threshold for excessive traffic, that is, packets discarded due to 
       policing, specified as the average bandwidth, in kbit/s, during a 
       20-second period. When this value is reached or exceeded, an 
       excessiveTrafficAlarm is issued.
       
       Note: Setting this attribute to 0 disables the supervision of received excessive 
             packet.

       The excessive traffic will be discarded and logged irrespectively of 
       the threshold value. */
			TrafficSupervisionExcessiveBandwidthThrType_80 trafficSupervisionExcessiveBandwidthThr optional,
			/* The hysteresis for excessive traffic threshold in kbit/s during a 
        20-second period. The excessiveTrafficAlarm is cleared when the 
        average packets bandwidth falls below (Excessive traffic threshold 
        minus Excessive traffic hysteresis). */
			TrafficSupervisionExcessiveBandwidthHysType_81 trafficSupervisionExcessiveBandwidthHys optional,
			/* Media stop means that no media (RTP or RTCP) has been received in any 
       stream on a termination for the configured period of time. 
       When media stop is detected the MGW notifies the GC of the inactive 
       media streams via H.248.
       * Off: no media supervision
       * 1 m, 2 m, 5 m, 10 m, 30 m, 1 h, 6 h, 12 h, 24 h: no packets have
         been received in 1 minute, 2 minutes, -, 24 hours. 

       Note: The media stop supervision time specifies the interval 
             between two consecutive checks of an inactive media 
             stream in the MGW. That is, when the timer expires, the 
             MGW checks all its media streams to see whether any 
             streams are inactive. An individual stream that has been 
             inactive during the period between two consecutive media 
             stop checks will be reported as an inactive media stream 
             to the GC. This means that the actual time period during 
             which the stream has been inactive when the GC is 
             notified may be up to twice as long as the time specified by 
             the Media stop supervision time. */
			TrafficSupervisionMediaStopSupervisionType_82 trafficSupervisionMediaStopSupervision optional,
			/* Activates or deactivates the logging of malicious traffic.
     * On: Logging
     * Off: No logging. */
			TrafficSupervisionMaliciousTrafficLogType_83 trafficSupervisionMaliciousTrafficLog optional,
			/* This attribute is used to activate or deactivate the logging of 
     excessive traffic.
     * On: Logging
     * Off: No logging. */
			TrafficSupervisionExcessiveTrafficLogType_84 trafficSupervisionExcessiveTrafficLog optional
		} trafficSupervision
	} system_,
	/* Represents the IP Network that the MGW is interfacing. */
	record {
		/* Static route for the H.248 signaling traffic towards a controller. */
		record of record {
			/* The subnet address of the remote network. */
			InetAddressIPv4 subnetAddress,
			/* The mask length of the subnet. */
			MaskLengthType_183 maskLength,
			/* The bladesystems subnet segment indicated by 
        which edge router used as next hop. */
			SubnetSegmentType_184 subnetSegment
		} h248Route_list,
		/* The Virtual Router.
                   The virtual router contains all the IP interfaces, next hops,
                   and routes that have been defined for media transport. */
		record {
			/* The IP interface.
	                The IP interface is an entity terminating the IP layer.
		        The IP interface has an associated IP address.
			In order to delete a IP interface the administrative state
			has to be locked. */
			record of record {
				/* The IP address of the IP interface. */
				InetAddressIPv4 address_,
				/* The Ethernet interface for this IP interface. */
				ObjectRef ethernet,
				/* The VLAN identity that the IP interface
				is related to. */
				NibsVlan vlanid optional,
				/* The subnet mask length. */
				NibsIpMaskLength subnetMask,
				/* The subnet segment mask length. */
				NibsIpMaskLength segmentMask,
				/* Deprecated attribute.
				Kept for backwards compatibility. */
				XSD.Boolean payloadHost optional,
				/* Deprecated attribute.
				Kept for backwards compatibility. */
				XSD.Boolean arp optional,
				/* The current administrative state.
				Also used to set administrative state. */
				NibsAdministrativeState administrativeState optional,
				/* The state of the IP interface.
				Indicates if the IP interface is possible to use for traffic
                                (enabled) or not possible to use for traffic (disabled).
                                A change of the administrative state does not change
                                the operational state. The operational state can be Enabled while
                                the administrative state is Locked. */
				NibsOperationalState operationalState optional,
				/* The lowest allowed UDP port for media
				To be used for dynamic connections
				and SPCs on IP interfaces.
				Exception: Leased line terminations use the range
				1024 - 4095.
				* The low UDP port number must be lower than the high UDP port number.
				* There must be at least 4 ports available in the port range.
				* The low UDP port number must be an even number. */
				NibsIpPort lowUDP optional,
				/* The highest allowed UDP port for media
				To be used for dynamic connections
				and SPCs on IP interfaces.
				Exception: Leased line terminations use the range
				1024 - 4095.
				* The high UDP port number must be higher than the low UDP port number.
				* There must be at least 4 ports available in the port range.
				* The high UDP port number must be an odd number. */
				NibsIpPort highUDP optional,
				/* The identity of the address group. 
                 		The value zero means that the IP interface
                 		is not included in an address group. */
				AddressGroupType_94 addressGroup optional,
				/* The address must be in the correct address group
				to be selected. 
                 		The value true means that the IP interface
                 		is only selected if it is in an address group. */
				XSD.Boolean addressGroupOnly optional,
				/* The number of received accepted packets.
				Family=Media Statistics. */
				NibsCounter64 ipStatsIpIfRxPackets optional,
				/* The number of octets in received accepted packets.
				The number of octets does not include
				the Ethernet overhead.
				Family=Media Statistics. */
				NibsCounter64 ipStatsIpIfRxOctets optional,
				/* The number of packets to be sent.
				Some of these packets might be discarded
				due to traffic management.
				Family=Media Statistics. */
				NibsCounter64 ipStatsIpIfTxPackets optional,
				/* The number of octets in packets to be sent.
				Some of these packets might later
				be discarded due to traffic management.
				Family=Media Statistics. */
				NibsCounter64 ipStatsIpIfTxOctets optional,
				/* The number of received malicious packets that were discarded. 
	The following types of IP packets are considered malicious
	and are counted per IP Interface:
	* packets sent on an unconfigured media stream (IP address and port)
	* packets that have a source address and/or port different from
	the address that has been configured for the media stream,
	if Media source filtering is active
	* packets with a transport protocol other than UDP
	Family=Media Statistics. */
				NibsCounter64 ipStatsIpIfRxMaliciousPackets optional,
				/* The number of received packets that
				have been discarded due to bandwidth policing.
				Family=Media Statistics. */
				NibsCounter64 ipStatsIpIfRxExcessivePackets optional,
				/* The number of octets in received packets
	that have been discarded due to bandwidth policing.
	Family=Media Statistics. */
				NibsCounter64 ipStatsIpIfRxExcessiveOctets optional,
				/* The number of received packets that were discarded for other reasons:
	 * Packets received when stream mode is inactive or send only.
	 * Packets that could not be transmitted due to stream mode set
	 to inactive or receive only.
         * RTCP packets received when configured to be discarded.
         * Packets that were seen as late media.
	 Family=Media Statistics. */
				NibsCounter64 ipStatsIpIfRxDiscardedPackets optional,
				/* The number of outgoing packets that were
				discarded due to no next hop MAC address.
				Family=Media Statistics. */
				NibsCounter64 ipStatsIpIfDiscardedNoNexthop optional
			} ipInterface_list,
			/* The next hop for a route.
                        A next hop is a node via which IP traffic is routed.
                        It is needed when a IP source address and an IP destination
                        address are not on the same subnet.
			In order to delete a next hop the administrative state
			has to be locked. */
			record of record {
				/* The IP address of the next hop. */
				InetAddressIPv4 address_,
				/* The current administrative state.
			Also used to set administrative state. */
				NibsAdministrativeState administrativeState optional
			} nextHop_list,
			/* The route table contains entries with subnets that we are interested in
sending packets to. If the subnet is beyond a router, there should be at
least one next hop is associated to the route.
When an IP interface is created, an interface route is created
implicitly, based on the IP address and subnet mask. There is no next hop
associated to an interface route. If the IP interface is deleted the
associated interface route is also deleted. */
			record of record {
				/* The address prefix of the remote subnet address. */
				InetAddressIPv4 prefix,
				/* The number of relevant bits
				in the address prefix. */
				NibsIpMaskLength mask,
				/* The static routes are created manually.
				The interface routes are created automatically
				 when the IP interface is created. */
				NibsRouteType type_ optional,
				/* The Next Hop(s) for this Route. */
				NexthopType_95 nexthop
			} route_list
		} virtualRouter
	} network,
	/* Media Gateway Application for voice and video connection control. */
	record {
		/* Offset in the subnet segnent, from where MGW will
	start to allocate local addresses. */
		AddressOffsetType_100 addressOffset optional,
		/* Payload Profile */
		record length(12) of record {
			/* Payload Type */
			PayloadTypeType_101 payloadType,
			/* Packetization Time */
			PacketizationTimeType_102 packetizationTime
		} payloadProfile_list,
		/* Payload Mapping */
		record length(1 .. infinity) of record {
			/* Encoding name */
			EncodingNameType_103 encodingName,
			/* Payload Type */
			ObjectRef payloadType
		} payloadMapping_list,
		/* A physical device on the signaling interface.

      Either signalingInterface, e1Interface or t1Interface must be set.

      Attribute admState must be set to 'locked' before a signaling device can 
      be deleted. */
		record of record {
			/* The name of the device. */
			IdType_180 id,
			/* Administrative state. */
			GwmDevAdmState admState optional,
			/* Reference to an instance of the class E1 interface. */
			ObjectRef e1Interface optional,
			/* Reference to an instance of the class Signaling interface. */
			ObjectRef signalingInterface optional,
			/* Reference to an instance of the class T1 interface. */
			ObjectRef t1Interface optional,
			/* A TDM channel provisioned on the signaling device. */
			record length(24 .. 31) of record {
				/* The time slot for the signaling channel */
				ChannelIdType_181 channelId
			} signalingChannel_list
		} signalingDevice_list,
		/* A collection of tone types to be configured for the MGW application. 
      A default tone profile is created by the system. */
		record length(1 .. infinity) of record {
			/* The name of the tone profile. */
			GwmAlphaNumericString_l35 name,
			/* Objects for translating H.248 tone names to physical tones. */
			record of record {
				/* The name of the tone. This attribute can be specified several times, 
	once for for each different toneid. */
				H248IdType_104 h248Id,
				/* Default tone timeout in 10 ms interval (1 = 10 ms, 2 = 20 ms ...). 
	The value 0 will cause the tone will be played until the GC gives 
	order to stop the tone. */
				DefaultTimeoutType_105 defaultTimeout optional,
				/* Reference to an instance of the class Physical Tone. */
				ObjectRef tone
			} h248Tone_list
		} toneProfile_list,
		/* A Virtual Signaling Gateway (SGW) Application Server (AS) 
      is responsible for termination and translating the signaling
      protocols on TDM signaling interfaces to IUA/DUA signaling
      transport over the IP network to a gateway controller. */
		record of record {
			/* A string that identifies the signaling gateway. This string is also
	used to identify the application server. */
			GwmAlphaNumericFsUs_beginAlpha_l64 sgName,
			/* Indicates in which blade pair of the system the application server
	is going to reside. */
			ObjectRef bladePair,
			/* The operational state of the application server.

	down:
          The Application Server is unavailable. This state implies 
	  that all related ASPs are in the ASP-DOWN state for this AS. 
	  Initially, the AS will be in this state.

	active: 
          The Application Server is available and application traffic
   	  is active. This state implies that at least one ASP is in the up 
	  state.

	inactive: 
          The Application Server is available but no application
	  traffic is active (that is, one or more related ASPs are in the 
	  noAssociation or inactive state, but none in the up state). 
          The recovery timer T(r) is not running or has expired.

	pending: 
          An active ASP has transitioned from active to inactive
	  or down and it was the last remaining active ASP in the AS. 
	  A recovery timer T(r) will be started, and all incoming SCN messages
 	  will be queued by the SG. If an ASP becomes active before T(r) 
	  expires, the AS will change to the active state, and all the queued
	  messages will be sent to the active ASP. */
			OpStateType_185 opState optional,
			/* The time in seconds during which the AS buffers switched circuit
	network (SCN) messages waits for an ASP to become active.
	If an ASP becomes active before the timer expires, the buffered
	messages are sent. If the timer expires the messages are discarded.
	-1 means indefinitely.
	The value 0 means that messages are discarded immediately. */
			TrTimerType_186 trTimer optional,
			/* An Application Server Process (ASP) is responsible for the SCTP 
      transport of IUA/DUA signaling over the IP network to a gateway
      controller. A maximum of 2 ASPs with an SCTP association can be
      configured and one is active at a time. */
			record length(0 .. 2) of record {
				/* A unique name identifying the application server process (ASP). */
				GwmAlphaNumericFsUs_beginAlpha_l64 aspName,
				/* The administrative state of the application server process.

	unlocked: 
          The ASP is unlocked. Unlocking an ASP makes the Operational state 
          change to up, inactive or noAssociation depending on whether there is 
          application traffic active or not.

	locked: 
          The ASP is locked. Locking an ASP makes the Operational state change 
          to down and, consequently, the ASP can no longer be used. */
				GwmLinkAdmState admState optional,
				/* The number of received chunks that have been dropped due to buffer 
	overflow in the receiving buffer.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 congestionRcvdDropped optional,
				/* Number of times a communication resume indication has been 
	sent to the user.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 congestionResume optional,
				/* Number of sent chunks that have been dropped due to buffer 
	overflow in the sending buffer.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 congestionSentDropped optional,
				/* Number of times a communication stop indication has been 
	sent to the user.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 congestionStop optional,
				/* A string that identifies the Gateway Controller to which the
	ASP will connect. The name is optional and may be left empty. */
				GwmAlphaNumericFsUs_beginAlpha_l64 gatewayControllerName optional,
				/* The first IP address of the remote Gateway Controller. */
				InetAddressIPv4 gcAddr1,
				/* The second IP address of the remote Gateway Controller, optionally
	used for SCTP multihoming. */
				InetAddressIPv4 gcAddr2 optional,
				/* The interval in seconds used by SCTP to monitor that the communication
	with the Gateway Controller is alive.
	The recommended value is 60. */
				HbTimerType_187 hbTimer optional,
				/* The number of SCTP streams. Negotiated with the remote end.
	The value is not to be trusted when the SCTP association is down. */
				InStreamsType_188 inStreams optional,
				/* Local SCTP IP address 1. 
	Must be set when used by MSAN. Else automatically assigned from the 
	H.248 IS subnet segment. */
				InetAddressIPv4 localAddr1 optional,
				/* Local SCTP IP address 2. 
	Must be set when used by MSAN. Else automatically assigned from the 
	H.248 IS subnet segment. */
				InetAddressIPv4 localAddr2 optional,
				/* Local SCTP port. The signaling gateway listens for incoming
	messages on this port number. Must be a unique port number. 
	The port must not be the same as for any of the H.248 control
	links terminating on the associated blade pair. */
				LocalPortType_189 localPort optional,
				/* The operational state of the application server process.

	down: 
          Application Server Process is down, yet the SCTP association is 
          available.

	up:
	  The Application Server Process is up, consequently the SCTP
	  association is available.

	noAssociation: 
          The ASP is available but the SCTP association is down, consequently 
	  the Application Server Process is down.

        inactive: 
	  The ASP is available but not yet activated. */
				OpStateType_190 opState optional,
				/* The number for streams to be negotiated for the SCTP association.
	The configured value may change after negotiation with the
	remote end. 
	The value is not to be trusted when the SCTP association is down.
	Recommended value is 20. */
				OutStreamsType_191 outStreams optional,
				/* The number of SCTP packets received with an invalid checksum.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter is restarted from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 rcvdChecksumErrors optional,
				/* The number of complete data chunks (user messages) received from
	the peers (retransmission included).
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 rcvdChunks optional,
				/* The number of datagrams received with chunk type id >0.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 rcvdCtrlChunks optional,
				/* The number of received SCTP packets.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 rcvdPackets optional,
				/* The number of reassembled user messages, incremented when the 
	first data chunk of a fragmented message is received.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 rcvdReassembled optional,
				/* The remote SCTP port. */
				RemotePortType_192 remotePort optional,
				/* The number of data chunks retransmitted to the peers.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 retransmittedChunks optional,
				/* Whether the application server process will act as a client or 
	a server. */
				SctpModeType_193 sctpMode optional,
				/* The number of complete data chunks (user messages) sent to the peers
	(retransmission included).
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 sentChunks optional,
				/* The number of datagrams sent with chunk type id >0.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 sentCtrlChunks optional,
				/* The number of fragmented user messages, incremented when the 
	first data chunk of a fragmented message is sent.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 sentFragmented optional,
				/* The number of sent SCTP packets.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 sentPackets optional
			} asp_list,
			/* A signaling interface that the virtual SGW is responsible for.
      It is terminating the ISDN,DPNSS or DASS2 signaling protocols 
      on timeslot 16 of an SDH E1 sublink.

      Either sdhSubLink or e1Interface must be set. */
			record of record {
				/* A unique identifier of the signaling interface. */
				InterfaceIdType_194 interfaceId,
				/* Not used in the current version. For future development.
	The number of active data links in the signaling interface.
	Only applicable to DPNSS and DASS2. */
				XSD.Integer activeLAPCnt optional,
				/* The administrative state of the signaling interface.

	unlocked: 
          The signaling interface is unlocked. The interface is in operation so 
	  data traffic can run on it.

	locked: 
	  The signaling interface is locked. When the interface is locked, no 
	  data traffic can pass it. */
				GwmLinkAdmState admState optional,
				/* A string that identifies the signaling interface.
	The first character must be a letter (a..z) followed by any of: 
	a..z 
	0..9
	/ (forward slash)
	_ (underscore).
	Uppercase letters may be entered but are converted to lower case 
	when the attribute is stored internally. The name is optional and
	may be */
				/* left empty. Used for ISM purpose only */
				InterfaceNameType_195 interfaceName optional,
				/* A hexadecimal indicating which timeslots are used as signaling 
	interfaces.
	For the DUA signaling protocol, you specify a Bitmap channel, 
	indicating for which Timeslot links will be created. You can only 
	specify one Bitmap channel. 
	For the DPNSS protocol there is one bitmap for the real channels and 
	another for the virtual channels. The bitmap for virtual channels is a 
	copy of the bitmap for real channels, so you can only specify one 
	bitmap. 
	For the DASS2 there is just one bitmap for the channels.

	The hexadecimal format is represented with an octet string. For each 
	octet the least significant bit corresponds to the lowest channel.
	octet #0 represents channels 0 to 7
	octet #1 represents channel 8 to 15
	octet #2 represents channel 16 to 23
	octet #3 represents channel 24 to 31

	For example, if channels 0 and 16 are not used, the octet string looks 
	like:
	FFFEFFFE. 

	This gives us the bits: 1111 1111 1111 1110 1111 1111 1111 1110
	The first bit being the most significant bit and the last being the 
	least significant bit.

	Octet #0 is represented as FF which equals the bits: 1111 1111. 
	Signaling interfaces will be created on all channels 24-31.

	Octet #1 is represented as FE which equals the bits: 1111 1110. 
	Signaling interfaces will be created on all channels except the channel
	that corresponds to the least significant bit, which is channel 16.

	Octet #2 is represented as FF which equals the bits: 1111 1111. 
	Signaling interfaces will be created on all channels 8-15.

	Octet #3 is represented as FE which equals the bits: 1111 1110. 
	Signaling interfaces will be created on all channels except the 
	channel that corresponds to the least significant bit, which is 
	channel 0.

	Only applicable to DPNSS and DASS2.
	The bitmap has the same format as an ip-address. */
				BitmapType_196 bitmap optional,
				/* The state of the data link.
	Only applicable to ISDN. */
				DataLinkStatusType_197 dataLinkStatus optional,
				/* Reference to the E1 Interface object */
				ObjectRef e1Interface optional,
				/* Reference to the T1 Interface object */
				ObjectRef t1Interface optional,
				/* Reference to the SDH sublink. */
				ObjectRef sdhSubLink optional,
				/* Reference to the SONET sublink. */
				ObjectRef sonetSubLink optional,
				/* Not used in the current version. For future development.
	The number of failed data links in the signaling interface.
	Only applicable to DPNSS and DASS2. */
				XSD.Integer failedLAPCnt optional,
				/* The maximum time, in seconds, with no frames being exchanged on the
	Q.921 level. The Q921 name for this timer is T203.
	The value range is 5-30 with recommended value 10 for ISDN 
	and 30-600 with recommended value 300 for DPNSS and DASS2. */
				IdlePollTimerType_198 idlePollTimer optional,
				/* Number of incoming layer 3 messages.	
	Family=Signaling statistics. */
				XSD.Integer l3MsgInc optional,
				/* Number of outgoing layer 3 messages.	
	Family=Signaling statistics. */
				XSD.Integer l3MsgOut optional,
				/* The line type, either of public or private.
	Only applicable to DASS2. Recommended value: public */
				LineTypeType_199 lineType optional,
				/* Not used in the current version. For future development.
	The number of locked data links in the signaling interface.
	Only applicable to DPNSS and DASS2. */
				XSD.Integer lockedLAPCnt optional,
				/* The maximum delay, in milliseconds, in which the SGW must acknowledge a 
	frame. It must be less than the retransmission timer.
	Recommended value 200.
	Only applicable to ISDN. 
    The value must be a multiple of 100. */
				MaxAckDelayType_200 maxAckDelay optional,
				/* The maximum number of frames that may be unacknowledged at any given time.
	Known as K for IUA.
	Recommended value 7.
	Only applicable to ISDN. */
				MaxOutstandingFramesType_201 maxOutstandingFrames optional,
				/* The maximum number of retransmissions of a frame.
	Known as N200 for IUA and NL for DUA.
	The value range is 1-10 with recommended value 3 for ISDN
	and 16-128 with recommended value 64 for DPNSS and DASS2.
    The value must be a multiple of 100. */
				MaxRetransmissionsType_202 maxRetransmissions optional,
				/* Shows the Gateway Controller link status.
	Only applicable to ISDN. */
				MgcLinkStatusType_203 mgcLinkStatus optional,
				/* The type of signaling interface: ISDN, DPNSS or DASS2 */
				ProtocolType_204 protocol,
				/* The side of the signaling interface.
	One side of the signaling interface has to be defined as A or network
	and the other as B or user.
	Valid values for ISDN are network and user with recommended value 
	network.
	Valid values for DPNSS and DASS2 are A and B with recommended value A. */
				ProtocolSideType_205 protocolSide,
				/* The time, in milliseconds, after which a non-acknowledged frame is 
	retransmitted. If the maximum number of retransmission attempts has 
	been exceeded, the reestablishment procedure is initiated.
	Known as T200 for IUA and NT1 for DUA.
	The value-range is 1000-10000 with recommended value 3000 for ISDN
	and 100-10000 with recommended value 500 for DPNSS and DASS2. */
				RetransmissionTimerType_206 retransmissionTimer optional,
				/* The maximum number of frames that can be buffered to be sent on the 
	signaling interface.
	Value range is 1-300 with recommended value 30 for ISDN 
	and 1-10 with recommended value 4 for DPNSS and DASS2. */
				SendQueueLengthType_207 sendQueueLength optional
			} sgwInterface_list
		} virtualSgw_list,
		/* Virtual Media Gateway (VMG), abstraction within a Media Gateway 
      representing the TDM resources (see Physical Device) as seen through one
      H.248 termination (see H.248 link). The attached control link can either
      be of type H248SctpLink or H248UdpLink. */
		record of record {
			/* The name of the virtual media gateway. This name is used as the 
	message identifier in all H.248 messages sent from a virtual media 
	gateway. */
			GwmAlphaNumericFsUs_beginAlpha_l35 name,
			/* The size of the adaptive jitter buffer (in milliseconds) 
	used by audio connections.

	Streaming 3G-324M connections use a static algorithm for audio.

	The adaptive jitter buffer size determines how much IP jitter can be 
	managed, a 200 ms jitter buffer can manage an IP jitter of 100 ms. 
	Indirectly the adaptive jitter buffer size also specifies the maximum 
	delay that is acceptable for audio.

	The adaptation mechanism always tries to minimize the actual delay 
	introduced by the buffer.

	The adaptive jitter buffer size must be at least be as big as the 
	longest payload packetization time (ptime) used in the network. 
	To this value should be added a margin of at least one frame time, 
	that is:

	10 ms for G.711
	20 ms for AMR
	30 ms for G.723. 

	For example: If G.711 with ptime 20 ms and G.723 with ptime 30 ms are 
	used in the network, the b */
			/* uffer size must at least have a size of 
	60 ms, since G.723 is the worst case (30 ms ptime + 30 ms frame time)

	A modification of this attribute does only affect new calls, not 
	established calls. */
			AdapJitBufSizeType_106 adapJitBufSize optional,
			/* The number of dynamic audio call establishment attempts.
	Family=MGW call counters. */
			GwmCounter32 audioCallsEstablAttempts optional,
			/* The number of failed dynamic audio call establishment attempts.
	Family=MGW call counters. */
			GwmCounter32 audioCallsFailedEstablAttempts optional,
			/* The number of congested audio call attempts.
	Family=MGW call counters. */
			GwmCounter32 audioCongestCallAttempts optional,
			/* Indicates whether the Detailed termination information package will be
	supported for all physical terminations in this virtual media gateway.
	The detailed termination information package provides additional 
	information in the standard H.248 protocol to the GC, for example, 
	device type, device state, and law conversion, etc. It is sent from 
	the virtual media gateway to the GC during audit. */
			DetailedTermInfoPackageType_107 detailedTermInfoPackage optional,
			/* Specifies the standard to follow for echo cancellation; possible 
	standards are G.164, G.165 or G.168. A modification of this attribute 
	only affects new calls, not established calls. */
			EchoDisablingModeType_108 echoDisablingMode optional,
			/* The maximum estimated audio jitter, in milliseconds, of the 
	IP network(s) interfaced by the Media Gateway. The value is used by 
	connection types using a static jitter buffer algorithm for audio. 
	Currently only streaming 3G-324M connections use a static algorithm 
	for audio.

	A modification of this attribute does only affect new calls, not 
	already calls. */
			EstAudioStatJitBufType_109 estAudioStatJitBuf optional,
			/* The maximum estimated data jitter, in milliseconds, of the IP 
	network(s) interfaced by the VMG. The value is used by connection 
	types using a static jitter buffer algorithm for data. */
			EstDataStatJitBufType_110 estDataStatJitBuf optional,
			/* A string to be used as a prefix for the IP ephemeral termination 
	identifier. The IP ephemeral termination is a termination that is 
	created by the system at the time of connection setup, as opposed to a
	physical termination that is configured by the operator. The ephemeral
	termination name is used to identify the ephemeral termination in a 
	virtual media gateway.

	This string is used as the first portion of a two-level ephemeral 
	termination naming scheme, used by the virtual media gateway.

	For example, if you assign the string rtpip1 to a virtual media 
	gateway, the ephemeral terminations in that virtual media gateway will
	look like rtpip1/0x0102030f. */
			IpEphTermNameType_111 ipEphTermName,
			/* The operational state of a virtual media gateway.

	enabled:  The virtual media gateway has established communication 
                  with a GC and is functioning correctly.
	disabled: The virtual media gateway is unable to communicate with 
                  the GC. There can be a number of reasons, for example:
                  - The virtual media gateway is performing an 
                    initial start.
                  - There is no active H.248 control link.
                  - The virtual media gateway is trying to attach to a GC by
                     sending a H.248 ServiceChange message to the GC. It 
                     will remain in this state while waiting for a response 
		     from the GC. */
			GwmOpState opState optional,
			/* Profile supported by the VMG. 
	The VMG indicates to the VMG Controller the profile supported by 
	the VMG. If the VMG Controller does not support the profile, the 
	operational state remains 'down'. */
			ProfileNameType_112 profileName optional,
			/* The string sent in the first service change command.
	This name overrides the system defined default value.
	This attribute is optional. */
			ProfileStringType_113 profileString optional,
			/* Indicates whether the RTCP packets are forwarded or not in a transcoder-free
	mode. This field is only relevant if the VMG is configured for IP. */
			RtcpForwardingType_114 rtcpForwarding optional,
			/* Turn RTCP on or off. */
			RtcpOnType_115 rtcpOn optional,
			/* The source address filtering.
	addressAndPort means checking both the source IP address and UDP port.
	Address means checking only the source IP address.
	Off means no call filtering. */
			SrcAddressFilteringType_116 srcAddressFiltering optional,
			/* Reference to an instance of the class Tone profile. */
			ObjectRef toneProfile,
			/* The number of dynamic video call establishment attempts.
	Family=MGW call counters. */
			GwmCounter32 videoCallsEstablAttempts optional,
			/* The number of failed dynamic video call establishment attempts.
	Family=MGW call counters. */
			GwmCounter32 videoCallsFailedEstablAttempts optional,
			/* The number of congested video call attempts.
	Family=MGW call counters. */
			GwmCounter32 videoCongestCallAttempts optional,
			/* Turn RTCP network packet loss statistic sending to enabled or diasabled. */
			RtcpNplrType_117 rtcpNplr optional,
			/* Turn RTCP jitter buffer discard rate statistic sending to enabled or diasabled. */
			RtcpJdrType_118 rtcpJdr optional,
			/* Turn RTCP round trip delay statistic sending to enabled or diasabled. */
			RtcpRtdType_119 rtcpRtd optional,
			/* A TDM resource containing a number of channels for voice and video
      connections, E1 on an MSP-STM1 interface (SDH sublink) or T1 on an
      MSP-OC3 interface (SONET sublink) or an E1 or T1 interface on an 
      MSP-16E1T1. 

      Either sonetSubLink, sdhSubLink, e1Interface or t1Interface must be set.

      Attribute admState must be set to 'locked' before the device can be 
      deleted. */
			record of record {
				/* The name of the device. */
				IdType_161 id,
				/* The number of active resources.	
	Family=Processing load statistics. */
				GwmGauge32 activeResources optional,
				/* The administrative state. */
				GwmDevAdmState admState optional,
				/* The default value for echo cancellation */
				DefaultEchoCancellationType_162 defaultEchoCancellation optional,
				/* Used to specify default speech encoding value for the device.
	This field must be specified when the device is created. */
				GwmEncoding defaultEncoding optional,
				/* Reference to an instance of the class E1 Interface. */
				ObjectRef e1Interface optional,
				/* Echo Window in kbit/s. */
				EchoDelayType_163 echoDelay optional,
				/* The number of failed call setup attempts.
	Family=Processing load statistics. */
				GwmCounter32 failedAttempts optional,
				/* A list of the time slots that have been 
	permanently configured with a loopback. This field can only be 
	specified when the device is created. */
				XSD.Token loopedTimeslots optional,
				/* The operational state. */
				GwmOpState opState optional,
				/* Reference to an instance of the class SDH sublink. */
				ObjectRef sdhSubLink optional,
				/* The number of call setup attempts.
	Family=Processing load statistics. */
				GwmCounter32 setupAttempts optional,
				/* Reference to an instance of the class SONET sublink. */
				ObjectRef sonetSubLink optional,
				/* Reference to an instance of the class T1 Interface. */
				ObjectRef t1Interface optional,
				/* This type describes the MG physical device type. */
				TypeType_164 type_,
				/* Indicates whether a device supports V5.2 package. 
	The package is used to set and read Sa7 bit of a V5.2 interface via 
	H.248.

	enabled      The V5.2 package support is enabled.
	disabled     The V5.2 package support is disabled.

	Note: This attribute is ignored for provisioned TDM connections. */
				V52Type_165 v52 optional,
				/* A physical termination on physical device for Semipermanent 
      connections.

      24 (on SONET sublink) or 31 (on SDH sublink) terminations are created by
      the system when a physical device is created. */
				record length(0 .. 31) of record {
					/* The time slot number. The range is 1-24 for T1 terminations and 1-31 for 
	E1 terminations. */
					ChannelIdType_166 channelId,
					/* The context id where the termination currently resides. */
					ContextIdType_167 contextId optional,
					/* Echo cancellation flag. */
					EchoCancelType_168 echoCancel optional,
					/* A list of the H.248 events that are currently being monitored. */
					GwmDisplayString monitoredEvents optional,
					/* Speech conversion flag. */
					SpeechConvType_169 speechConv optional,
					/* The time stamp set when the termination was added to a new context. */
					StartTimeType_170 startTime optional,
					/* A text string that identifies the H.248 tone id.
	An empty string indicates that no tone is being played. */
					GwmDisplayString toneId optional,
					/* A test termination is a physical termination that is reserved and used 
      for TSS audio test calls. */
					record {
						/* Time slot number. The range is 1-24 for T1 terminations and 1-31 for 
	E1 terminations. */
						ChannelIdType_171 channelId,
						/* The codec to be used by this test termination. The controller 
	chooses a codec during the call setup, but if a specific codec is 
	specified here, it will override the one sent by the controller. This 
	makes it possible to force the call to use a specific codec. */
						CodecType_172 codec optional,
						/* Comfort noise/Silence suppression. */
						CodecCNType_173 codecCN optional,
						/* Packetization time (in milliseconds). */
						CodecPtimeType_174 codecPtime optional,
						/* Tone relay. */
						CodecTRType_175 codecTR optional,
						/* Internal arrival jitter.
	Family=RTP/RTCP statistics. */
						GwmCounter32 interArrivalJitter optional,
						/* Packet propagation delay.	
	Family=RTP/RTCP statistics. */
						GwmCounter32 packsPropDelay optional,
						/* The number of RTP octets received.
	Family=RTP/RTCP statistics. */
						GwmCounter32 rtpOctetsReceived optional,
						/* The number of RTP octets sent.
	Family=RTP/RTCP statistics. */
						GwmCounter32 rtpOctetsSent optional,
						/* The number of RTP packets lost.
	Family=RTP/RTCP statistics. */
						GwmCounter32 rtpPacketsLost optional,
						/* The number of RTP packets received.
	Family=RTP/RTCP statistics. */
						GwmCounter32 rtpPacketsReceived optional,
						/* The number of RTP packets sent.
	Family=RTP/RTCP statistics. */
						GwmCounter32 rtpPacketsSent optional,
						/* Indicates whether the test termination is active in a call. Possible 
	values are active or idle */
						StateType_176 state optional,
						/* The termination name, i.e the concatenation: DeviceName/Channel. */
						GwmDisplayString terminationId optional
					} testTermination optional
				} physicalTermination_list
			} physicalDevice_list,
			/* A group of virtual IP terminations. */
			record of record {
				/* Name of the virtual IP device. */
				DeviceNameType_153 deviceName,
				/* Administrative state. */
				GwmDevAdmState admState optional,
				/* Reference to the IP interface. */
				ObjectRef localPayloadAddr,
				/* Echo Window in kbit/s. */
				EchoDelayType_154 echoDelay optional,
				/* The terminations are created when the Virtual IP Device is created. 
      The device is considered 'virtual' because it has no resources 
      on its own. The terminations get resources when they are configured.

      Configuring a termination is a two-step procedure:

      1 Operators in Domains A and B agree on IP addresses and UDP port 
        numbers that should be used for the leased lines.

      2 Operators in each domain configure the termination with the remote
	IP address and UDP port number.

      Once the configuration is made, resources are allocated and become 
      readable. */
				record length(31) of record {
					/* The name of the IP termination. */
					IpTermNameType_155 ipTermName,
					/* The local UDP port. */
					LocalPortType_156 localPort,
					/* Packetization time (in milliseconds). */
					PTimeType_157 pTime,
					/* The encoding and decoding standards for voice and data defined by the 
	Internet Assigned Number Authority (IANA). The payload type indicates 
	the codec used to compress and decompress speech or audio signals. 
	The possible payload types are:

        G.711 A-law
        G.711 u-law
        Clearchannel */
					PayloadTypeType_158 payloadType,
					/* The identifier for payload used in the RTP header when Payload type is
	Clearchannel. */
					PayloadTypeNumberType_159 payloadTypeNumber,
					/* The remote IP address. */
					InetAddressIPv4 remotePayloadAddr,
					/* The remote UDP port. Because the port is an RTP 
	port, the port number must be even. */
					RemotePortType_160 remotePort
				} virtualIpTermination_list
			} virtualIpDevice_list,
			/* The H.248 control link that is associated with the VMG.
      
      The control link must have admState set to 'locked' before it can be 
      deleted. */
			record {
				/* A globally unique VMG name. */
				NameType_120 name,
				/* IP address of the currently active GC. (vmgLinkRemoteAddress1 or
	vmgSecGcAddr1). */
				InetAddressIPv4 activeGcAddr optional,
				/* The port number of the currently active GC. (vmgLinkRemotePort or
	vmgSecGcPort). */
				ActiveGcPortType_121 activeGcPort optional,
				/* The administrative state of a H.248 control link.
	
	unlocked: The link is unlocked. Unlocking a link makes the 
	          Operational state change to enabled unless there is a link
		  fault.
        locked:   The link is locked. Locking a link makes the Operational 
	          state change to disabled and, consequently, the link can 
                  no longer be used. No new connections can be established 
                  on the link. */
				GwmLinkAdmState admState optional,
				/* The blade pair where the H.248 control link is terminated.
	
	Reference to the blade pair.
	
	Attribute admState must be locked when changed. */
				ObjectRef bladePair,
				/* The number of received chunks that have been discarded due to buffer 
	overflow in the receiving buffer.

	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.

	Family=SCTP statistics. */
				GwmCounter32 congestionRcvdDropped optional,
				/* The number of times a communication resume indication has been 
	sent to the user.

	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.

	Family=SCTP statistics. */
				GwmCounter32 congestionResume optional,
				/* The number of sent chunks that have been discarded due to buffer 
	overflow in the sending buffer.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 congestionSentDropped optional,
				/* The number of times a communication stop indication has been 
	sent to the user.

	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 congestionStop optional,
				/* The domain name for the media gateway. It is not the same as
         the media gateway name. This attribute is mandatory when the 
         MsgId format is 'domain-name'. Otherwise it is ignored. */
				DomainNameType_122 domainName optional,
				/* The encoding of outgoing H.248 messages. H.248 messages are encoded to 
	either of:

	compact text (short token) format
	pretty text (long token) format. 
	
	Recommended value: compacttext */
				EncodingType_123 encoding optional,
				/* The first IP address of the local SCTP end point. This address is 
	dynamically allocated from the IS subnet segment. */
				InetAddressIPv4 localAddress1 optional,
				/* The second IP address of the local SCTP end point. Two local IP
	addresses are used for multihoming. This address is dynamically 
	allocated from the IS subnet segment. */
				InetAddressIPv4 localAddress2 optional,
				/* The number of the port to which the Media Gateway listens for incoming messages.
	A VMG must use a unique port number.
	
	Recommended value: 2944 */
				LocalPortType_124 localPort optional,
				/* The maximum number of pending H.248 responses that will be accepted 
	from the GC. If the virtual media gateway receives more pending 
	responses than the configured value, the virtual media gateway will 
	assume that the transaction has failed. A value of MGC originated 
	pending limit received via H.248 from the GC overwrites the 
	configured value. 
	
	Attribute admState must be locked when changed.
	
	Recommended value: 2 */
				MGCOriginatedPendingLimitType_125 mGCOriginatedPendingLimit optional,
				/* The maximum number of pending H.248 responses that will be sent by a 
	virtual media gateway. If the virtual media gateway exceeds the 
	pending limit, the virtual media gateway will send a transaction 
	response with an error code. A value of vmgSentPendingLimit received 
	via H.248 from the GC overwrites the configured value.
	
	Attribute admState must be locked when changed.
	
	Recommended value: 3 */
				MGOriginatedPendingLimitType_126 mGOriginatedPendingLimit optional,
				/* The number of times a H.248 transaction may be retransmitted.
	
	Attribute admState must be locked when changed.
	
	Recommended value: 2 */
				MaxNumberOfRetransmissionsType_127 maxNumberOfRetransmissions optional,
				/* The maximum delay in milliseconds before the virtual media gateway 
	initiates a ServiceChange procedure towards the controller at 
	restart. The actual delay will be a random value between zero and the
	Maximum wait delay for a ServiceChange.
	
	Attribute admState must be locked when changed.
	
	Recommended value: 1000 */
				MaximumWaitDelayType_128 maximumWaitDelay optional,
				/* The address format on H.248 level.
        domain-address - The attribute vmgLinkLocalAddress1 or vmgSecGcAddr1
                         is used as H.248 MID.
        domain-name    - The attribute vmgDomainName is used as H.248 MID.
        device-name    - The attribute vmgName is used as H.248 MID. */
				MsgIdFormatType_129 msgIdFormat optional,
				/* The time, in milliseconds, within which the virtual media gateway 
	will send a H.248 transaction response or a pending response for a 
	transaction request initiated by the GC. A value of 
	normalMGExecutionTime received via H.248 from the GC overwrites the 
	configured value.
	
	Attribute admState must be locked when changed.
	
	Recommended value: 2000 */
				NormalMGExecutionTimeType_130 normalMGExecutionTime optional,
				/* The operational state of the control link.
	
	enabled:  The link is up and running. H.248 messages can be sent and
	          received over the link.
        disabled: The link is down. No H.248 message can be sent or received
	          over the link. */
				GwmOpState opState optional,
				/* Sending of pseudo rejects according to H.248.11.

	Recommended value: disabled */
				OverloadNotificationsType_131 overloadNotifications optional,
				/* The number of SCTP packets received with an invalid checksum.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 rcvdChecksumErrors optional,
				/* The umber of complete data chunks (user messages) received from
	the peers (retransmission included).
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 rcvdChunks optional,
				/* Theumber of datagrams received with chunk type id >0.

	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.

	Family=SCTP statistics. */
				GwmCounter32 rcvdCtrlChunks optional,
				/* The number of received SCTP packets.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 rcvdPackets optional,
				/* The number of reassembled user messages, incremented when the 
	first data chunk of a fragmented message is received.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 rcvdReassembled optional,
				/* The IP address of the controller to which the control link is connected.
	
	Attribute admState must be locked when changed. */
				InetAddressIPv4 remoteAddress,
				/* The port number for outgoing messages. Usually 2944 for text-encoded 
	messages,and 2945 for binary.
	
	Attribute admState must be locked when changed.
	
	Recommended value: 2944 */
				RemotePortType_132 remotePort optional,
				/* The number of data chunks retransmitted to the peers.
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 retransmittedChunks optional,
				/* The interval in seconds used by SCTP to monitor that the communication 
	with the VMG Controller is alive.
	
	Recommended value: 5 */
				SctpHbIntervalType_133 sctpHbInterval optional,
				/* The number of complete data chunks (user messages) sent to the peers
	(retransmission included).
	
	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.
	
	Family=SCTP statistics. */
				GwmCounter32 sentChunks optional,
				/* The umber of datagrams sent with chunk type id >0.

	If the control link has been locked or the Operational state is 
	disabled, the counter is restarts from zero.

	Family=SCTP statistics. */
				GwmCounter32 sentCtrlChunks optional,
				/* The number of fragmented user messages, incremented when the 
	first data chunk of a fragmented message is sent.

	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.

	Family=SCTP statistics. */
				GwmCounter32 sentFragmented optional,
				/* The number of sent SCTP packets.

	If the control link has been locked or the Operational state is 
	disabled, the counter restarts from zero.

	Family=SCTP statistics. */
				GwmCounter32 sentPackets optional,
				/* The estimated maximum response time, in milliseconds, for 95% of the 
	outgoing H.248 requests. T95 is used for overload protection.

	Attribute admState must be locked when changed.

	Recommended value: 500 */
				T95Type_134 t95 optional,
				/* The number of milliseconds that a transaction response is stored without 
	an acknowledgement.
	
	Attribute admState must be locked when changed.
	
	Recommended value: 16000 */
				TransactionRetentionTimerType_135 transactionRetentionTimer optional
			} h248SctpLink optional,
			/* The H.248 control link that is associated with the VMG.
      
      The control link must have admState set to 'locked' before it can be 
      deleted. */
			record {
				/* A globally unique VMG name. */
				NameType_136 name,
				/* The IP address of the currently active GC. (vmgLinkRemoteAddress1 or
	vmgSecGcAddr1). */
				InetAddressIPv4 activeGcAddr optional,
				/* The port number of the currently active GC. (vmgLinkRemotePort or
	vmgSecGcPort). */
				ActiveGcPortType_137 activeGcPort optional,
				/* The administrative state of an H.248 control link.
	
	unlocked: The link is unlocked. Unlocking a link makes the 
	          Operational state change to enabled unless there is a link
		  fault.
        locked:   The link is locked. Locking a link makes the Operational 
	          state change to disabled and, consequently, the link can 
                  no longer be used. No new connections can be established 
                  on the link. */
				GwmLinkAdmState admState optional,
				/* The blade pair where the H.248 control link is terminated.
	
	Reference to the blade pair.
	
	Attribute admState must be locked when changed. */
				ObjectRef bladePair,
				/* A value in 10 ms intervals specified by GC for the UDP inactivity timer.
	If not specified by the GC, this field is not defined, and the MGW 
	will use vmgLinkUdpInactTimer as the timeout. */
				GwmInteger32 currentUdpInactTimer optional,
				/* The domain name for the media gateway. It is not the same as
         the media gateway name. This attribute is mandatory when the 
         MsgId format is set to 'domain-name'. Otherwise it is ignored. */
				DomainNameType_138 domainName optional,
				/* The encoding of outgoing H.248 messages. H.248 messages are encoded to 
	either of:
	
	compact text (short token) format
	pretty text (long token) format. 
	
	Recommended value: compacttext */
				EncodingType_139 encoding optional,
				/* Indicates whether GC has enabled UDP link monitoring. */
				InactivityMonType_140 inactivityMon optional,
				/* The first IP address of the local UDP end point. This address is 
	dynamically allocated from the IS subnet segment. */
				InetAddressIPv4 localAddress1 optional,
				/* The Media Gateway listens for incoming messages on this port number.
	A VMG must use an unique port number.
	
	Recommended value: 2944 */
				LocalPortType_141 localPort optional,
				/* The maximum number of pending H.248 responses that will be accepted 
	from the GC. If the virtual media gateway receives more pending 
	responses than the configured value, the virtual media gateway will 
	assume that the transaction has failed. A value of MGC originated 
	pending limit received via H.248 from the GC overrides the 
	configured value. 
	
	Attribute admState must be locked when changed.
	
	Recommended value: 2 */
				MGCOriginatedPendingLimitType_142 mGCOriginatedPendingLimit optional,
				/* The maximum number of pending H.248 responses that will be sent by a 
	virtual media gateway. If the virtual media gateway exceeds the 
	pending limit, the virtual media gateway will send a transaction 
	response with an error code. A value of vmgSentPendingLimit received 
	via H.248 from the GC overwrites the configured value.
	
	Attribute admState must be locked when changed.
	
	Recommended value: 3 */
				MGOriginatedPendingLimitType_143 mGOriginatedPendingLimit optional,
				/* The number of times a H.248 transaction may be retransmitted.

	Attribute admState must be locked when changed.
	
	Recommended value: 2 */
				MaxNumberOfRetransmissionsType_144 maxNumberOfRetransmissions optional,
				/* The maximum delay in milliseconds before the virtual media gateway 
	initiates a ServiceChange procedure towards the controller at 
	restart. The actual delay will be a random value between zero and the
	Maximum wait delay for SC.
	
	Attribute admState must be locked when changed.
	
	Recommended value: 1000 */
				MaximumWaitDelayType_145 maximumWaitDelay optional,
				/* The address format of the H.248 level.
        domain-address - The attribute localAddress1 is used as H.248 MID.
        domain-name    - The attribute domainName is used as H.248 MID.
        device-name    - The attribute name is used as H.248 MID. */
				MsgIdFormatType_146 msgIdFormat optional,
				/* The time, in milliseconds, within which the virtual media gateway 
	will send an H.248 transaction response or a pending response for a 
	transaction request initiated by the GC. A value of 
	normalMGExecutionTime received via H.248 from the GC overwrites the 
	configured value.
	
	Attribute admState must be locked when cha */
				/* nged.
	
	Recommended value: 2000 */
				NormalMGExecutionTimeType_147 normalMGExecutionTime optional,
				/* The operational state of the control link.
	
	enabled:  The link is up and running. H.248 messages can be sent and
	          received over the link.
        disabled: The link is down. No H.248 message can be sent or received
	          over the link. */
				GwmOpState opState optional,
				/* Recommended value: disabled */
				OverloadNotificationsType_148 overloadNotifications optional,
				/* The IP address of the controller to which the control link is connected.
	
	Attribute admState must be locked when changed. */
				InetAddressIPv4 remoteAddress,
				/* The port number for outgoing messages. Usually 2944 for text-encoded 
	messages, and 2945 for binary.
	
	Attribute admState must be locked when changed.
	
	Recommended value: 2944 */
				RemotePortType_149 remotePort optional,
				/* The estimated maximum response time, in milliseconds, for 95% of the 
	outgoing H.248 requests. T95 is used for overload protection.

	Attribute admState must be locked when changed.

	Recommended value: 500 */
				T95Type_150 t95 optional,
				/* The number of milliseconds that a transaction response is stored without 
	an acknowledgement.
	
	Attribute admState must be locked when changed.
	
	Recommended value: 16000 */
				TransactionRetentionTimerType_151 transactionRetentionTimer optional,
				/* Default value in seconds for the UDP inactivity timer. 
	This is a default value which means that the value is used if the 
	value is not set by the GC.

	The UDP inactivity timer specifies how long the control link can 
	be idle with out receiving any H.248 message from GC. 
	The timer is reset every time a H.248 message is received. 
	If the timer expires the virtual media gateway initiates recovery 
	actions and re-registration with the GC

	Attribute admState must be locked when changed. */
				UdpInactTimerType_152 udpInactTimer optional
			} h248UdpLink optional,
			/* SPC provisioned from TeS with H.248 signaling.
      There are 3 types of SPCs supported:
      1 Physical to ephemeral termination; for example used to transport ISUP 
        signaling to TeS.
      2 Physical to physical termination.
      3 Physical to virtual IP termination; for inter-domain leased lines. */
			record of record {
				/* The context id. */
				IdType_177 id,
				/* Reference to the physical termination. */
				ObjectRef physTerm1,
				/* Reference to the physical termination.
	Only valid in SPC type phy-phy. */
				ObjectRef physTerm2 optional,
				/* Connection type. */
				SpcTypeType_178 spcType,
				/* Reference to the virtual IP termination.
	Only valid in SPC type phy-vip. */
				ObjectRef vIpTerm optional,
				/* An ephemeral termination that is created with the Signaled SPC, for example
      used to transport ISUP signaling to TeS.

      Read-only object containing the RTP/RTCP statistics for the SPC. */
				record {
					/* The context id */
					IdType_179 id,
					/* Internal arrival jitter.

	Family=RTP/RTCP statistics. */
					GwmCounter32 interArrivalJitter optional,
					/* Packet propagation delay.
	
	Family=RTP/RTCP statistics. */
					GwmCounter32 packsPropDelay optional,
					/* The number of received RTP octets.

	Family=RTP/RTCP statistics. */
					GwmCounter32 rtpOctetsReceived optional,
					/* The number of sent RTP octets.

	Family=RTP/RTCP statistics. */
					GwmCounter32 rtpOctetsSent optional,
					/* The number of lost RTP packets.

	Family=RTP/RTCP statistics. */
					GwmCounter32 rtpPacketsLost optional,
					/* The number of received RTP packets.

	Family=RTP/RTCP statistics. */
					GwmCounter32 rtpPacketsReceived optional,
					/* The number of sent RTP packets.

	Family=RTP/RTCP statistics. */
					GwmCounter32 rtpPacketsSent optional
				} ephemeralSpcTermination optional
			} signaledSpc_list,
			/* An SPC between physical channel on SDH/SONET sublink and physical channel
      on signaling interface. For example, used to transport ISUP signaling
      to IMT/MGC. */
			record of record {
				/* id */
				IdType_182 id,
				/* Termination operative status. */
				GwmOpState opState optional,
				/* Reference to the signaling channel. */
				ObjectRef physTerm1,
				/* Reference to the physical termination. */
				ObjectRef physTerm2
			} provisionedSpc_list
		} virtualMgw_list,
		/* Top object for function to monitor the quality of service on paths 
      through the IP network. The QoS metrics are based on RTP/RTCP 
      statistics. */
		record {
			/* The Administrative state of the QoS Monitoring function defines 
         whether the monitoring should be activated or not.

         If set to 'locked' (0): No sorting into NetworkPathGroups will be 
         made and no statistics be retrieved. All existing NetworkPathGroups 
         are removed.

         If set to 'unlocked' (1): The TDM-IP connections set up after the 
         administrative state is changed to unlocked will be sorted into 
         NetworkPathGroups, according to the prefixes and/or default masks 
         defined by the operator. For the NetworkPathGroups, statistics will 
         be retrieved. */
			AdminStateType_1 adminState optional,
			/* The Default local IP address prefix mask length is used when sorting a 
         TDM-IP connection if none of the operator defined IP address prefixes 
         (IpAddressPrefix) matches the local IP address of that connection. 
         Then defaultLocalPrefixMaskLength specifies the number of bits that 
         is relevant in the local IP address. 
         
         The attribute defaultLocalPrefixMaskLength is by default set to length
         32 (which implies that the whole local IP address is taken into 
         account when sorting the connection).

         Note! When changing defaultLocalPrefixMaskLength, streams set up after 
         the change will be sorted according to the new value, but already  
         existing streams will not be affected. */
			DefaultLocalPrefixMaskLengthType_2 defaultLocalPrefixMaskLength optional,
			/* The Default remote IP address prefix mask length is used when sorting a
         TDM-IP connection if none of the operator defined IP address prefixes 
         (IpAddressPrefix) matches the remote IP address of that connection. 
         Then defaultRemotePrefixMaskLength specifies the number of bits that  
         is relevant in the remote IP address.
 
         The attribute defaultRemotePrefixMaskLength is by default set to 0 
         (which implies that the remote IP address is disregarded when sorting  
         the connection).

         Note! When changing defaultRemotePre */
			/* fixMaskLength, streams set up after
         the change will be sorted according to the new value, but existing 
         streams will not be affected. */
			DefaultRemotePrefixMaskLengthType_3 defaultRemotePrefixMaskLength optional,
			/* When a connection is set up, the longest matching prefixes will  
      automatically be used when sorting the connection into the right  
      network path group. 
      If the operator defines a prefix that matches streams that already  
      exist, the prefix will only affect the sorting of the streams set up  
      after the prefix was created. It will not affect the already existing  
      streams.
      If none of the operator defined IP address prefixes matches the  
      IP address(es) specified for the connection being set up, the  
      Default local IP address prefix mask length (defaultLocalPrefixMaskLength)
      and/or the Default remote IP address prefix mask length 
      (defaultRemotePrefixMaskLength) will be used instead when sorting.
      
      Note! Some prefixes are not possible to create, namely prefixes matching
      loopback (127.0.0.0/8), broadcast (255.255.255.255/32), 
      multicast (224.0.0.0/4) or link local network (0.0.0.0/8) addresses. */
			record of record {
				/* This attribute is used, together with attribute
        Prefix mask length (prefixMaskLength) to specify an IP address  
        prefix to be used when sorting the TDM-IP connections. The attribute   
        prefixMaskLength specifies how many bits of attribute prefixAddress    
        that are relevant. */
				InetAddressIPv4 prefixAddress,
				/* This attribute is used, together with attribute IP address prefix 
        (prefixAddress), to specify an IP address prefix to be used when 
        sorting the TDM-IP connections. The attribute prefixMaskLength
        specifies how many bits of attribute prefixAddress that are 
        relevant. */
				MbqmPrefixMaskLength prefixMaskLength
			} ipAddressPrefix_list,
			/* The network is considered to be a collection of paths determined 
      by the local and remote IP addresses. 
      These paths will be grouped into network path groups by operator-defined 
      IP address prefixes (IpAddressPrefix) and/or default masks 
      (defaultLocalPrefixMaskLength and defaultRemotePrefixMaskLength).  
      A new NetworkPathGroup is dynamically created when a RTP media   
      connection with a new local and remote IP address prefix combination   
      is established. Connections established later on with the same IP  
      address prefix combination will be placed in the same group. */
			/* Once a day the unused NetworkPathGroups are removed.(A 
      NetworkPathGroup is considered as unused when there has been no 
      connection part of that group during the last 24 hours).

      The class NetworkPathGroup, contains two measurement families:

          * Weighted moving average RTP/RTCP statistics
            The weighted average is recalculated every 15 seconds by 
            subtracting the previously calculated Weighted Average (WA)
            from the Current Average Value (CAV), dividing the result by 
            6 and adding WA to it.
            NewWA = WA + (CAV - WA)/6
 
          * Accumulated RTP/RTCP statistics
            The counters in this family are accumulated since the 
            NetworkPathGroup was created.

      Note that counters for round-trip delay and remote side values require 
      that RTCP is active. */
			record of record {
				/* Network path group number. */
				NpgNoType_4 npgNo,
				/* This attribute, together with the attribute Local prefix mask length
        (localPrefixMaskLength), defines the local prefix for all media 
        streams included in the concerned NetworkPathGroup. The attribute 
        localPrefixMaskLength specifies how many bits of the attribute 
        localIpAddressPrefix that are relevant. */
				InetAddressIPv4 localIpAddressPrefix optional,
				/* This attribute, together with the attribute Local IP address prefix 
        (localIpAddressPrefix), defines the local prefix for all media streams 
        included in the NetworkPathGroup concerned.  
        The attribute localPrefixMaskLength specifies how many bits of the 
        attribute localIpAddressPrefix are relevant. */
				MbqmPrefixMaskLength localPrefixMaskLength optional,
				/* This attribute, together with the attribute Remote prefix mask length
        (remotePrefixMaskLength), defines the remote prefix for all media   
        streams included in the NetworkPathGroup concerned. 
        The attribute remotePrefixMaskLength specifies how many bits of the 
        attribute remoteIpAddressPrefix are relevant. */
				InetAddressIPv4 remoteIpAddressPrefix optional,
				/* This attribute, together with the attribute Remote IP address prefix 
        (remoteIpAddressPrefix), defines the remote prefix for all media streams
        included in the NetworkPathGroup concerned.  
        The attribute remotePrefixMaskLength specifies how many bits of the 
        attribute remoteIpAddressPrefix are relevant. */
				MbqmPrefixMaskLength remotePrefixMaskLength optional,
				/* The ratio of lost RTP packets in the audio streams. This 
        value is expressed as ratio in percent.
        Family=Weighted moving average RTP/RTCP statistics. */
				MbqmRatio avgAudioPLossRatio optional,
				/* The value of inter-arrival jitter, in milliseconds, 
        in the audio streams.
        Family=Weighted moving average RTP/RTCP statistics. */
				MbqmGauge32 avgAudioJitter optional,
				/* The round-trip delay, in milliseconds, based on RTCP reports of 
        the audio streams.
        Family=Weighted moving average RTP/RTCP statistics. */
				MbqmGauge32 avgAudioRoundTripDelay optional,
				/* The ratio of lost RTP packets at the remote side of the audio streams. 
        This value is expressed as ratio in percent.
        Family=Weighted moving average RTP/RTCP statistics. */
				MbqmRatio avgAudioPLossRemSideRatio optional,
				/* The value of inter-arrival jitter, in milliseconds, detected at the
        remote side of the audio streams. 
        Family=Weighted moving average RTP/RTCP statistics. */
				MbqmGauge32 avgAudioJitterRemSide optional,
				/* The ratio of lost RTP packets in the video streams. This 
        value is expressed as ratio in percent.
        Family=Weighted moving average RTP/RTCP statistics. */
				MbqmRatio avgVideoPLossRatio optional,
				/* The round-trip delay, in milliseconds, based on RTCP reports of 
        the video streams.
        Family=Weighted moving average RTP/RTCP statistics. */
				MbqmGauge32 avgVideoRoundTripDelay optional,
				/* The ratio, in percent, of lost RTP packets at the remote side of the 
        video streams. 
        Family=Weighted moving average RTP/RTCP statistics. */
				MbqmRatio avgVideoPLossRemSideRatio optional,
				/* The amount of received RTP packets for the audio streams. Lost packets 
        are not included.
        To get an average value, this counter can be divided by the counter 
        accumAudioNoOfReadings. The division will result in an average 
        per audio channel and 15-second period.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter64 accumAudioPackRcvd optional,
				/* The amount of RTP packets that are lost in the audio streams.
        To get an average value, this counter can be divided by the counter 
        accumAudioNoOfReadings. The division will result in an average 
        per audio channel and 15-second period.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter64 accumAudioPLoss optional,
				/* The value of inter-arrival jitter, in milliseconds, in the audio streams. 
        To get a statistic average value, this counter can be divided by the 
        counter accumAudioNoOfReadings.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter64 accumAudioJitter optional,
				/* The round-trip delay, in milliseconds, based on RTCP reports of 
        the audio streams.
        To get a statistic average value, this counter can be divided by the 
        counter accumAudioNoOfRTCPReadings.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter64 accumAudioRoundTripDelay optional,
				/* The amount of RTP packets received at the remote side of the audio 
        streams.
        To get an average value, this counter can be divided by the counter 
        accumAudioNoOfRTCPReadings. The division will result in an average 
        per audio channel and 15-second period.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter64 accumAudioPackRcvdRemSide optional,
				/* The amount of RTP packets that are lost at the remote side of the 
        audio streams.
        To get an average value, this counter can be divided by the counter 
        accumAudioNoOfRTCPReadings. The division will result in an average 
        per audio channel and 15-second period.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter64 accumAudioPLossRemSide optional,
				/* The value of inter-arrival jitter, in milliseconds, detected at the remote
        side of the audio streams. 
        To get a statistic average value, this counter can be divided by the 
        counter accumAudioNoOfRTCPReadings.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter64 accumAudioJitterRemSide optional,
				/* The amount of received RTP packets for the video streams. Lost packets 
        are not included.
        To get an average value, this counter can be divided by the counter 
        accumVideoNoOfReadings. The */
				/* division will result in an average 
        per video channel and 15-second period.        
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter64 accumVideoPackRcvd optional,
				/* The amount of RTP packets that are lost in the video streams.
        To get an average value, this counter can be divided by the counter 
        accumVideoNoOfReadings. The division will result in an average 
        per video channel and 15-second period.        
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter64 accumVideoPLoss optional,
				/* The round-trip delay, in milliseconds, based on RTCP reports of the video 
        streams.
        To get a statistic average value, this counter can be divided by the 
        counter accumVideoNoOfRTCPReadings.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter64 accumVideoRoundTripDelay optional,
				/* The amount of RTP packets received at the remote side of the video 
        streams.
        To get an average value, this counter can be divided by the counter 
        accumVideoNoOfRTCPReadings. The division will result in an average 
        per video channel and 15-second period.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter64 accumVideoPackRcvdRemSide optional,
				/* The amount of RTP packets that are lost at the remote side of the 
        video streams.
        To get an average value, this counter can be divided by the counter 
        accumVideoNoOfRTCPReadings. The division will result in an average 
        per video channel and 15-second period.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter64 accumVideoPLossRemSide optional,
				/* The number of accumulations done for the following audio counters: 
           * Received RTP packets 
           * Lost RTP packets
           * Jitter.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter32 accumAudioNoOfReadings optional,
				/* The number of accumulations done for the following RTCP audio counters:
           * Round-trip delay
           * Remote side Received RTP packets
           * Remote side RTP packets lost
           * Remote side Jitter.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter32 accumAudioNoOfRTCPReadings optional,
				/* The number of accumulations done for the following video counters: 
           * Received RTP packets
           * Lost RTP packets.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter32 accumVideoNoOfReadings optional,
				/* The number of accumulations done for the following RTCP video counters:
           * Round-trip delay
           * Remote side Received RTP packets
           * Remote side RTP packets lost.
        Family=Accumulated RTP/RTCP statistics. */
				MbqmCounter32 accumVideoNoOfRTCPReadings optional
			} networkPathGroup_list
		} qosMonitoring,
		/* The 3G-324M parameters. */
		record {
			/* The attribute is used to enable or disable continous AMR transmission towards the 3G-324M terminal. The attribute affects channels configured for transcoder-free AMR operation. Continuous AMR transmission means that AMR 'No Data' frames will be inserted in the audio stream towards the 3G-324M terminal if the channel runs out of audio data, for example, due to loss */
			/* of audio RTP packets in the IP network. The default value is 1 (enabled). */
			DspcpContinousAmrTrans continousAmrTrans optional,
			/* The size (number of bytes) of the video buffer per channel towards the 3G-324M terminal. The buffer absorbs network jitter and video bit rate peaks sent by the remote IP terminal. Additional received video RTP packets are discarded when reaching the limit. */
			VideoBufferSizeType_5 videoBufferSize optional,
			/* The video buffer congestion threshold (number of bytes). Additional received video inter frames (P-frames) will be discarded when reaching the limit.
        The value must be lower or equal to the VideoBufferSize attribute. */
			VideoBufferCongThrType_6 videoBufferCongThr optional,
			/* The attribute defines how to treat corrupt video data received from the 3G-324M terminal. Corrupt video data is here interpreted as data affected by bit errors in the radio network. The default value is 2. */
			DspcpCorruptVideoDataStrategy corruptVideoDataStrategy optional,
			/* The attribute defines which action to take upon detection of lost video data from the 3G-324M terminal. The default value is 4. */
			DspcpLostVideoDataStrategy lostVideoDataStrategy optional,
			/* The default skew between audio and video (in milliseconds), That is how much later the video stream is compared with audio. The value will be indicated by the MGW towards the IP terminal using RTCP, but will only be used if the 3G-324M terminal does not signal the skew. */
			AudioVideoDefaultSkewType_7 audioVideoDefaultSkew optional,
			/* The attribute is used to fine tune lip syncronization for interactive video calls towards the 3G-324M terminal. The value defines the delay (in milliseconds) to be applied to the audio stream. */
			LipSyncFineTuningInteractiveType_8 lipSyncFineTuningInteractive optional,
			/* The attribute is used to fine tune lip syncronization for streaming video calls towards the 3G-324M terminal. The value defines the delay in milliseconds to be applied to the audio stream. */
			LipSyncFineTuningStreamingType_9 lipSyncFineTuningStreaming optional,
			/* The attribute defines if forced video data segmentation will be applied when sending video towards the 3G-324M terminal. The specified value defines the maximum number of GOBs/slices to be carried by an H.223 AL-SDU. Having only a few GOBs/slices per AL-SDU increases the robustness to bit errors in the radio network to the cost of transmission capacity.
	0: disabled.
	1-13: number of GOBs/slices per AL-SDU. */
			ForcedVideoSegmType_10 forcedVideoSegm optional,
			/* The threshold when the video quality (as experienced by the end user using the 3G-324M terminal) is considered degraded due to low bit rate. The reason for the low bit rate can be packet loss in the IP network. The number of seconds, during which the call experiences a lower bit rate than the threshold, will be counted and referred to as degraded video quality seconds.		
	The value represents the threshold in kilo bits per second. */
			To3g324mDegVideoBitrateThrH263v1Type_11 to3g324mDegVideoBitrateThrH263v1 optional,
			/* The threshold when the video quality (as experienced by the end user using the IP terminal), is considered degraded due to low bit rate. The reason for the low bit rate can be bit errors in the error prone radio network. The number of seconds, during the call experiences a lower bit rate than the threshold, will be counted and referred to as degraded video quality seconds. 
	The value represents the threshold in kilo bits per second. */
			ToIpDegVideoBitrateThrH263v1Type_12 toIpDegVideoBitrateThrH263v1 optional,
			/* The threshold when the video quality (as experienced by the end user using the 3G-324M terminal) is considered degraded due to low bit rate. The reason for the low bit rate can be packet loss in the IP network. The number of seconds, during which the call experiences a lower bit rate than the threshold, will be counted and referred to as degraded video quality seconds.		
	The value represents the threshold in kilo bits per second. */
			To3g324mDegVideoBitrateThrH263v2Type_13 to3g324mDegVideoBitrateThrH263v2 optional,
			/* The threshold when the video quality (as experienced by the end user using the IP terminal), is considered degraded due to low bit rate. The reason for the low bit rate can be bit errors in the error-prone radio network. The number of seconds, during which the call experiences a lower bit rate than the threshold, will be counted and referred to as degraded video quality seconds. 
	The value represents the threshold in kilo bits per second. */
			ToIpDegVideoBitrateThrH263v2Type_14 toIpDegVideoBitrateThrH263v2 optional,
			/* The threshold when the video quality (as experienced by the end user using the 3G-324M terminal) is considered degraded due to low bit rate. The reason for the low bit rate can be packet loss in the IP network. The number of seconds, during which the call experiences a lower bit rate than the threshold, will be counted and referred to as degraded video quality seconds.		
	The value represents the threshold in kilo bits per second. */
			To3g324mDegVideoBitrateThrMPEG4Type_15 to3g324mDegVideoBitrateThrMPEG4 optional,
			/* The threshold when the video quality (as experienced by the end user using the IP terminal), is considered degraded due to low bit rate. The reason for the low bit rate can be bit errors in the error-prone radio network. The number of seconds, during which the call experiences a lower bit rate than the threshold, will be counted and referred to as degraded video quality seconds. 
	The value represents the threshold in kilo bits per second. */
			ToIpDegVideoBitrateThrMPEG4Type_16 toIpDegVideoBitrateThrMPEG4 optional,
			/* The threshold when the video quality (as experienced by the end user using the 3G-324M terminal) is considered degraded due to low bit rate. The reason for the low bit rate can be packet loss in the IP network. The number of seconds, during which the call experiences a lower bit rate than the threshold, will be counted and referred to as degraded video quality seconds.		
	The value represents the threshold in kilo bits per second. */
			To3g324mDegVideoBitrateThrH264Type_17 to3g324mDegVideoBitrateThrH264 optional,
			/* The threshold when the video quality (as experienced by the end user using the IP terminal), is considered degraded due to low bit rate. The reason for the low bit rate can be bit errors in the error-prone radio network. The number of seconds, during the call experiences a lower bit rate than the threshold, will be counted and referred to as degraded video quality seconds. 
	The value represents the threshold in kilo bits per second. */
			ToIpDegVideoBitrateThrH264Type_18 toIpDegVideoBitrateThrH264 optional,
			/* The threshold when a call towards the 3G-324M terminal should be considered having degraded video quality. 
        The value defines the percentage of degraded video quality seconds measured over the whole duration of the video call. */
			To3g324mDegVideoCallThrType_19 to3g324mDegVideoCallThr optional,
			/* The threshold  when a call towards the IP terminal should be considered having degraded video quality. 
        The value defines the percentage of degraded video quality seconds measured over the whole duration of the video call. */
			ToIpDegVideoCallThrType_20 toIpDegVideoCallThr optional,
			/* The initial delay (in milliseconds) to be applied before sending the first NSRP/WNSRP segment (H.245 message) towards the 3G-324M terminal. The delay is needed by some 3G-324M terminals to complete H.223 synchronization. */
			NsrpInitialDelayType_21 nsrpInitialDelay optional,
			/* Enables or disables Video Fast Update (VFU) generation towards the 3G-324M terminal. The default value is 1 (Enabled). */
			DspcpVfuGeneration vfuGeneration optional,
			/* The current number of active video calls (interactive + streaming). 
      	Family=Video call statistics. */
			DspcpCounter64 currActiveVideoCalls optional,
			/* The current number of active 3G-324M streaming calls. 
      	Family=Video call statistics. */
			DspcpCounter64 currActive3g324mStrCalls optional,
			/* The total number of successful video call setup requests. 
      	Family=Video call statistics. */
			DspcpCounter64 totSuccVideoCallSetupReq optional,
			/* The total number of rejected video call setup requests. 
      	Family=Video call statistics. */
			DspcpCounter64 totRejVideoCallSetupReq optional,
			/* The total number of successful video calls using video codec H.263v1. 
      	Family=Video call statistics. */
			DspcpCounter64 totSuccVideoCallsH263v1 optional,
			/* The total number of successful video calls using video codec H.263v2. 
        Family=Video call statistics. */
			DspcpCounter64 totSuccVideoCallsH263v2 optional,
			/* The total number of successful video calls using video codec H.264. 
      	Family=Video call statistics. */
			DspcpCounter64 totSuccVideoCallsH264 optional,
			/* The total number of successful video calls using video codec MPEG-4. 
      	Family=Video call statistics. */
			DspcpCounter64 totSuccVideoCallsMpeg4 optional,
			/* The total number of video calls where the received video stream did not include sync markers. (This means that forced segmentation could not be applied towards the 3G-324M terminals).
      	Family=Video quality statistics. */
			DspcpCounter64 totVideoCallsWithoutSyncMarkers optional,
			/* The total number of video calls experiencing lost video data due to that the video buffer maximum limit was reached on the IP-side.
        Family=Video quality statistics. */
			DspcpCounter64 totVideoCallsExpLostDataMaxLimit optional,
			/* The total number of video calls experiencing lost video data due to that the video buffer congestion threshold limit was reached on the IP-side.
      	Family=Video quality statistics. */
			DspcpCounter64 totVideoCallsExpLostDataCongThrLimit optional,
			/* The total number of degraded video quality calls in the IP to 3G-324M direction, that is, calls experiencing a higher ratio of degraded video quality seconds than specified by the degraded video quality call threshold.
        Family=Video quality statistics. */
			DspcpCounter64 totDegVideoQualCallsIpTo3g324m optional,
			/* The total number of degraded video quality calls in the 3G-324M to IP direction, that is calls experiencing a higher ratio of degraded video quality seconds than specified by the degraded video quality call threshold.
        Family=Video quality statistics. */
			DspcpCounter64 totDegVideoQualCalls3g324mToIp optional,
			/* The total number of degraded video quality seconds in the 3G-324M to IP direction.
        Family=Video quality statistics. */
			DspcpCounter64 totDegVideoQualSecsIpTo3g324m optional,
			/* The total number of degraded video quality seconds in the IP to 3G-324M direction.
        Family=Video quality statistics. */
			DspcpCounter64 totDegVideoQualSecs3g324mToIp optional
		} video3g324m
	} mgwApplication
}
with {
  variant "element";
  variant (blade_list) "untagged";
  variant (blade_list[-]) "name as 'Blade'";
  variant (blade_list[-].timingOutletSrc) "defaultForEmpty as c_defaultForEmpty_1";
  variant (blade_list[-].cp) "name as capitalized";
  variant (blade_list[-].e1Interface_list) "untagged";
  variant (blade_list[-].e1Interface_list[-]) "name as 'E1Interface'";
  variant (blade_list[-].e1Interface_list[-].port_) "name as 'port'";
  variant (blade_list[-].internalEthernetInterface_list) "untagged";
  variant (blade_list[-].internalEthernetInterface_list[-]) "name as 'InternalEthernetInterface'";
  variant (blade_list[-].internalEthernetInterface_list[-].port_) "name as 'port'";
  variant (blade_list[-].license_list) "untagged";
  variant (blade_list[-].license_list[-]) "name as 'License'";
  variant (blade_list[-].sdhInterface) "name as capitalized";
  variant (blade_list[-].sdhInterface.sdhSubLink_list) "untagged";
  variant (blade_list[-].sdhInterface.sdhSubLink_list[-]) "name as 'SdhSubLink'";
  variant (blade_list[-].signalingInterface) "name as capitalized";
  variant (blade_list[-].sonetInterface) "name as capitalized";
  variant (blade_list[-].sonetInterface.sonetPathLink_list) "untagged";
  variant (blade_list[-].sonetInterface.sonetPathLink_list[-]) "name as 'SonetPathLink'";
  variant (blade_list[-].sonetInterface.sonetPathLink_list[-].sonetSubLink_list) "untagged";
  variant (blade_list[-].sonetInterface.sonetPathLink_list[-].sonetSubLink_list[-]) "name as 'SonetSubLink'";
  variant (blade_list[-].t1Interface_list) "untagged";
  variant (blade_list[-].t1Interface_list[-]) "name as 'T1Interface'";
  variant (blade_list[-].t1Interface_list[-].port_) "name as 'port'";
  variant (system_) "name as 'System'";
  variant (system_.sctpParameters) "name as capitalized";
  variant (system_.sctpParameters.rtoInitial) "defaultForEmpty as c_defaultForEmpty_2";
  variant (system_.sctpParameters.rtoMin) "defaultForEmpty as c_defaultForEmpty_3";
  variant (system_.sctpParameters.rtoMax) "defaultForEmpty as c_defaultForEmpty_4";
  variant (system_.sctpParameters.rtoAlpha) "defaultForEmpty as c_defaultForEmpty_5";
  variant (system_.sctpParameters.rtoBeta) "defaultForEmpty as c_defaultForEmpty_6";
  variant (system_.sctpParameters.associationMaxRetrans) "defaultForEmpty as c_defaultForEmpty_7";
  variant (system_.sctpParameters.maxInitRetrans) "defaultForEmpty as c_defaultForEmpty_8";
  variant (system_.sctpParameters.maxShutdownRetrans) "defaultForEmpty as c_defaultForEmpty_9";
  variant (system_.sctpParameters.mtu) "defaultForEmpty as c_defaultForEmpty_10";
  variant (system_.sctpParameters.valCookieLife) "defaultForEmpty as c_defaultForEmpty_11";
  variant (system_.arpParameters) "name as capitalized";
  variant (system_.arpParameters.eventFilter) "defaultForEmpty as c_defaultForEmpty_12";
  variant (system_.arpParameters.fastSupInterval) "defaultForEmpty as c_defaultForEmpty_13";
  variant (system_.arpParameters.downSupInterval) "defaultForEmpty as c_defaultForEmpty_14";
  variant (system_.arpParameters.addrCollSupInterval) "defaultForEmpty as c_defaultForEmpty_15";
  variant (system_.arpParameters.addrCollEventFilterl) "defaultForEmpty as c_defaultForEmpty_16";
  variant (system_.bladePair_list) "untagged";
  variant (system_.bladePair_list[-]) "name as 'BladePair'";
  variant (system_.physicalTone_list) "untagged";
  variant (system_.physicalTone_list[-]) "name as 'PhysicalTone'";
  variant (system_.trafficSupervision) "name as capitalized";
  variant (system_.trafficSupervision.trafficSupervisionMaliciousPacketsThr) "defaultForEmpty as c_defaultForEmpty_17";
  variant (system_.trafficSupervision.trafficSupervisionMaliciousPacketsHys) "defaultForEmpty as c_defaultForEmpty_18";
  variant (system_.trafficSupervision.trafficSupervisionExcessiveBandwidthThr) "defaultForEmpty as c_defaultForEmpty_19";
  variant (system_.trafficSupervision.trafficSupervisionExcessiveBandwidthHys) "defaultForEmpty as c_defaultForEmpty_20";
  variant (system_.trafficSupervision.trafficSupervisionMediaStopSupervision) "defaultForEmpty as c_defaultForEmpty_21";
  variant (system_.trafficSupervision.trafficSupervisionMaliciousTrafficLog) "defaultForEmpty as c_defaultForEmpty_22";
  variant (system_.trafficSupervision.trafficSupervisionExcessiveTrafficLog) "defaultForEmpty as c_defaultForEmpty_23";
  variant (network) "name as capitalized";
  variant (network.h248Route_list) "untagged";
  variant (network.h248Route_list[-]) "name as 'H248Route'";
  variant (network.virtualRouter) "name as capitalized";
  variant (network.virtualRouter.ipInterface_list) "untagged";
  variant (network.virtualRouter.ipInterface_list[-]) "name as 'IpInterface'";
  variant (network.virtualRouter.ipInterface_list[-].address_) "name as 'address'";
  //variant (network.virtualRouter.ipInterface_list[-].payloadHost) "text 'true' as '1'";
  //variant (network.virtualRouter.ipInterface_list[-].payloadHost) "text 'false' as '0'";
  //variant (network.virtualRouter.ipInterface_list[-].arp) "text 'true' as '1'";
  //variant (network.virtualRouter.ipInterface_list[-].arp) "text 'false' as '0'";
  variant (network.virtualRouter.ipInterface_list[-].addressGroup) "defaultForEmpty as c_defaultForEmpty_24";
  //variant (network.virtualRouter.ipInterface_list[-].addressGroupOnly) "text 'true' as '1'";
  //variant (network.virtualRouter.ipInterface_list[-].addressGroupOnly) "text 'false' as '0'";
  variant (network.virtualRouter.nextHop_list) "untagged";
  variant (network.virtualRouter.nextHop_list[-]) "name as 'NextHop'";
  variant (network.virtualRouter.nextHop_list[-].address_) "name as 'address'";
  variant (network.virtualRouter.route_list) "untagged";
  variant (network.virtualRouter.route_list[-]) "name as 'Route'";
  variant (network.virtualRouter.route_list[-].type_) "name as 'type'";
  variant (mgwApplication) "name as capitalized";
  variant (mgwApplication.addressOffset) "defaultForEmpty as c_defaultForEmpty_25";
  variant (mgwApplication.payloadProfile_list) "untagged";
  variant (mgwApplication.payloadProfile_list[-]) "name as 'PayloadProfile'";
  variant (mgwApplication.payloadMapping_list) "untagged";
  variant (mgwApplication.payloadMapping_list[-]) "name as 'PayloadMapping'";
  variant (mgwApplication.signalingDevice_list) "untagged";
  variant (mgwApplication.signalingDevice_list[-]) "name as 'SignalingDevice'";
  variant (mgwApplication.signalingDevice_list[-].admState) "defaultForEmpty as c_defaultForEmpty_26";
  variant (mgwApplication.signalingDevice_list[-].signalingChannel_list) "untagged";
  variant (mgwApplication.signalingDevice_list[-].signalingChannel_list[-]) "name as 'SignalingChannel'";
  variant (mgwApplication.toneProfile_list) "untagged";
  variant (mgwApplication.toneProfile_list[-]) "name as 'ToneProfile'";
  variant (mgwApplication.toneProfile_list[-].h248Tone_list) "untagged";
  variant (mgwApplication.toneProfile_list[-].h248Tone_list[-]) "name as 'H248Tone'";
  variant (mgwApplication.toneProfile_list[-].h248Tone_list[-].defaultTimeout) "defaultForEmpty as c_defaultForEmpty_27";
  variant (mgwApplication.virtualSgw_list) "untagged";
  variant (mgwApplication.virtualSgw_list[-]) "name as 'VirtualSgw'";
  variant (mgwApplication.virtualSgw_list[-].trTimer) "defaultForEmpty as c_defaultForEmpty_28";
  variant (mgwApplication.virtualSgw_list[-].asp_list) "untagged";
  variant (mgwApplication.virtualSgw_list[-].asp_list[-]) "name as 'Asp'";
  variant (mgwApplication.virtualSgw_list[-].asp_list[-].admState) "defaultForEmpty as c_defaultForEmpty_29";
  variant (mgwApplication.virtualSgw_list[-].asp_list[-].hbTimer) "defaultForEmpty as c_defaultForEmpty_30";
  variant (mgwApplication.virtualSgw_list[-].asp_list[-].localPort) "defaultForEmpty as c_defaultForEmpty_31";
  variant (mgwApplication.virtualSgw_list[-].asp_list[-].outStreams) "defaultForEmpty as c_defaultForEmpty_32";
  variant (mgwApplication.virtualSgw_list[-].asp_list[-].remotePort) "defaultForEmpty as c_defaultForEmpty_33";
  variant (mgwApplication.virtualSgw_list[-].asp_list[-].sctpMode) "defaultForEmpty as c_defaultForEmpty_34";
  variant (mgwApplication.virtualSgw_list[-].sgwInterface_list) "untagged";
  variant (mgwApplication.virtualSgw_list[-].sgwInterface_list[-]) "name as 'SgwInterface'";
  variant (mgwApplication.virtualSgw_list[-].sgwInterface_list[-].admState) "defaultForEmpty as c_defaultForEmpty_29";
  variant (mgwApplication.virtualSgw_list[-].sgwInterface_list[-].idlePollTimer) "defaultForEmpty as c_defaultForEmpty_35";
  variant (mgwApplication.virtualSgw_list[-].sgwInterface_list[-].maxRetransmissions) "defaultForEmpty as c_defaultForEmpty_36";
  variant (mgwApplication.virtualSgw_list[-].sgwInterface_list[-].retransmissionTimer) "defaultForEmpty as c_defaultForEmpty_37";
  variant (mgwApplication.virtualSgw_list[-].sgwInterface_list[-].sendQueueLength) "defaultForEmpty as c_defaultForEmpty_38";
  variant (mgwApplication.virtualMgw_list) "untagged";
  variant (mgwApplication.virtualMgw_list[-]) "name as 'VirtualMgw'";
  variant (mgwApplication.virtualMgw_list[-].adapJitBufSize) "defaultForEmpty as c_defaultForEmpty_39";
  variant (mgwApplication.virtualMgw_list[-].detailedTermInfoPackage) "defaultForEmpty as c_defaultForEmpty_40";
  variant (mgwApplication.virtualMgw_list[-].echoDisablingMode) "defaultForEmpty as c_defaultForEmpty_41";
  variant (mgwApplication.virtualMgw_list[-].estAudioStatJitBuf) "defaultForEmpty as c_defaultForEmpty_42";
  variant (mgwApplication.virtualMgw_list[-].estDataStatJitBuf) "defaultForEmpty as c_defaultForEmpty_43";
  variant (mgwApplication.virtualMgw_list[-].profileName) "defaultForEmpty as c_defaultForEmpty_44";
  variant (mgwApplication.virtualMgw_list[-].rtcpForwarding) "defaultForEmpty as c_defaultForEmpty_45";
  variant (mgwApplication.virtualMgw_list[-].rtcpOn) "defaultForEmpty as c_defaultForEmpty_46";
  variant (mgwApplication.virtualMgw_list[-].srcAddressFiltering) "defaultForEmpty as c_defaultForEmpty_47";
  variant (mgwApplication.virtualMgw_list[-].rtcpNplr) "defaultForEmpty as c_defaultForEmpty_48";
  variant (mgwApplication.virtualMgw_list[-].rtcpJdr) "defaultForEmpty as c_defaultForEmpty_49";
  variant (mgwApplication.virtualMgw_list[-].rtcpRtd) "defaultForEmpty as c_defaultForEmpty_50";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list) "untagged";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-]) "name as 'PhysicalDevice'";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-].admState) "defaultForEmpty as c_defaultForEmpty_26";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-].defaultEchoCancellation) "defaultForEmpty as c_defaultForEmpty_51";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-].defaultEncoding) "defaultForEmpty as c_defaultForEmpty_52";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-].echoDelay) "defaultForEmpty as c_defaultForEmpty_53";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-].type_) "name as 'type'";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-].v52) "defaultForEmpty as c_defaultForEmpty_54";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-].physicalTermination_list) "untagged";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-].physicalTermination_list[-]) "name as 'PhysicalTermination'";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-].physicalTermination_list[-].testTermination) "name as capitalized";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-].physicalTermination_list[-].testTermination.codec) "defaultForEmpty as c_defaultForEmpty_55";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-].physicalTermination_list[-].testTermination.codecCN) "defaultForEmpty as c_defaultForEmpty_56";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-].physicalTermination_list[-].testTermination.codecPtime) "defaultForEmpty as c_defaultForEmpty_57";
  variant (mgwApplication.virtualMgw_list[-].physicalDevice_list[-].physicalTermination_list[-].testTermination.codecTR) "defaultForEmpty as c_defaultForEmpty_58";
  variant (mgwApplication.virtualMgw_list[-].virtualIpDevice_list) "untagged";
  variant (mgwApplication.virtualMgw_list[-].virtualIpDevice_list[-]) "name as 'VirtualIpDevice'";
  variant (mgwApplication.virtualMgw_list[-].virtualIpDevice_list[-].admState) "defaultForEmpty as c_defaultForEmpty_26";
  variant (mgwApplication.virtualMgw_list[-].virtualIpDevice_list[-].echoDelay) "defaultForEmpty as c_defaultForEmpty_59";
  variant (mgwApplication.virtualMgw_list[-].virtualIpDevice_list[-].virtualIpTermination_list) "untagged";
  variant (mgwApplication.virtualMgw_list[-].virtualIpDevice_list[-].virtualIpTermination_list[-]) "name as 'VirtualIpTermination'";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink) "name as capitalized";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink.admState) "defaultForEmpty as c_defaultForEmpty_29";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink.encoding) "defaultForEmpty as c_defaultForEmpty_60";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink.localPort) "defaultForEmpty as c_defaultForEmpty_61";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink.mGCOriginatedPendingLimit) "defaultForEmpty as c_defaultForEmpty_62";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink.mGOriginatedPendingLimit) "defaultForEmpty as c_defaultForEmpty_63";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink.maxNumberOfRetransmissions) "defaultForEmpty as c_defaultForEmpty_64";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink.maximumWaitDelay) "defaultForEmpty as c_defaultForEmpty_65";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink.msgIdFormat) "defaultForEmpty as c_defaultForEmpty_66";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink.normalMGExecutionTime) "defaultForEmpty as c_defaultForEmpty_67";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink.remotePort) "defaultForEmpty as c_defaultForEmpty_68";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink.sctpHbInterval) "defaultForEmpty as c_defaultForEmpty_69";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink.t95) "defaultForEmpty as c_defaultForEmpty_70";
  variant (mgwApplication.virtualMgw_list[-].h248SctpLink.transactionRetentionTimer) "defaultForEmpty as c_defaultForEmpty_71";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink) "name as capitalized";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink.admState) "defaultForEmpty as c_defaultForEmpty_29";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink.encoding) "defaultForEmpty as c_defaultForEmpty_72";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink.localPort) "defaultForEmpty as c_defaultForEmpty_73";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink.mGCOriginatedPendingLimit) "defaultForEmpty as c_defaultForEmpty_74";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink.mGOriginatedPendingLimit) "defaultForEmpty as c_defaultForEmpty_75";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink.maxNumberOfRetransmissions) "defaultForEmpty as c_defaultForEmpty_76";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink.maximumWaitDelay) "defaultForEmpty as c_defaultForEmpty_77";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink.msgIdFormat) "defaultForEmpty as c_defaultForEmpty_78";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink.normalMGExecutionTime) "defaultForEmpty as c_defaultForEmpty_79";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink.remotePort) "defaultForEmpty as c_defaultForEmpty_80";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink.t95) "defaultForEmpty as c_defaultForEmpty_81";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink.transactionRetentionTimer) "defaultForEmpty as c_defaultForEmpty_82";
  variant (mgwApplication.virtualMgw_list[-].h248UdpLink.udpInactTimer) "defaultForEmpty as c_defaultForEmpty_83";
  variant (mgwApplication.virtualMgw_list[-].signaledSpc_list) "untagged";
  variant (mgwApplication.virtualMgw_list[-].signaledSpc_list[-]) "name as 'SignaledSpc'";
  variant (mgwApplication.virtualMgw_list[-].signaledSpc_list[-].ephemeralSpcTermination) "name as capitalized";
  variant (mgwApplication.virtualMgw_list[-].provisionedSpc_list) "untagged";
  variant (mgwApplication.virtualMgw_list[-].provisionedSpc_list[-]) "name as 'ProvisionedSpc'";
  variant (mgwApplication.qosMonitoring) "name as capitalized";
  variant (mgwApplication.qosMonitoring.adminState) "defaultForEmpty as c_defaultForEmpty_84";
  variant (mgwApplication.qosMonitoring.defaultLocalPrefixMaskLength) "defaultForEmpty as c_defaultForEmpty_85";
  variant (mgwApplication.qosMonitoring.defaultRemotePrefixMaskLength) "defaultForEmpty as c_defaultForEmpty_86";
  variant (mgwApplication.qosMonitoring.ipAddressPrefix_list) "untagged";
  variant (mgwApplication.qosMonitoring.ipAddressPrefix_list[-]) "name as 'IpAddressPrefix'";
  variant (mgwApplication.qosMonitoring.networkPathGroup_list) "untagged";
  variant (mgwApplication.qosMonitoring.networkPathGroup_list[-]) "name as 'NetworkPathGroup'";
  variant (mgwApplication.video3g324m) "name as capitalized";
  variant (mgwApplication.video3g324m.videoBufferSize) "defaultForEmpty as c_defaultForEmpty_87";
  variant (mgwApplication.video3g324m.videoBufferCongThr) "defaultForEmpty as c_defaultForEmpty_88";
  variant (mgwApplication.video3g324m.audioVideoDefaultSkew) "defaultForEmpty as c_defaultForEmpty_89";
  variant (mgwApplication.video3g324m.lipSyncFineTuningInteractive) "defaultForEmpty as c_defaultForEmpty_90";
  variant (mgwApplication.video3g324m.lipSyncFineTuningStreaming) "defaultForEmpty as c_defaultForEmpty_91";
  variant (mgwApplication.video3g324m.forcedVideoSegm) "defaultForEmpty as c_defaultForEmpty_92";
  variant (mgwApplication.video3g324m.to3g324mDegVideoBitrateThrH263v1) "defaultForEmpty as c_defaultForEmpty_93";
  variant (mgwApplication.video3g324m.toIpDegVideoBitrateThrH263v1) "defaultForEmpty as c_defaultForEmpty_94";
  variant (mgwApplication.video3g324m.to3g324mDegVideoBitrateThrH263v2) "defaultForEmpty as c_defaultForEmpty_95";
  variant (mgwApplication.video3g324m.toIpDegVideoBitrateThrH263v2) "defaultForEmpty as c_defaultForEmpty_96";
  variant (mgwApplication.video3g324m.to3g324mDegVideoBitrateThrMPEG4) "defaultForEmpty as c_defaultForEmpty_97";
  variant (mgwApplication.video3g324m.toIpDegVideoBitrateThrMPEG4) "defaultForEmpty as c_defaultForEmpty_98";
  variant (mgwApplication.video3g324m.to3g324mDegVideoBitrateThrH264) "defaultForEmpty as c_defaultForEmpty_99";
  variant (mgwApplication.video3g324m.toIpDegVideoBitrateThrH264) "defaultForEmpty as c_defaultForEmpty_100";
  variant (mgwApplication.video3g324m.to3g324mDegVideoCallThr) "defaultForEmpty as c_defaultForEmpty_101";
  variant (mgwApplication.video3g324m.toIpDegVideoCallThr) "defaultForEmpty as c_defaultForEmpty_102";
  variant (mgwApplication.video3g324m.nsrpInitialDelay) "defaultForEmpty as c_defaultForEmpty_103";
};


}
with {
  encode "XML";
  variant "namespace as 'http://www.ericsson.com/is/isco/Mgw/R9B27'";
  variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
  variant "elementFormQualified";
}
