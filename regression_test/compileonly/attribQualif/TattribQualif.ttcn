/******************************************************************************
 * Copyright (c) 2000-2018 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html
 *
 * Contributors:
 *   Balasko, Jeno
 *   Raduly, Csaba
 *
 ******************************************************************************/
module TattribQualif {
// Test for HL25985

type record R {
  universal charstring u
}
with { display (u) "red" }

const R c_r := { u := "U!" }
with { display (u) "red" }

external const R ec_r
with { display (u) "red" }

template R t_r := { u := ? }
with { display (u) "red" }

modulepar R mp_r := { u := "UMP" }
with { display (u) "red" }


type record of universal charstring ROF
with { display ([-]) "blue" }

const ROF c_rof := { "U!" }
with { display ([-]) "blue" }

external const ROF ec_rof
with { display ([-]) "blue" }

template ROF t_rof := { ? }
with { display ([-]) "blue" }

modulepar ROF mp_rof := { "UMP" }
with { display ([-]) "red" }


/* "one", "two" & co. are accepted because teher is no semantic analysis
 * of attributes for the attribute itself in these cases */
type record of universal charstring ROFL
  with { display ([one]) "blue" }

const ROFL c_rofl := { "U!" }
  with { display ([two]) "blue" }

external const ROFL ec_rofl
  with { display ([three]) "blue" }

template ROFL t_rofl := { ? }
  with { display ([four]) "blue" }

}

