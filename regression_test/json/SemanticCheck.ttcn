/******************************************************************************
 * Copyright (c) 2000-2018 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html
 *
 * Contributors:
 *   Balasko, Jeno
 *   Baranyi, Botond
 *
 ******************************************************************************/
module SemanticCheck {

// Recursive type checks (type Inner doesn't have JSON encoding explicitly,
// but it can be encoded as part of Outer1)
type union Inner {
  integer num,
  charstring str
}

type record Outer1 {
  octetstring bytes,
  Inner rec
} with {
  encode "JSON";
}

external function f_enc1(in Outer1 x) return octetstring
  with { extension "prototype(convert) encode(JSON)" }

// Embedded union with the "as value" attribute
type record HasUnion
{
  charstring str,
  EmbeddedUnion val
}
with {
  encode "JSON";
}



type union EmbeddedUnion
{
  integer num,
  octetstring bytes
}
with {
  encode "JSON";
  variant "JSON: as value";
}

}
