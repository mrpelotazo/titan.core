/******************************************************************************
 * Copyright (c) 2000-2018 Ericsson Telecom AB
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html
 *
 * Contributors:
 *   Balasko, Jeno
 *
 ******************************************************************************/
module lazy_A {

import from lazy_defs all;
import from lazy_B all;

function f_lazy_Ai( in @lazy integer pl_i, in boolean pl_evalFlag) runs on MyComp {  
  if(pl_evalFlag){
    v_i:= pl_i; //expression evaluated
  }
  log(v_i);
}

function f_lazy_AAi( in @lazy integer pl_i, in boolean pl_evalFlag) runs on MyComp {  
  f_lazy_Ai(pl_i,pl_evalFlag); 
}

function f_lazy_ABi( in @lazy integer pl_i, in boolean pl_evalFlag) runs on MyComp {  
  f_lazy_Bi(pl_i,pl_evalFlag);
}


altstep as_lazy_Ai( in @lazy integer pl_i, in boolean pl_evalFlag) runs on MyComp { 
  [pl_evalFlag] PCO.receive {log("valami")}
  [else] { 
      if(pl_evalFlag) {
        v_i:=pl_i;
        log(pl_i);
      }      
  }

}

altstep as_lazy_ABi( in @lazy integer pl_i, in boolean pl_evalFlag) runs on MyComp { 
  [pl_evalFlag] PCO.receive {log("valami")}
  [else] { 
      f_lazy_Bi(pl_i,pl_evalFlag);  
    }      
}


}
